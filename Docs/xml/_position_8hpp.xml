<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_position_8hpp" kind="file">
    <compoundname>Position.hpp</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">ostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">queue</includes>
    <includes local="no">deque</includes>
    <includes local="no">SDL2/SDL_video.h</includes>
    <includes refid="_debug_8h" local="yes">Debug.h</includes>
    <includes refid="_util_8hpp" local="yes">Util.hpp</includes>
    <includes refid="_bounds_check_8hpp" local="yes">BoundsCheck.hpp</includes>
    <includes refid="_velocity_8hpp" local="yes">Velocity.hpp</includes>
    <includes refid="_game_random_8hpp" local="yes">GameRandom.hpp</includes>
    <includes refid="_basic_concurrency_8h" local="yes">BasicConcurrency.h</includes>
    <includedby refid="_configuration_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp</includedby>
    <includedby refid="_game_state_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.hpp</includedby>
    <includedby refid="main_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</includedby>
    <includedby refid="_util2_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util2.h</includedby>
    <includedby refid="_size_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Size.hpp</includedby>
    <includedby refid="_output_data_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/OutputData.hpp</includedby>
    <includedby refid="_game_object_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h</includedby>
    <includedby refid="_game_map_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameMap.hpp</includedby>
    <includedby refid="_navigator_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Navigator.hpp</includedby>
    <includedby refid="_world_controller_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.h</includedby>
    <includedby refid="_graphical_output_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.h</includedby>
    <includedby refid="_console_output_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/ConsoleOutput.hpp</includedby>
    <incdepgraph>
      <node id="1567">
        <label>iomanip</label>
      </node>
      <node id="1550">
        <label>queue</label>
      </node>
      <node id="1573">
        <label>limits</label>
      </node>
      <node id="1570">
        <label>BasicConcurrency.h</label>
        <link refid="_basic_concurrency_8h"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1558" relation="include">
        </childnode>
        <childnode refid="1566" relation="include">
        </childnode>
      </node>
      <node id="1568">
        <label>assert.h</label>
      </node>
      <node id="1552">
        <label>SDL2/SDL_video.h</label>
      </node>
      <node id="1569">
        <label>Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
      </node>
      <node id="1546">
        <label>cmath</label>
      </node>
      <node id="1559">
        <label>string</label>
      </node>
      <node id="1554">
        <label>fstream</label>
      </node>
      <node id="1548">
        <label>ostream</label>
      </node>
      <node id="1572">
        <label>GameRandom.hpp</label>
        <link refid="_game_random_8hpp"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1573" relation="include">
        </childnode>
        <childnode refid="1574" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
      </node>
      <node id="1574">
        <label>random</label>
      </node>
      <node id="1560">
        <label>vector</label>
      </node>
      <node id="1555">
        <label>../Control/Configuration.h</label>
        <link refid="_configuration_8h"/>
        <childnode refid="1552" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
        <childnode refid="1563" relation="include">
        </childnode>
      </node>
      <node id="1549">
        <label>sstream</label>
      </node>
      <node id="1565">
        <label>Velocity.hpp</label>
        <link refid="_velocity_8hpp"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1558" relation="include">
        </childnode>
        <childnode refid="1566" relation="include">
        </childnode>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1567" relation="include">
        </childnode>
        <childnode refid="1559" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1568" relation="include">
        </childnode>
        <childnode refid="1569" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
      </node>
      <node id="1557">
        <label>../Util/Util.hpp</label>
        <link refid="_util_8hpp"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1558" relation="include">
        </childnode>
        <childnode refid="1559" relation="include">
        </childnode>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1561" relation="include">
        </childnode>
      </node>
      <node id="1547">
        <label>iostream</label>
      </node>
      <node id="1551">
        <label>deque</label>
      </node>
      <node id="1563">
        <label>DefaultConfig.h</label>
        <link refid="_default_config_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1564">
        <label>BoundsCheck.hpp</label>
        <link refid="_bounds_check_8hpp"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
      </node>
      <node id="1566">
        <label>mutex</label>
      </node>
      <node id="1556">
        <label>chrono</label>
      </node>
      <node id="1561">
        <label>SDL2/SDL_rect.h</label>
      </node>
      <node id="1545">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp</label>
        <link refid="Position.hpp"/>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1552" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1564" relation="include">
        </childnode>
        <childnode refid="1565" relation="include">
        </childnode>
        <childnode refid="1572" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
      </node>
      <node id="1558">
        <label>thread</label>
      </node>
      <node id="1553">
        <label>Debug.h</label>
        <link refid="_debug_8h"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
      </node>
      <node id="1562">
        <label>../Output/DisplayData.h</label>
        <link refid="_display_data_8h"/>
      </node>
      <node id="1571">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1593">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="1617">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/ConsoleOutput.cpp</label>
        <link refid="_console_output_8cpp"/>
      </node>
      <node id="1611">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util2.h</label>
        <link refid="_util2_8h"/>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1595">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.cpp</label>
        <link refid="_character_8cpp"/>
      </node>
      <node id="1601">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameInterface.h</label>
        <link refid="_game_interface_8h"/>
        <childnode refid="1578" relation="include">
        </childnode>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1614">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Size.hpp</label>
        <link refid="_size_8hpp"/>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
      </node>
      <node id="1587">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.cpp</label>
        <link refid="_main_controller_8cpp"/>
      </node>
      <node id="1606">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/AssetFileIO.h</label>
        <link refid="_asset_file_i_o_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1582" relation="include">
        </childnode>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1610" relation="include">
        </childnode>
      </node>
      <node id="1581">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1580">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1582" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
      </node>
      <node id="1598">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.h</label>
        <link refid="_weapon_8h"/>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
      </node>
      <node id="1584">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.h</label>
        <link refid="_enemy_8h"/>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
      </node>
      <node id="1594">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.cpp</label>
        <link refid="_player_character_8cpp"/>
      </node>
      <node id="1590">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.cpp</label>
        <link refid="_n_p_c_8cpp"/>
      </node>
      <node id="1591">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.h</label>
        <link refid="_player_character_8h"/>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
      </node>
      <node id="1616">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/ConsoleOutput.hpp</label>
        <link refid="_console_output_8hpp"/>
        <childnode refid="1617" relation="include">
        </childnode>
      </node>
      <node id="1588">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.cpp</label>
        <link refid="_world_controller_8cpp"/>
      </node>
      <node id="1610">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/AssetFileIO.cpp</label>
        <link refid="_asset_file_i_o_8cpp"/>
      </node>
      <node id="1577">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.hpp</label>
        <link refid="_game_state_8hpp"/>
        <childnode refid="1578" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1606" relation="include">
        </childnode>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1613" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
      </node>
      <node id="1612">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameMap.hpp</label>
        <link refid="_game_map_8hpp"/>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
      </node>
      <node id="1613">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.cpp</label>
        <link refid="_velocity_8cpp"/>
      </node>
      <node id="1586">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.h</label>
        <link refid="_main_controller_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
      </node>
      <node id="1589">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.cpp</label>
        <link refid="_enemy_8cpp"/>
      </node>
      <node id="1583">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.h</label>
        <link refid="_n_p_c_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1584" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
      </node>
      <node id="1602">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameEvent.h</label>
        <link refid="_game_event_8h"/>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
      </node>
      <node id="1599">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.cpp</label>
        <link refid="_weapon_8cpp"/>
      </node>
      <node id="1609">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.cpp</label>
        <link refid="_game_state_8cpp"/>
      </node>
      <node id="1578">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp</label>
        <link refid="_input_8hpp"/>
        <childnode refid="1579" relation="include">
        </childnode>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1582" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
      </node>
      <node id="1596">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.h</label>
        <link refid="_graphical_output_8h"/>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1597" relation="include">
        </childnode>
      </node>
      <node id="1600">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp</label>
        <link refid="_game_object_8cpp"/>
      </node>
      <node id="1576">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp</label>
        <link refid="_configuration_8cpp"/>
      </node>
      <node id="1575">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp</label>
        <link refid="Position.hpp"/>
        <childnode refid="1576" relation="include">
        </childnode>
        <childnode refid="1577" relation="include">
        </childnode>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1614" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1616" relation="include">
        </childnode>
      </node>
      <node id="1604">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Ability.cpp</label>
        <link refid="_ability_8cpp"/>
      </node>
      <node id="1592">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.h</label>
        <link refid="_player_8h"/>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1593" relation="include">
        </childnode>
      </node>
      <node id="1608">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/TextOutput.hpp</label>
        <link refid="_text_output_8hpp"/>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1607">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/OutputData.hpp</label>
        <link refid="_output_data_8hpp"/>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
      </node>
      <node id="1615">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Navigator.hpp</label>
        <link refid="_navigator_8hpp"/>
        <childnode refid="1612" relation="include">
        </childnode>
      </node>
      <node id="1597">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.cpp</label>
        <link refid="_graphical_output_8cpp"/>
      </node>
      <node id="1579">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.cpp</label>
        <link refid="_input_8cpp"/>
      </node>
      <node id="1605">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameEvent.cpp</label>
        <link refid="_game_event_8cpp"/>
      </node>
      <node id="1582">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.h</label>
        <link refid="_character_8h"/>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
      </node>
      <node id="1603">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Ability.h</label>
        <link refid="_ability_8h"/>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
      </node>
      <node id="1585">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.h</label>
        <link refid="_world_controller_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1588" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_position" prot="public">Position</innerclass>
    <innerclass refid="struct_pos2" prot="public">Pos2</innerclass>
    <innerclass refid="struct_vectr" prot="public">Vectr</innerclass>
    <innerclass refid="struct_resolution" prot="public">Resolution</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_position_8hpp_1a1965eaca47dbf3f87acdafc2208f04eb" prot="public" static="no">
        <name>UP</name>
        <initializer>0, -1, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="30" column="9" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_position_8hpp_1a4193cd1c8c2e6ebd0e056fa2364a663f" prot="public" static="no">
        <name>DOWN</name>
        <initializer>0, 1, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="31" column="9" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_position_8hpp_1a437ef08681e7210d6678427030446a54" prot="public" static="no">
        <name>LEFT</name>
        <initializer>-1, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="32" column="9" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_position_8hpp_1a80fb826a684cf3f0d306b22aa100ddac" prot="public" static="no">
        <name>RIGHT</name>
        <initializer>1, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="33" column="9" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aa" prot="public" static="no">
        <name>Direction</name>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa257e6b7fcd6ccb860083f20eb9bd660d" prot="public">
          <name>north</name>
          <initializer>= &apos;n&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa035a454a75284b5dc261bd500ab311ed" prot="public">
          <name>south</name>
          <initializer>= &apos;s&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa1be79cd4775c5384e197f1031580b10a" prot="public">
          <name>east</name>
          <initializer>= &apos;e&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa9f771a3f89930d6b7e164e32a951dcb6" prot="public">
          <name>west</name>
          <initializer>= &apos;w&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa66043c15c39a5291ed7255362eadbeda" prot="public">
          <name>ne</name>
          <initializer>= north + east</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa936df56785b5dba0946fc67b922b6c5c" prot="public">
          <name>se</name>
          <initializer>= south + east</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaab48682a3eb74fee5906661994a00ba3b" prot="public">
          <name>sw</name>
          <initializer>= south + west</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaaf038e4013bba5ff72ca9a7adfe50fd45" prot="public">
          <name>nw</name>
          <initializer>= north + west</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa2e92812179538117065487dec330c52f" prot="public">
          <name>noDirection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="40" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="40" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_position_8hpp_1a57d0270087c9fb19927cacc70857870b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Vectr&lt; N &gt; *vec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; N &gt; *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="1301" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="1301" bodyend="1304"/>
      </memberdef>
      <memberdef kind="function" id="_position_8hpp_1a918bada5cca5229216fa9545d330fbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Vectr&lt; N &gt; &amp;vec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; N &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="1307" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="1307" bodyend="1310"/>
      </memberdef>
      <memberdef kind="function" id="_position_8hpp_1a4df255073e9e918679d349c54458ae23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; N &gt; &amp;</type>
        <definition>Vectr&lt;N&gt;&amp; operator+=</definition>
        <argsstring>(Vectr&lt; N &gt; &amp;rhs, Position&lt; N &gt; &amp;lhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; N &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="struct_position" kindref="compound">Position</ref>&lt; N &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="1414" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="1414" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="_position_8hpp_1a74b666432404363daea4d0485431269d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; N &gt; &amp;</type>
        <definition>Vectr&lt;N&gt;&amp; operator-=</definition>
        <argsstring>(Vectr&lt; N &gt; &amp;rhs, Position&lt; N &gt; &amp;lhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; N &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="struct_position" kindref="compound">Position</ref>&lt; N &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="1421" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="1421" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="_position_8hpp_1a78cdb74b8251b0ab2904043870b9289d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_position" kindref="compound">Position</ref>&lt; T &gt;</type>
        <definition>Position&lt;T&gt; transPosition</definition>
        <argsstring>(const Position&lt; T &gt; &amp;inGameWorld)</argsstring>
        <name>transPosition</name>
        <param>
          <type>const <ref refid="struct_position" kindref="compound">Position</ref>&lt; T &gt; &amp;</type>
          <declname>inGameWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translates a <ref refid="struct_position" kindref="compound">Position</ref> from within the World to a <ref refid="struct_position" kindref="compound">Position</ref> equivelent within the boundaries of the current screen. Gets the current GLOBAL_max_Position (and min) from World to calculate the ratio</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inGameWorld</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_position" kindref="compound">Position</ref> from within the World </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" line="1438" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp" bodystart="1438" bodyend="1453"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Header.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>World</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Adam<sp/>James<sp/>Leuer<sp/>on<sp/>3/11/14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Adam<sp/>James<sp/>Leuer.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GameWorld_Position_h</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GameWorld_Position_h</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL_video.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_debug_8h" kindref="compound">Debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_util_8hpp" kindref="compound">Util.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_bounds_check_8hpp" kindref="compound">BoundsCheck.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_velocity_8hpp" kindref="compound">Velocity.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_game_random_8hpp" kindref="compound">GameRandom.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_basic_concurrency_8h" kindref="compound">BasicConcurrency.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="_position_8hpp_1a1965eaca47dbf3f87acdafc2208f04eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UP<sp/>0,<sp/>-1,<sp/>0</highlight></codeline>
<codeline lineno="31" refid="_position_8hpp_1a4193cd1c8c2e6ebd0e056fa2364a663f" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DOWN<sp/>0,<sp/>1,<sp/>0</highlight></codeline>
<codeline lineno="32" refid="_position_8hpp_1a437ef08681e7210d6678427030446a54" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LEFT<sp/>-1,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="33" refid="_position_8hpp_1a80fb826a684cf3f0d306b22aa100ddac" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RIGHT<sp/>1,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;../Control/Configuration.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std<sp/>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/>{</highlight></codeline>
<codeline lineno="41" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa257e6b7fcd6ccb860083f20eb9bd660d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa257e6b7fcd6ccb860083f20eb9bd660d" kindref="member">north</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="42" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa035a454a75284b5dc261bd500ab311ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa035a454a75284b5dc261bd500ab311ed" kindref="member">south</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="43" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa1be79cd4775c5384e197f1031580b10a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa1be79cd4775c5384e197f1031580b10a" kindref="member">east</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa9f771a3f89930d6b7e164e32a951dcb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa9f771a3f89930d6b7e164e32a951dcb6" kindref="member">west</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa66043c15c39a5291ed7255362eadbeda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa66043c15c39a5291ed7255362eadbeda" kindref="member">ne</ref><sp/>=<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa257e6b7fcd6ccb860083f20eb9bd660d" kindref="member">north</ref><sp/>+<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa1be79cd4775c5384e197f1031580b10a" kindref="member">east</ref>,</highlight></codeline>
<codeline lineno="46" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa936df56785b5dba0946fc67b922b6c5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa936df56785b5dba0946fc67b922b6c5c" kindref="member">se</ref><sp/>=<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa035a454a75284b5dc261bd500ab311ed" kindref="member">south</ref><sp/>+<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa1be79cd4775c5384e197f1031580b10a" kindref="member">east</ref>,</highlight></codeline>
<codeline lineno="47" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaab48682a3eb74fee5906661994a00ba3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaab48682a3eb74fee5906661994a00ba3b" kindref="member">sw</ref><sp/>=<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa035a454a75284b5dc261bd500ab311ed" kindref="member">south</ref><sp/>+<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa9f771a3f89930d6b7e164e32a951dcb6" kindref="member">west</ref>,</highlight></codeline>
<codeline lineno="48" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaaf038e4013bba5ff72ca9a7adfe50fd45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaaf038e4013bba5ff72ca9a7adfe50fd45" kindref="member">nw</ref><sp/>=<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa257e6b7fcd6ccb860083f20eb9bd660d" kindref="member">north</ref><sp/>+<sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa9f771a3f89930d6b7e164e32a951dcb6" kindref="member">west</ref>,</highlight></codeline>
<codeline lineno="49" refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa2e92812179538117065487dec330c52f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_position_8hpp_1a224b9163917ac32fc95a60d8c1eec3aaa2e92812179538117065487dec330c52f" kindref="member">noDirection</ref><sp/></highlight><highlight class="comment">//the<sp/>best<sp/>direction!<sp/>(and<sp/>also<sp/>a<sp/>base<sp/>case<sp/>in<sp/>certain<sp/>recursive<sp/>algorithms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="63" refid="struct_position" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_position" kindref="compound">Position</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_position_1af908be922fc88d89d81be7d08d06f761" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/><ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="68" refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/><ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="69" refid="struct_position_1ac430da98504c2d4fd685c0363d728474" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/><ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="struct_position_1ae3a67f3e6f27a5594c181ca55d2b2ef3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1ae3a67f3e6f27a5594c181ca55d2b2ef3" kindref="member">Position</ref>()<sp/>:<sp/>x(0),<sp/>y(0),<sp/>z(0)<sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="struct_position_1a82e58f222f30e32c322d77bf9a20352b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a82e58f222f30e32c322d77bf9a20352b" kindref="member">Position</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/>x(0),<sp/>y(0),<sp/>z(0)<sp/>{<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="struct_position_1a01b903d664fb8ac74a9342116ce63287" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a01b903d664fb8ac74a9342116ce63287" kindref="member">Position</ref>(N<sp/>n)<sp/>:<sp/>x(n),<sp/>y(n),<sp/>z(n)<sp/>{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="struct_position_1a14a1831fd5c139aef062778edc05397d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a14a1831fd5c139aef062778edc05397d" kindref="member">Position</ref>(N<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/>x(n),<sp/>y(n),<sp/>z(n)<sp/>{<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="96" refid="struct_position_1a5f4ebf0205cb9e52e6f78784ca34d733" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a5f4ebf0205cb9e52e6f78784ca34d733" kindref="member">Position</ref>(<ref refid="class_fast_rand" kindref="compound">FastRand&lt;R&gt;</ref><sp/>rand)<sp/>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x(rand.nextValue()),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y(rand.nextValue()),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z(0)<sp/>{}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="105" refid="struct_position_1aa7e02fe8aeff4147c31184d981813f9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1aa7e02fe8aeff4147c31184d981813f9d" kindref="member">Position</ref>(<ref refid="class_fast_rand" kindref="compound">FastRand&lt;R&gt;</ref><sp/>rand,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x(rand.nextValue(check.min_X,<sp/>check.max_X)),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y(rand.nextValue(check.min_Y,<sp/>check.max_Y)),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z(0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkBounds(check)<sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="struct_position_1a7b49db88251912bf531acec16719eb98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a7b49db88251912bf531acec16719eb98" kindref="member">Position</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>other)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>(other.x,<sp/>other.y,<sp/>other.z)<sp/>{}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="struct_position_1adfe6dffd68cbf7f26945bfb1a307fa6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1adfe6dffd68cbf7f26945bfb1a307fa6c" kindref="member">Position</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>(other.x,<sp/>other.y,<sp/>other.z)<sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkBounds(check)<sp/>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="struct_position_1a370b6460b790eef270233cd7a3527721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a370b6460b790eef270233cd7a3527721" kindref="member">Position</ref>(<ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;&amp;<sp/>other)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>(other.x,<sp/>other.y,<sp/>other.z)<sp/>{}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="struct_position_1a1072383b9a22b17759b55f897986f011" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a1072383b9a22b17759b55f897986f011" kindref="member">Position</ref>(<ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>(other.x,<sp/>other.y,<sp/>other.z)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkBounds(check)<sp/>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="struct_position_1a410251ddeee4121896cac284e3d63de2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a410251ddeee4121896cac284e3d63de2" kindref="member">Position</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z)<sp/>:<sp/>x(x),<sp/>y(y),<sp/>z(z)<sp/>{}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155" refid="struct_position_1ae82fce224d7ef1599321a94b0a6f0cee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1ae82fce224d7ef1599321a94b0a6f0cee" kindref="member">Position</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/>x(x),<sp/>y(y),<sp/>z(z)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;checkBounds(check)<sp/>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162" refid="struct_position_1a21a4e620b847f606fe2e1c5244f0f78e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a21a4e620b847f606fe2e1c5244f0f78e" kindref="member">~Position</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/><ref refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>rhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>rhs.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;z<sp/>=<sp/>rhs.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181" refid="struct_position_1a580451251fc288d806524683fc85550a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/><ref refid="struct_position_1a580451251fc288d806524683fc85550a" kindref="member">operator=</ref>(<ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>rhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>rhs.y<sp/>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;z<sp/>=<sp/>rhs.z<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192" refid="struct_position_1ac895fed24f992ab43913207bd5fb7048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ac895fed24f992ab43913207bd5fb7048" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;x<sp/>==<sp/>rhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref>)<sp/>&amp;&amp;<sp/>(this-&gt;y<sp/>==<sp/>rhs.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref>)<sp/>&amp;&amp;<sp/>(this-&gt;z<sp/>==<sp/>rhs.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref>))<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>true<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>false<sp/>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="struct_position_1a41b600238d7f4b174ed2c7dcd1ff8214" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a41b600238d7f4b174ed2c7dcd1ff8214" kindref="member">operator==</ref>(<ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;x<sp/>==<sp/>rhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref>)<sp/>&amp;&amp;<sp/>(this-&gt;y<sp/>==<sp/>rhs.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref>)<sp/>&amp;&amp;<sp/>(this-&gt;z<sp/>==<sp/>rhs.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref>))<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>true<sp/>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>false<sp/>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="struct_position_1a4be02284917613eaa574c3ebbbbbfcb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a4be02284917613eaa574c3ebbbbbfcb8" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(this-&gt;operator==(rhs))<sp/>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214" refid="struct_position_1acaf1ee869c4bee9e4a6b152eee96efda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_position_1acaf1ee869c4bee9e4a6b152eee96efda" kindref="member">operator!=</ref>(<ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(this-&gt;operator==(rhs))<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218" refid="struct_position_1acee225b72b18e2468a8015fe3585958e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/><ref refid="struct_position_1acee225b72b18e2468a8015fe3585958e" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>temp<sp/>=<sp/><ref refid="struct_position" kindref="compound">Position</ref>(this-&gt;x,<sp/>this-&gt;y,<sp/>this-&gt;z)<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>+<sp/>rhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>+<sp/>rhs.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>=<sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>+<sp/>rhs.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229" refid="struct_position_1adc25e016e77688fabb733febd70dc3da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/><ref refid="struct_position_1adc25e016e77688fabb733febd70dc3da" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>temp<sp/>=<sp/><ref refid="struct_position" kindref="compound">Position</ref>(this-&gt;x,<sp/>this-&gt;y,<sp/>this-&gt;z)<sp/>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>-<sp/>rhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>-<sp/>rhs.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>=<sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>-<sp/>rhs.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240" refid="struct_position_1a95f98be024d028f87681c12092afcb28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/><ref refid="struct_position_1a95f98be024d028f87681c12092afcb28" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>temp<sp/>=<sp/><ref refid="struct_position" kindref="compound">Position</ref>(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>*<sp/>n<sp/>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>*<sp/>n<sp/>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>=<sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>*<sp/>n<sp/>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251" refid="struct_position_1a51bc2b1d3ba86057fc8605208d2fb4cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/><ref refid="struct_position_1a51bc2b1d3ba86057fc8605208d2fb4cf" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>temp<sp/>=<sp/><ref refid="struct_position" kindref="compound">Position</ref>(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>/<sp/>n<sp/>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>=<sp/>temp.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>/<sp/>n<sp/>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>=<sp/>temp.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>/<sp/>n<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>O,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="263" refid="struct_position_1aa839563739359a38d864a2d4a4e616e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;P&gt;</ref><sp/>*<sp/><ref refid="struct_position_1aa839563739359a38d864a2d4a4e616e3" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;P&gt;</ref><sp/>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;O&gt;</ref><sp/>*<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>x<sp/>=<sp/>lhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>+<sp/>rhs-&gt;<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>y<sp/>=<sp/>lhs.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>+<sp/>rhs-&gt;<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>z<sp/>=<sp/>lhs.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>+<sp/>rhs-&gt;<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;P&gt;</ref>(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>O,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="273" refid="struct_position_1a952651ce7dae93907c21bf178d58dd94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;P&gt;</ref><sp/>*<sp/><ref refid="struct_position_1a952651ce7dae93907c21bf178d58dd94" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;P&gt;</ref><sp/>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;O&gt;</ref><sp/>*<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>x<sp/>=<sp/>lhs.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>-<sp/>rhs-&gt;<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>y<sp/>=<sp/>lhs.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>-<sp/>rhs-&gt;<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>z<sp/>=<sp/>lhs.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>-<sp/>rhs-&gt;<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;P&gt;</ref>(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282" refid="struct_position_1a7adf840eaa5364c5fdddbc148fcbbdee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>const<sp/>Position&lt;N&gt;<sp/>*<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Position:<sp/>X<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos-&gt;<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos-&gt;y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Z<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos-&gt;z<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287" refid="struct_position_1a8d4dbe2f6bca09c4129d69b47bc4b2ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>const<sp/>Position&lt;N&gt;<sp/>&amp;<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Position:<sp/>X<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos.y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Z<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos.z<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="struct_position_1af6cf3e9c2a535e8d988739e075ca76c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1af6cf3e9c2a535e8d988739e075ca76c1" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>x<sp/>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>y<sp/>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;z<sp/>=<sp/>z<sp/>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="struct_position_1abecde70eb2df3f274e171a06386feb4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1abecde70eb2df3f274e171a06386feb4c" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkBounds(&amp;check)<sp/>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="struct_position_1a03ff8fcf39be2dc2ac547b9849a03fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a03ff8fcf39be2dc2ac547b9849a03fd6" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(other.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref>,<sp/>other.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref>,<sp/>other.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref>)<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="struct_position_1ae7ad6637ca006d95867059c5405c2fdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ae7ad6637ca006d95867059c5405c2fdc" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(other.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref>,<sp/>other.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref>,<sp/>other.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref>)<sp/>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkBounds(&amp;check)<sp/>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="struct_position_1a90a919f4e1d7cdd0fcc50101d4c9dbd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a90a919f4e1d7cdd0fcc50101d4c9dbd0" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>n)<sp/>{<sp/><ref refid="struct_position_1a90a919f4e1d7cdd0fcc50101d4c9dbd0" kindref="member">setAll</ref>(n,<sp/>n,<sp/>n)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="struct_position_1ae27c3958d1827450e434a8b2bb4d1092" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ae27c3958d1827450e434a8b2bb4d1092" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_position_1ae27c3958d1827450e434a8b2bb4d1092" kindref="member">setAll</ref>(n,<sp/>n,<sp/>n,<sp/>check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="struct_position_1ad625d6ef1db5f72883c6e2834f7cae81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ad625d6ef1db5f72883c6e2834f7cae81" kindref="member">setAllZero</ref>()<sp/>{<sp/>setAll(0)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323" refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/><ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;x<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325" refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/><ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;y<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327" refid="struct_position_1a1d1171c9049c9a24be31bdb40e8662c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/><ref refid="struct_position_1a1d1171c9049c9a24be31bdb40e8662c0" kindref="member">getZ</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;z<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="struct_position_1a7c5b646e881251041b2373b0b9ee235b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a7c5b646e881251041b2373b0b9ee235b" kindref="member">getIntX</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>roundF&lt;N,<sp/>int&gt;(x)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="struct_position_1a2ddf4656749e96c1ad4bfec272521364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a2ddf4656749e96c1ad4bfec272521364" kindref="member">getIntY</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>roundF&lt;N,<sp/>int&gt;(y)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="struct_position_1a41e19d862bf29d4aef2e25fbdd58f6b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a41e19d862bf29d4aef2e25fbdd58f6b2" kindref="member">getIntZ</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>roundF&lt;N,<sp/>int&gt;(z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344" refid="struct_position_1a8ff94b86d9853ec1323129e2864a2f8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a8ff94b86d9853ec1323129e2864a2f8d" kindref="member">setX</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x)<sp/>{<sp/>setAll(x,<sp/>this-&gt;y,<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346" refid="struct_position_1af1ca6db4823de1c43f874e72ce2b9b66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1af1ca6db4823de1c43f874e72ce2b9b66" kindref="member">setX</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_position_1af1ca6db4823de1c43f874e72ce2b9b66" kindref="member">setX</ref>(x)<sp/>;<sp/>checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348" refid="struct_position_1ab816c27eddb9c5d4951edfbb78dc7233" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ab816c27eddb9c5d4951edfbb78dc7233" kindref="member">setY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y)<sp/>{<sp/>setAll(this-&gt;x,<sp/>y,<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350" refid="struct_position_1a45f946eeadc660099a5c38f882e9074e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a45f946eeadc660099a5c38f882e9074e" kindref="member">setY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_position_1a45f946eeadc660099a5c38f882e9074e" kindref="member">setY</ref>(y)<sp/>;<sp/>checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352" refid="struct_position_1aa2c5e74e13456b840ce39ae8fc09c59b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1aa2c5e74e13456b840ce39ae8fc09c59b" kindref="member">setZ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z)<sp/>{<sp/>setAll(this-&gt;x,<sp/>this-&gt;y,<sp/>z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354" refid="struct_position_1ac3dd191a672bd9696e6bb2ccf3a622e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ac3dd191a672bd9696e6bb2ccf3a622e2" kindref="member">setZ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_position_1ac3dd191a672bd9696e6bb2ccf3a622e2" kindref="member">setZ</ref>(z)<sp/>;<sp/>checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="struct_position_1aca2bf935dd53d012fe3529b81a111e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1aca2bf935dd53d012fe3529b81a111e23" kindref="member">x_plus_one</ref>()<sp/>{<sp/>setX(x++)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="struct_position_1a86f84c270f732ee8a285f0d8672529ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a86f84c270f732ee8a285f0d8672529ad" kindref="member">x_plus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setX(x++)<sp/>;<sp/>checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="struct_position_1aa5715ebd88d355988b0c0cf03814a271" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1aa5715ebd88d355988b0c0cf03814a271" kindref="member">x_minus_one</ref>()<sp/>{<sp/>setX(x--)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="struct_position_1ab96af6ce73be6d52132f4d4e5bf77485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ab96af6ce73be6d52132f4d4e5bf77485" kindref="member">x_minus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setX(x--)<sp/>;<sp/>checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="struct_position_1a9d1ef5169f798099ab268f62c5acc9e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a9d1ef5169f798099ab268f62c5acc9e1" kindref="member">y_plus_one</ref>()<sp/>{<sp/>setY(y++)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="struct_position_1a4ac4b6f9dc9ab06e64ce7b16c5dcdfaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a4ac4b6f9dc9ab06e64ce7b16c5dcdfaa" kindref="member">y_plus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setY(y++)<sp/>;<sp/>checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="struct_position_1a9979106cd4c31b19ecbb831a91ec218a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a9979106cd4c31b19ecbb831a91ec218a" kindref="member">y_minus_one</ref>()<sp/>{<sp/>setY(y--)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="struct_position_1a0c0ff46cc0329a0e0109084fb1856233" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a0c0ff46cc0329a0e0109084fb1856233" kindref="member">y_minus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setY(y--)<sp/>;<sp/>checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384" refid="struct_position_1a71640a61fe271ddc9e2451037a11a86d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a71640a61fe271ddc9e2451037a11a86d" kindref="member">modify</ref>(N<sp/>delta_x,<sp/>N<sp/>delta_y,<sp/>N<sp/>delta_z)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempX<sp/>=<sp/>this-&gt;x<sp/>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempY<sp/>=<sp/>this-&gt;y<sp/>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempZ<sp/>=<sp/>this-&gt;z<sp/>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempX<sp/>+=<sp/>delta_x<sp/>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempY<sp/>+=<sp/>delta_y<sp/>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempZ<sp/>+=<sp/>delta_z<sp/>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(tempX,<sp/>tempY,<sp/>tempZ)<sp/>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405" refid="struct_position_1aa3e6b4d0e63e42c91332ffba79359252" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1aa3e6b4d0e63e42c91332ffba79359252" kindref="member">modify</ref>(N<sp/>delta_x,<sp/>N<sp/>delta_y,<sp/>N<sp/>delta_z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempX<sp/>=<sp/>this-&gt;x<sp/>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempY<sp/>=<sp/>this-&gt;y<sp/>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempZ<sp/>=<sp/>this-&gt;z<sp/>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempX<sp/>+=<sp/>delta_x<sp/>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempY<sp/>+=<sp/>delta_y<sp/>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempZ<sp/>+=<sp/>delta_z<sp/>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(tempX,<sp/>tempY,<sp/>tempZ,<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="struct_position_1a81dd41480a91a0817c1937afef4cb644" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a81dd41480a91a0817c1937afef4cb644" kindref="member">moveHere</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="struct_position_1a4fa2e78d31d34daba2d555394c4e4b80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a4fa2e78d31d34daba2d555394c4e4b80" kindref="member">moveHere</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveHere(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkBounds(check)<sp/>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="struct_position_1a3840e7e0c17531cd254810fe62340f52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a3840e7e0c17531cd254810fe62340f52" kindref="member">moveHere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(other.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref>,<sp/>other.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref>,<sp/>other.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref>)<sp/>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="struct_position_1aa268c21ec09dbe0b579b0854ef74ddb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1aa268c21ec09dbe0b579b0854ef74ddb9" kindref="member">moveHere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveHere(other)<sp/>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkBounds(check)<sp/>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435" refid="struct_position_1acbec1420f0dc8f505c745b399ae93234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>N<sp/><ref refid="struct_position_1acbec1420f0dc8f505c745b399ae93234" kindref="member">calcDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>here,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>&amp;<sp/>there)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>dx<sp/>=<sp/>here.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>-<sp/>there.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>dy<sp/>=<sp/>here.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>-<sp/>there.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>nx<sp/>=<sp/><ref refid="_util_8hpp_1a02d80524463f5c93d38d39344b46cd36" kindref="member">setUnsigned</ref>(dx)<sp/>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>ny<sp/>=<sp/><ref refid="_util_8hpp_1a02d80524463f5c93d38d39344b46cd36" kindref="member">setUnsigned</ref>(dy)<sp/>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>dist<sp/>=<sp/><ref refid="_util_8hpp_1afbaed4b0d68594b345e48b9f4344bd57" kindref="member">pythag</ref>(nx,<sp/>ny)<sp/>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist<sp/>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444" refid="struct_position_1a4ebba65bc16bffa822c653522c5d7dcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_position_1a4ebba65bc16bffa822c653522c5d7dcb" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>ss<sp/>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>this<sp/>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str()<sp/>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="struct_position_1afd2bfedb3b315412862103233665fc02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1afd2bfedb3b315412862103233665fc02" kindref="member">checkBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>*<sp/>check,<sp/>N<sp/>objWidth<sp/>=<sp/>0,<sp/>N<sp/>objHeight<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;x<sp/></highlight><highlight class="comment">/*+<sp/>objWidth*/</highlight><highlight class="normal">)<sp/>&gt;=<sp/>check-&gt;<ref refid="struct_bounds_check_1a8ed31dd874e9ee585a08018225adae4a" kindref="member">max_X</ref>)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>X<sp/>value<sp/>was<sp/>over<sp/>the<sp/>global<sp/>limit.<sp/>Reducing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>check-&gt;<ref refid="struct_bounds_check_1a8ed31dd874e9ee585a08018225adae4a" kindref="member">max_X</ref><sp/></highlight><highlight class="comment">/*-<sp/>objWidth*/</highlight><highlight class="normal"><sp/>-<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;x<sp/></highlight><highlight class="comment">/*-<sp/>objWidth*/</highlight><highlight class="normal"><sp/>&lt;<sp/>check-&gt;<ref refid="struct_bounds_check_1a7ddafd0ac07f6ddfbd357f8bd440e952" kindref="member">min_X</ref>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>X<sp/>value<sp/>was<sp/>under<sp/>the<sp/>global<sp/>minimum.<sp/>Increasing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>check-&gt;<ref refid="struct_bounds_check_1a7ddafd0ac07f6ddfbd357f8bd440e952" kindref="member">min_X</ref><sp/></highlight><highlight class="comment">/*+<sp/>objWidth*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;y<sp/></highlight><highlight class="comment">/*+<sp/>objHeight*/</highlight><highlight class="normal">)<sp/>&gt;=<sp/>check-&gt;<ref refid="struct_bounds_check_1a569066d0fc5179aefddf172605682e72" kindref="member">max_Y</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Y<sp/>value<sp/>was<sp/>over<sp/>the<sp/>global<sp/>limit.<sp/>Reducing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>check-&gt;<ref refid="struct_bounds_check_1a569066d0fc5179aefddf172605682e72" kindref="member">max_Y</ref><sp/></highlight><highlight class="comment">/*-<sp/>objHeight*/</highlight><highlight class="normal"><sp/>-<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;y<sp/>&lt;<sp/>check-&gt;min_Y)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Y<sp/>value<sp/>was<sp/>under<sp/>the<sp/>global<sp/>minimum.<sp/>Increasing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>check-&gt;<ref refid="struct_bounds_check_1ab70f0f1fe16a50a94c7e937ce892ef38" kindref="member">min_Y</ref><sp/>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487" refid="struct_position_1aaf90e9e75b999bf2c43064feaa3694eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_position_1aaf90e9e75b999bf2c43064feaa3694eb" kindref="member">checkBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check,<sp/>N<sp/>objWidth<sp/>=<sp/>0,<sp/>N<sp/>objHeight<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;x<sp/></highlight><highlight class="comment">/*+<sp/>objWidth*/</highlight><highlight class="normal">)<sp/>&gt;=<sp/>check.<ref refid="struct_bounds_check_1a8ed31dd874e9ee585a08018225adae4a" kindref="member">max_X</ref>)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>X<sp/>value<sp/>was<sp/>over<sp/>the<sp/>global<sp/>limit.<sp/>Reducing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>check.<ref refid="struct_bounds_check_1a8ed31dd874e9ee585a08018225adae4a" kindref="member">max_X</ref><sp/></highlight><highlight class="comment">/*-<sp/>objWidth*/</highlight><highlight class="normal"><sp/>-<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;x<sp/></highlight><highlight class="comment">/*-<sp/>objWidth*/</highlight><highlight class="normal"><sp/>&lt;<sp/>check.<ref refid="struct_bounds_check_1a7ddafd0ac07f6ddfbd357f8bd440e952" kindref="member">min_X</ref>)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>X<sp/>value<sp/>was<sp/>under<sp/>the<sp/>global<sp/>minimum.<sp/>Increasing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>check.<ref refid="struct_bounds_check_1a7ddafd0ac07f6ddfbd357f8bd440e952" kindref="member">min_X</ref><sp/></highlight><highlight class="comment">/*+<sp/>objWidth*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;y<sp/></highlight><highlight class="comment">/*+<sp/>objHeight*/</highlight><highlight class="normal">)<sp/>&gt;=<sp/>check.<ref refid="struct_bounds_check_1a569066d0fc5179aefddf172605682e72" kindref="member">max_Y</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Y<sp/>value<sp/>was<sp/>over<sp/>the<sp/>global<sp/>limit.<sp/>Reducing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>check.<ref refid="struct_bounds_check_1a569066d0fc5179aefddf172605682e72" kindref="member">max_Y</ref><sp/></highlight><highlight class="comment">/*-<sp/>objHeight*/</highlight><highlight class="normal"><sp/>-<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;y<sp/>&lt;<sp/>check.<ref refid="struct_bounds_check_1ab70f0f1fe16a50a94c7e937ce892ef38" kindref="member">min_Y</ref>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Y<sp/>value<sp/>was<sp/>under<sp/>the<sp/>global<sp/>minimum.<sp/>Increasing<sp/>value...<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>check.<ref refid="struct_bounds_check_1ab70f0f1fe16a50a94c7e937ce892ef38" kindref="member">min_Y</ref><sp/>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="struct_position_1aac17c8dcac3808518f5e13c7ecf31c19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_position_1aac17c8dcac3808518f5e13c7ecf31c19" kindref="member">overBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>*<sp/>check,<sp/>N<sp/>objWidth<sp/>=<sp/>0,<sp/>N<sp/>objHeight<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((this-&gt;x<sp/>+<sp/>objWidth)<sp/>&gt;=<sp/>check-&gt;<ref refid="struct_bounds_check_1a8ed31dd874e9ee585a08018225adae4a" kindref="member">max_X</ref>)<sp/>||<sp/>((this-&gt;y<sp/>+<sp/>objHeight)<sp/>&gt;=<sp/>check-&gt;<ref refid="struct_bounds_check_1a569066d0fc5179aefddf172605682e72" kindref="member">max_Y</ref>))<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>true<sp/>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;x<sp/>&lt;<sp/>check-&gt;min_X)<sp/>||<sp/>(this-&gt;y<sp/>&lt;<sp/>check-&gt;min_Y))<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>true<sp/>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>false<sp/>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="struct_position_1a06da33376bc3a116664f8a34e816ba95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a06da33376bc3a116664f8a34e816ba95" kindref="member">overXBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>*<sp/>check)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;x<sp/>&gt;=<sp/>check-&gt;<ref refid="struct_bounds_check_1a8ed31dd874e9ee585a08018225adae4a" kindref="member">max_X</ref>)<sp/>||<sp/>(this-&gt;x<sp/>&lt;<sp/>check-&gt;<ref refid="struct_bounds_check_1a7ddafd0ac07f6ddfbd357f8bd440e952" kindref="member">min_X</ref>))<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>true<sp/>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>false<sp/>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="struct_position_1a45f215fed381839bf860752780a9660f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a45f215fed381839bf860752780a9660f" kindref="member">overYBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>*<sp/>check)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;y<sp/>&gt;=<sp/>check-&gt;<ref refid="struct_bounds_check_1a569066d0fc5179aefddf172605682e72" kindref="member">max_Y</ref>)<sp/>||<sp/>(this-&gt;y<sp/>&lt;<sp/>check-&gt;<ref refid="struct_bounds_check_1ab70f0f1fe16a50a94c7e937ce892ef38" kindref="member">min_Y</ref>))<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>true<sp/>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>false<sp/>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="561" refid="struct_pos2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>deque&lt;Position&lt;N&gt;&gt;<sp/>*<sp/><ref refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" kindref="member">pastPositions</ref><sp/>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="struct_pos2_1a082aa8d85af22b1a8d671c8a44c3b0eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a082aa8d85af22b1a8d671c8a44c3b0eb" kindref="member">archive</ref>()<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>archived(this-&gt;x,<sp/>this-&gt;y,<sp/>this-&gt;z)<sp/>;<sp/></highlight><highlight class="comment">//archived<sp/>will<sp/>just<sp/>hold<sp/>this,<sp/>without<sp/>the<sp/>pastPositions<sp/>(no<sp/>infinite<sp/>recursion<sp/>here!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pastPositions-&gt;size()<sp/>&gt;<sp/>10000)<sp/>{<sp/></highlight><highlight class="comment">//once<sp/>we<sp/>go<sp/>over<sp/>a<sp/>certain<sp/>size,<sp/>we&apos;ll<sp/>delete<sp/>the<sp/>oldest<sp/>to<sp/>save<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions-&gt;pop_front()<sp/>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions-&gt;push_back(archived)<sp/>;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="struct_pos2_1af66901093e4a4ed4af0315a5555df3ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1af66901093e4a4ed4af0315a5555df3ff" kindref="member">Pos2</ref>()<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(0,<sp/>0,<sp/>0),<sp/>pastPositions(new<sp/>deque&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591" refid="struct_pos2_1a34523a174500233d5f7222928e6fd1f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1a34523a174500233d5f7222928e6fd1f1" kindref="member">Pos2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>pos)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(pos),<sp/>pastPositions(new<sp/>deque&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593" refid="struct_pos2_1ae366b3cb5f89bda2a574490caddc2320" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1ae366b3cb5f89bda2a574490caddc2320" kindref="member">Pos2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(pos,<sp/>check),<sp/>pastPositions(new<sp/>deque&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="struct_pos2_1aa272160e1bdc4cc04a2cb19351acf2dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1aa272160e1bdc4cc04a2cb19351acf2dc" kindref="member">Pos2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(check),<sp/>pastPositions(new<sp/>queue&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="struct_pos2_1ae85aa637e77fc1c30b98eee7884f677a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1ae85aa637e77fc1c30b98eee7884f677a" kindref="member">Pos2</ref>(N<sp/>n)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(n),<sp/>pastPositions(new<sp/>queue&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="struct_pos2_1a746cc704e8b447b9f8e0037df6b704ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1a746cc704e8b447b9f8e0037df6b704ba" kindref="member">Pos2</ref>(N<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(n,<sp/>check),<sp/>pastPositions(new<sp/>queue&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="614" refid="struct_pos2_1a8c12e1e032bae75160901b5a59acd86f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1a8c12e1e032bae75160901b5a59acd86f" kindref="member">Pos2</ref>(<ref refid="class_fast_rand" kindref="compound">FastRand&lt;R&gt;</ref><sp/>&amp;<sp/>rand)<sp/>:</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(rand),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions(new<sp/>queue&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="622" refid="struct_pos2_1ad763268dd2c65d60f0279b55f4079d31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1ad763268dd2c65d60f0279b55f4079d31" kindref="member">Pos2</ref>(<ref refid="class_fast_rand" kindref="compound">FastRand&lt;R&gt;</ref><sp/>&amp;<sp/>rand,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(rand,<sp/>check),</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions(new<sp/>deque&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="struct_pos2_1a6b88fd90d4b9173a4d95f8f91484f3fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1a6b88fd90d4b9173a4d95f8f91484f3fd" kindref="member">Pos2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>other)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(other)<sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" kindref="member">pastPositions</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pastPositions<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>deque&lt;Position&lt;N&gt;&gt;(*other.<ref refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" kindref="member">pastPositions</ref>)<sp/>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="struct_pos2_1aa35a42de65893664396cc6a584d3a936" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1aa35a42de65893664396cc6a584d3a936" kindref="member">Pos2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(other,<sp/>check)<sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" kindref="member">pastPositions</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pastPositions<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>deque&lt;Position&lt;N&gt;&gt;(*other.<ref refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" kindref="member">pastPositions</ref>)<sp/>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="struct_pos2_1a7b2614b7ddcf0c3f0a3bc591ae5480dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1a7b2614b7ddcf0c3f0a3bc591ae5480dc" kindref="member">Pos2</ref>(<ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;&amp;<sp/>other)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(std::move(other))<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Pos2<sp/>move<sp/>constructor<sp/>called.<sp/>The<sp/>argument&apos;s<sp/>pastPositions<sp/>are<sp/>now<sp/>null.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions<sp/>=<sp/>other.pastPositions<sp/>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.pastPositions<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="struct_pos2_1a235c965af4114604aac09c036f08d3e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1a235c965af4114604aac09c036f08d3e8" kindref="member">Pos2</ref>(<ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(std::move(other),<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Pos2<sp/>move<sp/>constructor<sp/>called.<sp/>The<sp/>argument&apos;s<sp/>pastPositions<sp/>are<sp/>now<sp/>null.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions<sp/>=<sp/>other.pastPositions<sp/>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.pastPositions<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="struct_pos2_1ad54b348d074c145a7d6abba6d571846b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1ad54b348d074c145a7d6abba6d571846b" kindref="member">Pos2</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(x,<sp/>y,<sp/>z),<sp/>pastPositions(new<sp/>deque&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="struct_pos2_1af46209c7d52909c4525d49554f000668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2_1af46209c7d52909c4525d49554f000668" kindref="member">Pos2</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>:<sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(x,<sp/>y,<sp/>z,<sp/>check),<sp/>pastPositions(new<sp/>deque&lt;<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;&gt;)<sp/>{}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="struct_pos2_1a638367184a0bc381cd15155e375e5e92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a638367184a0bc381cd15155e375e5e92" kindref="member">~Pos2</ref>()<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Pos2<sp/>destructor<sp/>called.<sp/>This<sp/>instance&apos;s<sp/>pastPositions<sp/>were<sp/>deleted<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pastPositions<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pastPositions<sp/>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="struct_pos2_1a38a5bcfaf5dba1e92cc9d7889daa1721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/><ref refid="struct_pos2_1a38a5bcfaf5dba1e92cc9d7889daa1721" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning,<sp/>assignment<sp/>operator<sp/>(copy)<sp/>for<sp/>Pos2<sp/>called.<sp/>This<sp/>may<sp/>cause<sp/>a<sp/>performance<sp/>hit.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pastPositions<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pastPositions<sp/>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" kindref="member">Position&lt;N&gt;::operator=</ref>(std::move(rhs))<sp/>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPositions<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>deque&lt;Position&lt;N&gt;&gt;()<sp/>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>rhs.<ref refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" kindref="member">pastPositions</ref>-&gt;begin()<sp/>;<sp/>i<sp/>!=<sp/>rhs.<ref refid="struct_pos2_1ab0e6af6b5960554712bcb717518f6ac3" kindref="member">pastPositions</ref>-&gt;end()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pastPositions-&gt;push_back(<ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(*i))<sp/>;<sp/></highlight><highlight class="comment">//push_back()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="struct_pos2_1ad2be6bde52c8afa3897beadb2608e3a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/><ref refid="struct_pos2_1ad2be6bde52c8afa3897beadb2608e3a4" kindref="member">operator=</ref>(<ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning,<sp/>assignment<sp/>operator<sp/>(move)<sp/>for<sp/>Pos2<sp/>called.<sp/>This<sp/>may<sp/>cause<sp/>unexpected<sp/>behavior.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" kindref="member">Position&lt;N&gt;::operator=</ref>(std::move(rhs))<sp/>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pastPositions<sp/>=<sp/>rhs.pastPositions<sp/>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.pastPositions<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="struct_pos2_1a340228a5c2933605e488596eed7fdc16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/><ref refid="struct_pos2_1a340228a5c2933605e488596eed7fdc16" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning,<sp/>assignment<sp/>operator<sp/>(copy)<sp/>for<sp/>Pos2<sp/>called.<sp/>This<sp/>may<sp/>cause<sp/>unexpected<sp/>behavior.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(rhs)<sp/>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="struct_pos2_1a02609d7ec3de3cb29b237ae280cd4d03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/><ref refid="struct_pos2_1a02609d7ec3de3cb29b237ae280cd4d03" kindref="member">operator=</ref>(<ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_debug_8h_1a060bbb38ef3767737e942eaf39c0227a" kindref="member">DebugOutput</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning,<sp/>assignment<sp/>operator<sp/>(move)<sp/>for<sp/>Pos2<sp/>called.<sp/>This<sp/>may<sp/>cause<sp/>unexpected<sp/>behavior.<sp/>\n&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>Debug<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(rhs)<sp/>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this<sp/>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="struct_pos2_1ae8efa7bdafbf75b2a9e689df1f345a44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ae8efa7bdafbf75b2a9e689df1f345a44" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ac895fed24f992ab43913207bd5fb7048" kindref="member">Position&lt;N&gt;::operator==</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="struct_pos2_1aa255eeb0bcc2c92bc7aeb7a6babb7f71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aa255eeb0bcc2c92bc7aeb7a6babb7f71" kindref="member">operator==</ref>(<ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ac895fed24f992ab43913207bd5fb7048" kindref="member">Position&lt;N&gt;::operator==</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="struct_pos2_1aaa70e9e703ecf5cf3c85ab7e262ad2cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aaa70e9e703ecf5cf3c85ab7e262ad2cb" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ac895fed24f992ab43913207bd5fb7048" kindref="member">Position&lt;N&gt;::operator==</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="struct_pos2_1ad79c54f096426bf141a40af32e88d7d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ad79c54f096426bf141a40af32e88d7d3" kindref="member">operator==</ref>(<ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1ac895fed24f992ab43913207bd5fb7048" kindref="member">Position&lt;N&gt;::operator==</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="struct_pos2_1a1470c730d1dd5195aa301f81cb9f0a07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a1470c730d1dd5195aa301f81cb9f0a07" kindref="member">operator!=</ref>(<ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a4be02284917613eaa574c3ebbbbbfcb8" kindref="member">Position&lt;N&gt;::operator!=</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="struct_pos2_1a03fd764f516526f65ad6faa6e2e9da52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a03fd764f516526f65ad6faa6e2e9da52" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a4be02284917613eaa574c3ebbbbbfcb8" kindref="member">Position&lt;N&gt;::operator!=</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="struct_pos2_1aabe6423f2d519d015c022fe8aedd2da9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aabe6423f2d519d015c022fe8aedd2da9" kindref="member">operator!=</ref>(<ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a4be02284917613eaa574c3ebbbbbfcb8" kindref="member">Position&lt;N&gt;::operator!=</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821" refid="struct_pos2_1ae519d026266e7c63cede223ba78d68cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ae519d026266e7c63cede223ba78d68cf" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1a4be02284917613eaa574c3ebbbbbfcb8" kindref="member">Position&lt;N&gt;::operator!=</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="struct_pos2_1a4965bba4823fd63b07ac6bf2288e354c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/><ref refid="struct_pos2_1a4965bba4823fd63b07ac6bf2288e354c" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1acee225b72b18e2468a8015fe3585958e" kindref="member">Position&lt;N&gt;::operator+</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829" refid="struct_pos2_1aa48d970911091f26baa779003392d654" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/><ref refid="struct_pos2_1aa48d970911091f26baa779003392d654" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>pos2<sp/>=<sp/><ref refid="struct_position_1acee225b72b18e2468a8015fe3585958e" kindref="member">Position&lt;N&gt;::operator+</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos2<sp/>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="struct_pos2_1a8491e1dd62f258d99e607eeccb193124" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/><ref refid="struct_pos2_1a8491e1dd62f258d99e607eeccb193124" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1adc25e016e77688fabb733febd70dc3da" kindref="member">Position&lt;N&gt;::operator-</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="struct_pos2_1a205a04ea6ab7f1d055a1f00c6602ae08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/><ref refid="struct_pos2_1a205a04ea6ab7f1d055a1f00c6602ae08" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position_1adc25e016e77688fabb733febd70dc3da" kindref="member">Position&lt;N&gt;::operator-</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842" refid="struct_pos2_1a37c3a0998d4423f50fc09e074fc01522" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/><ref refid="struct_pos2_1a37c3a0998d4423f50fc09e074fc01522" kindref="member">getCurrent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>)(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="846" refid="struct_pos2_1ab9730d7c07f3aed458574ad9f63a7035" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>deque&lt;Position&lt;N&gt;&gt;<sp/>*<sp/><ref refid="struct_pos2_1ab9730d7c07f3aed458574ad9f63a7035" kindref="member">getHistory</ref>()<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pastPositions<sp/>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="struct_pos2_1ae98c349465ab4c1085504649413f729b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ae98c349465ab4c1085504649413f729b" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive()<sp/>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1af6cf3e9c2a535e8d988739e075ca76c1" kindref="member">Position&lt;N&gt;::setAll</ref>(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="struct_pos2_1a5a26baf8ed6060892131a6e5341f0f3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a5a26baf8ed6060892131a6e5341f0f3f" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive()<sp/>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position_1af6cf3e9c2a535e8d988739e075ca76c1" kindref="member">Position&lt;N&gt;::setAll</ref>(x,<sp/>y,<sp/>z,<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="struct_pos2_1a65721a562cff5cbcbf023f4669783f32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a65721a562cff5cbcbf023f4669783f32" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(other.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>(),<sp/>other.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>(),<sp/>other.<ref refid="struct_position_1a1d1171c9049c9a24be31bdb40e8662c0" kindref="member">getZ</ref>())<sp/>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864" refid="struct_pos2_1a830495035e3981da9e298db636b7f26a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a830495035e3981da9e298db636b7f26a" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(other.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>(),<sp/>other.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>(),<sp/>other.<ref refid="struct_position_1a1d1171c9049c9a24be31bdb40e8662c0" kindref="member">getZ</ref>(),<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="struct_pos2_1aef9a2916285822cc7a3c8741bd38ddf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aef9a2916285822cc7a3c8741bd38ddf7" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>n)<sp/>{<sp/><ref refid="struct_pos2_1aef9a2916285822cc7a3c8741bd38ddf7" kindref="member">setAll</ref>(n,<sp/>n,<sp/>n)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="struct_pos2_1ae08b2b8134a316cc26da0c2b96bf4f14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ae08b2b8134a316cc26da0c2b96bf4f14" kindref="member">setAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_pos2_1ae08b2b8134a316cc26da0c2b96bf4f14" kindref="member">setAll</ref>(n,<sp/>n,<sp/>n,<sp/>check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="struct_pos2_1a16c48d5f21dfe7e00c1c2cb27e0e13f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a16c48d5f21dfe7e00c1c2cb27e0e13f0" kindref="member">setAllZero</ref>()<sp/>{<sp/>setAll(0)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="struct_pos2_1abbed99ee02ea50c3dc1053671b7331bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1abbed99ee02ea50c3dc1053671b7331bb" kindref="member">setX</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x)<sp/>{<sp/>setAll(x,<sp/>this-&gt;y,<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="struct_pos2_1a8ff8dc117956df7acb135c17731133ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a8ff8dc117956df7acb135c17731133ec" kindref="member">setX</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_pos2_1a8ff8dc117956df7acb135c17731133ec" kindref="member">setX</ref>(x)<sp/>;<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="struct_pos2_1a82ddb6fab8b028a52d53bb28f03b6119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a82ddb6fab8b028a52d53bb28f03b6119" kindref="member">setY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y)<sp/>{<sp/>setAll(this-&gt;x,<sp/>y,<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="struct_pos2_1a6ebb86ee57ab1467de7e5440d8e6358c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a6ebb86ee57ab1467de7e5440d8e6358c" kindref="member">setY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_pos2_1a6ebb86ee57ab1467de7e5440d8e6358c" kindref="member">setY</ref>(y)<sp/>;<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="struct_pos2_1aaa8e7d737a065e7ca846791ff31ea25c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aaa8e7d737a065e7ca846791ff31ea25c" kindref="member">setZ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z)<sp/>{<sp/>setAll(this-&gt;x,<sp/>this-&gt;y,<sp/>z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="struct_pos2_1af5641ffd9e8b359f7f80321c5d7ddbf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1af5641ffd9e8b359f7f80321c5d7ddbf5" kindref="member">setZ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/><ref refid="struct_pos2_1af5641ffd9e8b359f7f80321c5d7ddbf5" kindref="member">setZ</ref>(z)<sp/>;<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887" refid="struct_pos2_1af1b35a8b928bea9c73c49ff384b35a4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1af1b35a8b928bea9c73c49ff384b35a4a" kindref="member">x_plus_one</ref>()<sp/>{<sp/>setX(this-&gt;x++)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="struct_pos2_1a95c416fe3b7b2171df1daeb36416e62a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a95c416fe3b7b2171df1daeb36416e62a" kindref="member">x_plus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setX(this-&gt;x++)<sp/>;<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="struct_pos2_1a0f132fb8ed0c2e7092614cde74ccde27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a0f132fb8ed0c2e7092614cde74ccde27" kindref="member">x_minus_one</ref>()<sp/>{<sp/>setX(this-&gt;x--)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893" refid="struct_pos2_1a6c0daea0c94397af825a3e943665c41a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a6c0daea0c94397af825a3e943665c41a" kindref="member">x_minus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setX(this-&gt;x--)<sp/>;<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="struct_pos2_1a4bd636102c60fc9e19cb91ffc8dd68bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a4bd636102c60fc9e19cb91ffc8dd68bc" kindref="member">y_plus_one</ref>()<sp/>{<sp/>setY(this-&gt;y++)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898" refid="struct_pos2_1abc24856ae8ef5a4c7bac195193f67e06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1abc24856ae8ef5a4c7bac195193f67e06" kindref="member">y_plus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setY(this-&gt;y++)<sp/>;<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900" refid="struct_pos2_1ae42c57baaa5f3c59565a3d864a6c06f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ae42c57baaa5f3c59565a3d864a6c06f1" kindref="member">y_minus_one</ref>()<sp/>{<sp/>setY(this-&gt;y--)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="struct_pos2_1a90279c33382f18b737dc2afa901bb4ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a90279c33382f18b737dc2afa901bb4ce" kindref="member">y_minus_one</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{<sp/>setY(this-&gt;y--)<sp/>;<sp/>this-&gt;checkBounds(check)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="struct_pos2_1ae333400e09bd51d4953bd37a6bc4fea9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ae333400e09bd51d4953bd37a6bc4fea9" kindref="member">moveRight</ref>()<sp/>{<sp/>setAll((this-&gt;x+1),<sp/>this-&gt;y,<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="905" refid="struct_pos2_1a8744dd1eb4d237f0a7b7c3cd000baed2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a8744dd1eb4d237f0a7b7c3cd000baed2" kindref="member">moveLeft</ref>()<sp/>{<sp/>setAll((this-&gt;x-1),<sp/>this-&gt;y,<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="906" refid="struct_pos2_1a579238a3a5615ab36e2407aa6ce9177b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a579238a3a5615ab36e2407aa6ce9177b" kindref="member">moveUp</ref>()<sp/>{<sp/>setAll(this-&gt;x,<sp/>(this-&gt;y+1),<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="907" refid="struct_pos2_1abc5361e6f9349c9a5f847f9abd7047e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1abc5361e6f9349c9a5f847f9abd7047e9" kindref="member">moveDown</ref>()<sp/>{<sp/>setAll(this-&gt;x,<sp/>(this-&gt;y-1),<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="struct_pos2_1a815233851b548e25f8f4376f0cfee6f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a815233851b548e25f8f4376f0cfee6f6" kindref="member">moveUpRight</ref>()<sp/>{<sp/>setAll((this-&gt;x+1),<sp/>(this-&gt;y+1),<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="910" refid="struct_pos2_1a5c7870fae349b5d3a5d643f0ebf2c022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a5c7870fae349b5d3a5d643f0ebf2c022" kindref="member">moveUpLeft</ref>()<sp/>{<sp/>setAll((this-&gt;x-1),<sp/>(this-&gt;y+1),<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="911" refid="struct_pos2_1adb6ee58f9bd32c327d3b24002c5cc0b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1adb6ee58f9bd32c327d3b24002c5cc0b4" kindref="member">moveDownRight</ref>()<sp/>{<sp/>setAll((this-&gt;x+1),<sp/>(this-&gt;y-1),<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="912" refid="struct_pos2_1aa083f335d346e4f9afa5c4c41e253d46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aa083f335d346e4f9afa5c4c41e253d46" kindref="member">moveDownLeft</ref>()<sp/>{<sp/>setAll((this-&gt;x-1),<sp/>(this-&gt;y-1),<sp/>this-&gt;z)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="struct_pos2_1a3065dacbd8e42b36fd5af0775a9342d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a3065dacbd8e42b36fd5af0775a9342d8" kindref="member">modify</ref>(N<sp/>delta_x,<sp/>N<sp/>delta_y,<sp/>N<sp/>delta_z)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempX<sp/>=<sp/>this-&gt;x<sp/>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempY<sp/>=<sp/>this-&gt;y<sp/>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempZ<sp/>=<sp/>this-&gt;z<sp/>;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempX<sp/>+=<sp/>delta_x<sp/>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempY<sp/>+=<sp/>delta_y<sp/>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempZ<sp/>+=<sp/>delta_z<sp/>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(tempX,<sp/>tempY,<sp/>tempZ)<sp/>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="struct_pos2_1ab0ddc65822cce3935319977f3ab7c8e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1ab0ddc65822cce3935319977f3ab7c8e2" kindref="member">modify</ref>(N<sp/>delta_x,<sp/>N<sp/>delta_y,<sp/>N<sp/>delta_z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempX<sp/>=<sp/>this-&gt;x<sp/>;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempY<sp/>=<sp/>this-&gt;y<sp/>;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempZ<sp/>=<sp/>this-&gt;z<sp/>;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempX<sp/>+=<sp/>delta_x<sp/>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempY<sp/>+=<sp/>delta_y<sp/>;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempZ<sp/>+=<sp/>delta_z<sp/>;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(tempX,<sp/>tempY,<sp/>tempZ,<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956" refid="struct_pos2_1a8cb8d4f4d076ef9ecbb34bcb351ba8fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a8cb8d4f4d076ef9ecbb34bcb351ba8fa" kindref="member">moveHere</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="struct_pos2_1a2cf33b5575ca6cd5a02dbc92ee22fe7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a2cf33b5575ca6cd5a02dbc92ee22fe7a" kindref="member">moveHere</ref>(N<sp/>x,<sp/>N<sp/>y,<sp/>N<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveHere(x,<sp/>y,<sp/>z)<sp/>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;checkBounds(check)<sp/>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965" refid="struct_pos2_1aca684f49b5e27317ea5580f467e5d34a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aca684f49b5e27317ea5580f467e5d34a" kindref="member">moveHere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(other.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref>,<sp/>other.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref>,<sp/>other.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref>)<sp/>;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="struct_pos2_1a112150629c1c77a913f401e8948849b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a112150629c1c77a913f401e8948849b0" kindref="member">moveHere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(other.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>(),<sp/>other.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>(),<sp/>other.<ref refid="struct_position_1a1d1171c9049c9a24be31bdb40e8662c0" kindref="member">getZ</ref>())<sp/>;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="struct_pos2_1a6f1f873271a2ce51509f419faf52ed54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1a6f1f873271a2ce51509f419faf52ed54" kindref="member">moveHere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pos2" kindref="compound">Pos2</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveHere(other)<sp/>;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1afd2bfedb3b315412862103233665fc02" kindref="member">Position&lt;N&gt;::checkBounds</ref>(check)<sp/>;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="struct_pos2_1aa743473a51150e91792af64c00153ed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_pos2_1aa743473a51150e91792af64c00153ed9" kindref="member">moveHere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveHere(other)<sp/>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1afd2bfedb3b315412862103233665fc02" kindref="member">Position&lt;N&gt;::checkBounds</ref>(check)<sp/>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="995" refid="struct_vectr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_vectr" kindref="compound">Vectr</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="999" refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_basic_mutex" kindref="compound">BasicMutex</ref><sp/>*<sp/><ref refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" kindref="member">sharedVelMutex</ref><sp/>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1004" refid="struct_vectr_1a42723f75b3084b9285cbd205388ba90e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1a42723f75b3084b9285cbd205388ba90e" kindref="member">last</ref><sp/>;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1009" refid="struct_vectr_1a1ef69f90f664d37b4281a02d12b08693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1a1ef69f90f664d37b4281a02d12b08693" kindref="member">mostRecent</ref><sp/>;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1014" refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/><ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref><sp/>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1019" refid="struct_vectr_1a4634576eedac8a5b4651991e0c1f0d4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>absDistanceMoved<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1021" refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>*<sp/><ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref><sp/>;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1026" refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref><sp/>*<sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1029" refid="struct_vectr_1a2dc13bbf566571029a2069a87d165b30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sharedVelBool<sp/>=<sp/>true<sp/>;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>here<sp/>(the<sp/>one<sp/>we<sp/>inherited)<sp/>will<sp/>be<sp/>used<sp/>as<sp/>deltas<sp/>that<sp/>we<sp/>can<sp/>add<sp/>to<sp/>current<sp/>to<sp/>calculate<sp/>next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref><sp/>&amp;<sp/>overrideCurrData,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/>current_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update()<sp/>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingZ,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingZ,<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/>current_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>mostRecent_,<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/>current_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/>current_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="struct_vectr" kindref="compound">Vectr</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref><sp/>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)<sp/>;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref><sp/>&amp;<sp/>operator=(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr</ref><sp/>copyVect(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copyVelocity)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1052" refid="struct_vectr_1a5dc06bff7605656f5d5294db219339b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref><sp/>*<sp/><ref refid="struct_vectr_1a5dc06bff7605656f5d5294db219339b6" kindref="member">getVelocity</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;velocity<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1054" refid="struct_vectr_1a0acef7840c315ea742390f8b96d6c782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/>*<sp/><ref refid="struct_vectr_1a0acef7840c315ea742390f8b96d6c782" kindref="member">getCurrent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1056" refid="struct_vectr_1a96b306b6f36bc82f9dd68633f3d3568f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref><sp/><ref refid="struct_vectr_1a96b306b6f36bc82f9dd68633f3d3568f" kindref="member">getLast</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref><sp/>;<sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>normalize()<sp/>;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAndNormalize()<sp/>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1062" refid="struct_vectr_1ae4c3aa958a6d74d96ff119e63c3ae6ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/><ref refid="struct_vectr_1ae4c3aa958a6d74d96ff119e63c3ae6ea" kindref="member">getLastMoveDistance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absDistanceMoved<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref><sp/>&amp;<sp/>calculateVelocity()<sp/>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>calculateNextPosition(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier<sp/>=<sp/>1.0)<sp/>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>calculateNextPositionChecked(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>=<sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;::defaultCheck</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>calculateReverseNextPosition(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>=<sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;::defaultCheck</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>calculateReverseXPosition(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>=<sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;::defaultCheck</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>calculateReverseYPosition(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>=<sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;::defaultCheck</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1082"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><ref refid="class_basic_mutex" kindref="compound">BasicMutex</ref><sp/>*<sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;::sharedVelMutex</ref><sp/>=<sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;::sharedVelMutex</ref><sp/>;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1088" refid="struct_vectr_1a420d21073da712360069e09ae8053375" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>()<sp/>:</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(),</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>current(nullptr),</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(nullptr),</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>velocity(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1095" refid="struct_vectr_1ad66fbd7bd3c07f5dbbc3219fe55b38a1" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingZ,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>:</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(headingX,<sp/>headingY,<sp/>headingZ),</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>current(nullptr),</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(new<sp/>N)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitorVelocity)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>,<sp/><ref refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" kindref="member">sharedVelMutex</ref>,<sp/>&amp;<ref refid="struct_vectr_1a2dc13bbf566571029a2069a87d165b30" kindref="member">sharedVelBool</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1109" refid="struct_vectr_1a9be0609df512b225181c555f1c9adecb" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>headingZ,<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/>current_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>:</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(headingX,<sp/>headingY,<sp/>headingZ),</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>current(current_),</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(new<sp/>N)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitorVelocity)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>,<sp/><ref refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" kindref="member">sharedVelMutex</ref>,<sp/>&amp;<ref refid="struct_vectr_1a2dc13bbf566571029a2069a87d165b30" kindref="member">sharedVelBool</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1123" refid="struct_vectr_1ae04cf340dddfe1cd05c8dec90e34dd4a" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref><sp/>&amp;<sp/>overrideCurrData,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/>current_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(overrideCurrData),</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>current(current_),</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(new<sp/>N)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitorVelocity)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>,<sp/><ref refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" kindref="member">sharedVelMutex</ref>,<sp/>&amp;<ref refid="struct_vectr_1a2dc13bbf566571029a2069a87d165b30" kindref="member">sharedVelBool</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1138" refid="struct_vectr_1a80e5b2b4bafb5689b82bdf5d87cc4b49" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>*<sp/>current_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>:</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(),</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>(*current_),</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>mostRecent(*current_),<sp/>current(current_),</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(new<sp/>N)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitorVelocity)<sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>,<sp/><ref refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" kindref="member">sharedVelMutex</ref>,<sp/>&amp;<ref refid="struct_vectr_1a2dc13bbf566571029a2069a87d165b30" kindref="member">sharedVelBool</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1154" refid="struct_vectr_1a8328879b18c117c7b262ce53f5f1acb2" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(other),</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>(<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(other.<ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>)),</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>mostRecent(<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(other.mostRecent)),</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>absDistanceMoved(other.absDistanceMoved),</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(new<sp/>N(*other.totalDistanceMoved))</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>,<sp/><ref refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" kindref="member">sharedVelMutex</ref>,<sp/>&amp;<ref refid="struct_vectr_1a2dc13bbf566571029a2069a87d165b30" kindref="member">sharedVelBool</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1170" refid="struct_vectr_1abf42e2cb15d0406f24c5901dbf0a07e1" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>other,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monitorVelocity)<sp/>:</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(other),</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>(<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(other.<ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>)),</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>mostRecent(<ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(other.mostRecent)),</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>absDistanceMoved(other.absDistanceMoved),</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(new<sp/>N(*other.totalDistanceMoved))</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitorVelocity<sp/>&amp;&amp;<sp/>(other.<ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>,<sp/><ref refid="struct_vectr_1a1cc9dc723075fb24116b6a78ac73e786" kindref="member">sharedVelMutex</ref>,<sp/>&amp;<ref refid="struct_vectr_1a2dc13bbf566571029a2069a87d165b30" kindref="member">sharedVelBool</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1187" refid="struct_vectr_1a394981732ad6d227e5fe1f25f783ce99" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1a420d21073da712360069e09ae8053375" kindref="member">Vectr&lt;N&gt;::Vectr</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;float&gt;(std::move(other)),</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>(std::move(other.<ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>)),</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>mostRecent(std::move(other.mostRecent)),<sp/>current(other.current),</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>absDistanceMoved(other.absDistanceMoved),</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>totalDistanceMoved(other.totalDistanceMoved),</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>velocity(other.velocity)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>other.current<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>other.totalDistanceMoved<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>other.velocity<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1201" refid="struct_vectr_1affbf285f9295dd163cc8b0364b871ade" refkind="member"><highlight class="normal"><ref refid="struct_vectr_1affbf285f9295dd163cc8b0364b871ade" kindref="member">Vectr&lt;N&gt;::~Vectr</ref>()</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>we&apos;re<sp/>running<sp/>a<sp/>velocity<sp/>monitor<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(velocity<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedVelMutex-&gt;lock()<sp/>;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>sharedVelBool<sp/>=<sp/>false<sp/>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(velocity<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>velocity;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalDistanceMoved<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>totalDistanceMoved<sp/>;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(velocity<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedVelMutex-&gt;unlock()<sp/>;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1226" refid="struct_vectr_1ac2e10f418e5b70d4a48bdfad9bf882c4" refkind="member"><highlight class="normal"><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/><ref refid="struct_vectr_1ac2e10f418e5b70d4a48bdfad9bf882c4" kindref="member">Vectr&lt;N&gt;::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current<sp/>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>totalDistanceMoved<sp/>;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>velocity<sp/>;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" kindref="member">Position&lt;float&gt;::operator=</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref><sp/>=<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(rhs.<ref refid="struct_vectr_1a42723f75b3084b9285cbd205388ba90e" kindref="member">last</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mostRecent<sp/>=<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(rhs.<ref refid="struct_vectr_1a1ef69f90f664d37b4281a02d12b08693" kindref="member">mostRecent</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;current<sp/>=<sp/>rhs.<ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref><sp/>;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;absDistanceMoved<sp/>=<sp/>rhs.<ref refid="struct_vectr_1a4634576eedac8a5b4651991e0c1f0d4d" kindref="member">absDistanceMoved</ref><sp/>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;totalDistanceMoved<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>N(*rhs.<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.<ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;velocity<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(rhs.<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref>,<sp/>sharedVelMutex,<sp/>&amp;sharedVelBool)<sp/>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this<sp/>;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1256" refid="struct_vectr_1a94436033bb9fb7e6e970028e91dac958" refkind="member"><highlight class="normal"><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/><ref refid="struct_vectr_1ac2e10f418e5b70d4a48bdfad9bf882c4" kindref="member">Vectr&lt;N&gt;::operator=</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" kindref="member">Position&lt;float&gt;::operator=</ref>(std::move(rhs))<sp/>;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref><sp/>=<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(rhs.last)<sp/>;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mostRecent<sp/>=<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(rhs.mostRecent)<sp/>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;current<sp/>=<sp/>rhs.current<sp/>;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;absDistanceMoved<sp/>=<sp/>rhs.absDistanceMoved<sp/>;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;totalDistanceMoved<sp/>=<sp/>rhs.totalDistanceMoved<sp/>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;velocity<sp/>=<sp/>rhs.velocity<sp/>;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.current<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.totalDistanceMoved<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.velocity<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this<sp/>;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1275" refid="struct_vectr_1a90b87763e1858fdaf27cbcd3b8758d0c" refkind="member"><highlight class="normal"><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1a90b87763e1858fdaf27cbcd3b8758d0c" kindref="member">Vectr&lt;N&gt;::copyVect</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copyVelocity)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>newVect<sp/>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_position_1ae3a67f3e6f27a5594c181ca55d2b2ef3" kindref="member">Position</ref>&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;::operator=(*this)<sp/>;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_vectr_1a42723f75b3084b9285cbd205388ba90e" kindref="member">last</ref><sp/>=<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(this-&gt;<ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_vectr_1a1ef69f90f664d37b4281a02d12b08693" kindref="member">mostRecent</ref><sp/>=<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(this-&gt;mostRecent)<sp/>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref><sp/>=<sp/>this-&gt;current<sp/>;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_vectr_1a4634576eedac8a5b4651991e0c1f0d4d" kindref="member">absDistanceMoved</ref><sp/>=<sp/>this-&gt;absDistanceMoved<sp/>;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;totalDistanceMoved<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_vectr_1a577bdf47f67b34585ee08696679b2232" kindref="member">totalDistanceMoved</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>N(*this-&gt;totalDistanceMoved)<sp/>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;velocity<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(copyVelocity<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref>(totalDistanceMoved,<sp/>sharedVelMutex,<sp/>&amp;sharedVelBool)<sp/>;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newVect.<ref refid="struct_vectr_1aef611170eac7b1341ff345b9bb108eb7" kindref="member">velocity</ref><sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(newVect)<sp/>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1301" refid="_position_8hpp_1a57d0270087c9fb19927cacc70857870b" refkind="member"><highlight class="normal">ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>const<sp/>Vectr&lt;N&gt;<sp/>*<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector:<sp/>X<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec-&gt;x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec-&gt;y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Z<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec-&gt;z<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1307" refid="_position_8hpp_1a918bada5cca5229216fa9545d330fbe7" refkind="member"><highlight class="normal">ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>const<sp/>Vectr&lt;N&gt;<sp/>&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector:<sp/>X<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec.y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Z<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec.z<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1314" refid="struct_vectr_1a072798a344fe237c3456f1e962f18672" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vectr_1a072798a344fe237c3456f1e962f18672" kindref="member">Vectr&lt;N&gt;::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mostRecent<sp/>!=<sp/>*current)<sp/>{<sp/></highlight><highlight class="comment">//only<sp/>if<sp/>we&apos;ve<sp/>moved...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absDistanceMoved<sp/>=<sp/><ref refid="_util2_8h_1a721c1b59a90bfe670ce78d8eb6da3175" kindref="member">calcEuclidianDistance</ref>(mostRecent,<sp/>*current)<sp/>;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*totalDistanceMoved<sp/>+=<sp/>absDistanceMoved<sp/>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>temp<sp/>=<sp/>((*current)<sp/>-<sp/>mostRecent)<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>uses<sp/>Position<sp/>operator+()<sp/>overload<sp/>to<sp/>add</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>our<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>(which<sp/>are<sp/>offset<sp/>values)<sp/>to<sp/>those</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>current,<sp/>giving<sp/>our<sp/>new<sp/>location<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setAll(temp.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>(),<sp/>temp.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>(),<sp/>temp.<ref refid="struct_position_1a1d1171c9049c9a24be31bdb40e8662c0" kindref="member">getZ</ref>())<sp/>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967a98bd1c45684cf587ac2347a92dd7bb51" kindref="member">last</ref><sp/>=<sp/>mostRecent<sp/>;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mostRecent<sp/>=<sp/>std::move((<ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref>(*this-&gt;current)))<sp/>;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1332" refid="struct_vectr_1aa8638eb9a06d4947a77f800b501e74f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vectr_1aa8638eb9a06d4947a77f800b501e74f0" kindref="member">Vectr&lt;N&gt;::normalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>pythag&lt;float&gt;(x,<sp/>y)<sp/>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(distance<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>/<sp/>distance)<sp/>;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((y<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(distance<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(y<sp/>/<sp/>distance)<sp/>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1344" refid="struct_vectr_1a94b119ab4adb045161a80a5278dbe0f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vectr_1a94b119ab4adb045161a80a5278dbe0f1" kindref="member">Vectr&lt;N&gt;::updateAndNormalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>update()<sp/>;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>normalize()<sp/>;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1350" refid="struct_vectr_1a8ef008609006c8cd2afa56abac2bbe25" refkind="member"><highlight class="normal"><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;</ref><sp/>&amp;<sp/><ref refid="struct_vectr_1a8ef008609006c8cd2afa56abac2bbe25" kindref="member">Vectr&lt;N&gt;::calculateVelocity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;velocity<sp/>;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1355" refid="struct_vectr_1ad293e3f67a0483060d69b4de5dcfe5d2" refkind="member"><highlight class="normal"><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1ad293e3f67a0483060d69b4de5dcfe5d2" kindref="member">Vectr&lt;N&gt;::calculateNextPosition</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>vec,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.<ref refid="struct_vectr_1aa8638eb9a06d4947a77f800b501e74f0" kindref="member">normalize</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stor<sp/>=<sp/>vec<sp/>*<sp/>modifier<sp/>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>nx<sp/>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>ny<sp/>;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>nz<sp/>;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>(vec.<ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref>)-&gt;getX()<sp/>+<sp/>stor.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>ny<sp/>=<sp/>(vec.<ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref>)-&gt;getY()<sp/>+<sp/>stor.getY()<sp/>;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>nz<sp/>=<sp/>(vec.<ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref>)-&gt;getZ()<sp/>+<sp/>stor.getZ()<sp/>;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>next(nx,<sp/>ny,<sp/>nz)<sp/>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1374" refid="struct_vectr_1ac4d91db7639f1f74ba2492aaed2eb01d" refkind="member"><highlight class="normal"><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1ac4d91db7639f1f74ba2492aaed2eb01d" kindref="member">Vectr&lt;N&gt;::calculateNextPositionChecked</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>vec,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.<ref refid="struct_vectr_1aa8638eb9a06d4947a77f800b501e74f0" kindref="member">normalize</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stor<sp/>=<sp/>vec<sp/>*<sp/>modifier<sp/>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>nx<sp/>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>ny<sp/>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>nz<sp/>;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>(vec.<ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref>)-&gt;getX()<sp/>+<sp/>stor.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>ny<sp/>=<sp/>(vec.<ref refid="struct_vectr_1ae3215bf0713f2bb9a40f60c0215b4b83" kindref="member">current</ref>)-&gt;getY()<sp/>+<sp/>stor.getY()<sp/>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>next(nx,<sp/>ny,<sp/>nz,<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1393" refid="struct_vectr_1abeef5f4dfbd11b7c6bf40779cc191c0e" refkind="member"><highlight class="normal"><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1abeef5f4dfbd11b7c6bf40779cc191c0e" kindref="member">Vectr&lt;N&gt;::calculateReverseNextPosition</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>vec,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>=<sp/>(vec.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>*<sp/>-1)<sp/>;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>=<sp/>(vec.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>*<sp/>-1)<sp/>;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>=<sp/>(vec.<ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref><sp/>*<sp/>-1)<sp/>;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateNextPosition(vec,<sp/>modifier,<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1401" refid="struct_vectr_1a7c8cfdf413bb152bcea5d14017220759" refkind="member"><highlight class="normal"><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1a7c8cfdf413bb152bcea5d14017220759" kindref="member">Vectr&lt;N&gt;::calculateReverseXPosition</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>vec,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>=<sp/>(vec.<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>*<sp/>-1)<sp/>;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateNextPositionChecked(vec,<sp/>modifier,<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1407" refid="struct_vectr_1ab897fda165e543696ecdc622af191698" refkind="member"><highlight class="normal"><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/><ref refid="struct_vectr_1ab897fda165e543696ecdc622af191698" kindref="member">Vectr&lt;N&gt;::calculateReverseYPosition</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>vec,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bounds_check" kindref="compound">BoundsCheck&lt;N&gt;</ref><sp/>&amp;<sp/>check)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>vec.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>=<sp/>(vec.<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>*<sp/>-1)<sp/>;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculateNextPositionChecked(vec,<sp/>modifier,<sp/>check)<sp/>;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1414" refid="_position_8hpp_1a4df255073e9e918679d349c54458ae23" refkind="member"><highlight class="normal"><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/><ref refid="_position_8hpp_1a4df255073e9e918679d349c54458ae23" kindref="member">operator+=</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>rhs,<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>lhs)<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="struct_position_1a8ff94b86d9853ec1323129e2864a2f8d" kindref="member">setX</ref>(rhs.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>()<sp/>+<sp/>lhs.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>())<sp/>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="struct_position_1ab816c27eddb9c5d4951edfbb78dc7233" kindref="member">setY</ref>(rhs.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>()<sp/>+<sp/>lhs.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>())<sp/>;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1421" refid="_position_8hpp_1a74b666432404363daea4d0485431269d" refkind="member"><highlight class="normal"><ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/><ref refid="_position_8hpp_1a74b666432404363daea4d0485431269d" kindref="member">operator-=</ref>(<ref refid="struct_vectr" kindref="compound">Vectr&lt;N&gt;</ref><sp/>&amp;<sp/>rhs,<sp/><ref refid="struct_position" kindref="compound">Position&lt;N&gt;</ref><sp/>&amp;<sp/>lhs)<sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="struct_position_1a8ff94b86d9853ec1323129e2864a2f8d" kindref="member">setX</ref>(rhs.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>()<sp/>-<sp/>lhs.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>())<sp/>;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.<ref refid="struct_position_1ab816c27eddb9c5d4951edfbb78dc7233" kindref="member">setY</ref>(rhs.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>()<sp/>-<sp/>lhs.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>())<sp/>;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1438" refid="_position_8hpp_1a78cdb74b8251b0ab2904043870b9289d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;T&gt;</ref><sp/><ref refid="_position_8hpp_1a78cdb74b8251b0ab2904043870b9289d" kindref="member">transPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;T&gt;</ref><sp/>&amp;<sp/>inGameWorld)<sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>worldXSize<sp/>=<sp/><ref refid="_configuration_8cpp_1ac52cbe2be8df57c4bcb888fae55550a6" kindref="member">globalMaxX</ref>()<sp/></highlight><highlight class="comment">/*-<sp/>GameObject::GLOBAL_min_X*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>worldYSize<sp/>=<sp/><ref refid="_configuration_8cpp_1aecae0abd5507af9315ddeb2ce60d7997" kindref="member">globalMaxY</ref>()<sp/></highlight><highlight class="comment">/*-<sp/>GameObject::GLOBAL_min_Y*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tempX<sp/>=<sp/>inGameWorld.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>()<sp/></highlight><highlight class="comment">/*+<sp/>(worldXSize<sp/>-<sp/>GameObject::GLOBAL_max_X)*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tempY<sp/>=<sp/>inGameWorld.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>()<sp/></highlight><highlight class="comment">/*+<sp/>(worldYSize<sp/>-<sp/>GameObject::GLOBAL_max_Y)*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>tw<sp/>=<sp/><ref refid="_util_8hpp_1aef72576353996260a2b10791cf0ad505" kindref="member">termWidth</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>th<sp/>=<sp/><ref refid="_util_8hpp_1a0396e69970502820446223a648670663" kindref="member">termHeight</ref>()<sp/>;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>x<sp/>=<sp/>(tw<sp/>*<sp/>tempX)/worldXSize<sp/>;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>(th<sp/>*<sp/>tempY)/worldYSize<sp/>;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position&lt;T&gt;</ref>(x,<sp/>y,<sp/>0)<sp/>;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;<sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>getZ()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setZ(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/><ref refid="struct_position_1ac430da98504c2d4fd685c0363d728474" kindref="member">z</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1466" refid="struct_resolution_1ac30561f6544f2fc3bf481c6e0b14b461" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution_1ac30561f6544f2fc3bf481c6e0b14b461" kindref="member">Resolution</ref>()<sp/>:</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(0,<sp/>0<sp/>,<sp/>0)<sp/>{}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1469" refid="struct_resolution_1a9bb8d85e9faff270276a2e8323118fc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution_1a9bb8d85e9faff270276a2e8323118fc8" kindref="member">Resolution</ref>(N<sp/><ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref>,<sp/>N<sp/><ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref>)<sp/>:</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(x,<sp/>y,<sp/>0)<sp/>{}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1472" refid="struct_resolution_1a2aa8fc1f683337902dc151bada7288dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution_1a2aa8fc1f683337902dc151bada7288dd" kindref="member">Resolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(other)<sp/>{}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1475" refid="struct_resolution_1ac4d06880fbc7211f869e39cf38b0ed19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution_1ac4d06880fbc7211f869e39cf38b0ed19" kindref="member">Resolution</ref>(<ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>&amp;&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_position" kindref="compound">Position</ref>&lt;N&gt;(std::move(other))<sp/>{}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1478" refid="struct_resolution_1a717cb848dd45e1ee2454dca048b31e4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>&amp;<sp/><ref refid="struct_resolution_1a717cb848dd45e1ee2454dca048b31e4f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" kindref="member">Position&lt;N&gt;::operator=</ref>(rhs)<sp/>;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this<sp/>;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1485" refid="struct_resolution_1a6cb2b5a6a911ad7cf5ecf77707c653d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution_1a6cb2b5a6a911ad7cf5ecf77707c653d0" kindref="member">~Resolution</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1487" refid="struct_resolution_1a23374340976ac8ce3fee681ea3e81c60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>&amp;<sp/><ref refid="struct_resolution_1a23374340976ac8ce3fee681ea3e81c60" kindref="member">operator=</ref>(<ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_position_1a669073574ecd196d45ea9d2ff0e3cced" kindref="member">Position&lt;N&gt;::operator=</ref>(std::move(rhs))<sp/>;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this<sp/>;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1494" refid="struct_resolution_1ad92daf6afa258c08bfe4d910652f19a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/><ref refid="struct_resolution_1ad92daf6afa258c08bfe4d910652f19a9" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x_product<sp/>=<sp/>(this-&gt;<ref refid="struct_position_1af908be922fc88d89d81be7d08d06f761" kindref="member">x</ref><sp/>*<sp/>n)<sp/>;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y_product<sp/>=<sp/>(this-&gt;<ref refid="struct_position_1af434f54a0aad8bbfc3806ebdd197aa3b" kindref="member">y</ref><sp/>*<sp/>n)<sp/>;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_resolution" kindref="compound">Resolution&lt;N&gt;</ref>(x_product,<sp/>y_product)<sp/>;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1502" refid="struct_resolution_1aa129e2a84f2bb2ff1e72845c94d95ff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_resolution_1aa129e2a84f2bb2ff1e72845c94d95ff4" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_resolution" kindref="compound">Resolution</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_quotient<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>())<sp/>/<sp/>static_cast&lt;double&gt;(rhs.<ref refid="struct_position_1a7d1262a6b6f63f04c605bebf93a1f068" kindref="member">getX</ref>()))<sp/>;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_quotient<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>())<sp/>/<sp/>static_cast&lt;double&gt;(rhs.<ref refid="struct_position_1a71d93e9a234bc4f32a61781c4e88bc10" kindref="member">getY</ref>()))<sp/>;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avrg<sp/>=<sp/>average&lt;double&gt;(x_quotient,<sp/>y_quotient)<sp/>;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>avrg<sp/>;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1512" refid="struct_resolution_1a9a1a88fb46fb0e0778bedc8a83353379" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>const<sp/>Resolution&lt;N&gt;<sp/>*<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>pos-&gt;x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos-&gt;y<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1517" refid="struct_resolution_1afd33ccf011112b1d008268776db1b3c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>const<sp/>Resolution&lt;N&gt;<sp/>&amp;<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>pos.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos.y<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1522"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp"/>
  </compounddef>
</doxygen>
