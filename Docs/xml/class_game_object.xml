<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_game_object" kind="class" prot="public">
    <compoundname>GameObject</compoundname>
    <basecompoundref refid="class_game_interface" prot="public" virt="non-virtual">GameInterface</basecompoundref>
    <derivedcompoundref refid="class_character" prot="public" virt="non-virtual">Character</derivedcompoundref>
    <derivedcompoundref refid="class_projectile" prot="public" virt="non-virtual">Projectile</derivedcompoundref>
    <includes refid="_game_object_8h" local="no">GameObject.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_game_object_1a60bdf3052124ff077a550cf8fb6eac66" prot="private" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned GameObject::IDs</definition>
        <argsstring></argsstring>
        <name>IDs</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="53" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1a34ce4d1c73db9be0d20b79d46b414be1" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool GameObject::map_is_init</definition>
        <argsstring></argsstring>
        <name>map_is_init</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="55" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1ad83d62a3618e1b841f0f7e3b72098b81" prot="private" static="yes" mutable="no">
        <type>vector&lt; <ref refid="class_game_object" kindref="compound">GameObject</ref> * &gt; *</type>
        <definition>vector&lt; GameObject * &gt; * GameObject::allGameObjects</definition>
        <argsstring></argsstring>
        <name>allGameObjects</name>
        <initializer>= new vector&lt;<ref refid="class_game_object" kindref="compound">GameObject</ref>*&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointers to all extant GameObjects. <ref refid="class_world_controller" kindref="compound">WorldController</ref> will actually inialize this during its init(), by simply syncing allGameObjects to the same vector pointed by <ref refid="class_world_controller_1a2cb2ca35d201d22f296cda71b8a58e92" kindref="member">WorldController::gameObjects</ref>. In practice the two should almost always be the same </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="61" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_game_object_1a332495aab47697590809b418192e6aa4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GameObject::markedForDeletion</definition>
        <argsstring></argsstring>
        <name>markedForDeletion</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="63" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_game_object_1a19ecfd085a11c42d868e25c796419df8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class WorldController</definition>
        <argsstring></argsstring>
        <name>WorldController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="82" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_game_object_1aefef8d7a397219a28f7808dc064e03c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class GameState</definition>
        <argsstring></argsstring>
        <name>GameState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="83" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_game_object_1af878ba13a78e02d1acdb73ab3ec37110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const GameObject &amp;gameObj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;</type>
          <declname>gameObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override the &lt;&lt; output stream operator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="374" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="464" bodyend="467"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_game_object_1a4db8b68d725cbea63ea94ced03add071" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int GameObject::ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="87" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1a05d328553084cd1f480a26985a4671b5" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_output_data" kindref="compound">OutputData</ref>&lt; float, int &gt;</type>
        <definition>OutputData&lt;float, int&gt; GameObject::outputData</definition>
        <argsstring></argsstring>
        <name>outputData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="89" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1a6858e668e7d2c5ded850b952aaacd905" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_pos2" kindref="compound">Pos2</ref>&lt; float &gt;</type>
        <definition>Pos2&lt;float&gt; GameObject::loc</definition>
        <argsstring></argsstring>
        <name>loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="91" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1ac4637e122291be2421c851e2a87fb968" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_size" kindref="compound">Size</ref>&lt; int &gt;</type>
        <definition>Size&lt;int&gt; GameObject::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="93" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1aebcdb5143027789a5f3b0f4ada2dac6b" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; float &gt;</type>
        <definition>Vectr&lt;float&gt; GameObject::vectr</definition>
        <argsstring></argsstring>
        <name>vectr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="95" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1a33c6fbb5bee4bf28ed70ae170b2fdb1a" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_game_object" kindref="compound">GameObject</ref> *</type>
        <definition>const GameObject* GameObject::ally</definition>
        <argsstring></argsstring>
        <name>ally</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="97" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_game_object_1a5043adc801cf04c0747a0cdf93997d45" prot="protected" static="yes" mutable="no">
        <type><ref refid="class_game_map" kindref="compound">GameMap</ref>&lt; <ref refid="class_game_object" kindref="compound">GameObject</ref> &gt; *</type>
        <definition>GameMap&lt; GameObject &gt; * GameObject::map</definition>
        <argsstring></argsstring>
        <name>map</name>
        <initializer>= new <ref refid="class_game_map" kindref="compound">GameMap</ref>&lt;<ref refid="class_game_object" kindref="compound">GameObject</ref>&gt;(<ref refid="_default_config_8h_1ac52cbe2be8df57c4bcb888fae55550a6" kindref="member">globalMaxX</ref>(), <ref refid="_default_config_8h_1aecae0abd5507af9315ddeb2ce60d7997" kindref="member">globalMaxY</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Holds pointers to GameObjects like allGameObjects, but is 2D and the placement of each <ref refid="class_game_object" kindref="compound">GameObject</ref> in map corresponds to the x and y coordinate of its <ref refid="struct_position" kindref="compound">Position</ref>. Is synced with <ref refid="class_world_controller" kindref="compound">WorldController</ref>&apos;s map. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="103" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_object_1adc2b5a062ff3d5ee496f47a0206ddcc7" prot="protected" static="yes" mutable="no">
        <type><ref refid="class_fast_rand" kindref="compound">FastRand</ref>&lt; int &gt;</type>
        <definition>FastRand&lt; int &gt; GameObject::goRand</definition>
        <argsstring></argsstring>
        <name>goRand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="105" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_game_object_1a82f776f822cb472586de53fb81ef9f02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::startThreading</definition>
        <argsstring>(void(GameObject::*functionPointer)(), bool wait)</argsstring>
        <name>startThreading</name>
        <param>
          <type>void(GameObject::*)()</type>
          <declname>functionPointer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Handles thread starting duties. Should always be called by the function that calls the threaded function. Ended by calling endThreading() </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to wait on this thread to finish </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>functionPointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the instance member function to run on a thread. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a5253b01a176277f734d70e6c6e9d2909" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::endThreading</definition>
        <argsstring>(bool join)</argsstring>
        <name>endThreading</name>
        <param>
          <type>bool</type>
          <declname>join</declname>
        </param>
        <briefdescription>
<para>Handles thread duties. In some case will be called by the threaded function once it has completed, don&apos;t call if joinThreads() will be called. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>join</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to call join() on this thread first </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_game_object_1adad7d284b670db722a2fda8e6a7997e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <reimplements refid="class_game_interface_1aac4337d6b69549d389ff7d1b167fd7be">update</reimplements>
        <reimplementedby refid="class_player_character_1a2ac275d3de97c5ecc260e93e0585168a">update</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="107" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ad99b7e0e0138da7cc825a13a1a0c5326" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::markForDeletion</definition>
        <argsstring>()</argsstring>
        <name>markForDeletion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="109" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_game_object_1a1996f540da697fa10aa874aa0e6e4572" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::checkForMarkedDeletions</definition>
        <argsstring>()</argsstring>
        <name>checkForMarkedDeletions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="111" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="247" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a4c75b1045f9e490c8aee0c4bcf9177d3" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::eraseByID</definition>
        <argsstring>(unsigned ID)</argsstring>
        <name>eraseByID</name>
        <param>
          <type>unsigned</type>
          <declname>ID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erases the <ref refid="class_game_object" kindref="compound">GameObject</ref> pointer matching the given ID from the allGameObjects container. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="116" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="259" bodyend="272"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_game_object_1a720f74ac34297ad4cee79723ecd2379e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; <ref refid="class_game_object" kindref="compound">GameObject</ref> * &gt; *</type>
        <definition>static vector&lt;GameObject*&gt;* GameObject::getAllGameObjects</definition>
        <argsstring>()</argsstring>
        <name>getAllGameObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Pointers to all extant GameObjects. <ref refid="class_world_controller" kindref="compound">WorldController</ref> will actually inialize this during its init(), by simply syncing allGameObjects to the same vector pointed by <ref refid="class_world_controller_1a2cb2ca35d201d22f296cda71b8a58e92" kindref="member">WorldController::gameObjects</ref>. In practice the two should almost always be the same. Only classes that <emphasis>absolutely</emphasis> must have write access to allGameObjects should it access via this method. All others should call <ref refid="struct_game_state_1ae1b4a46f267c8b03a7b4b036d2ba24f5" kindref="member">GameState::getGameObjects()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="127" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab67caafcd6df99f7b9d022f1595c0f9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_game_map" kindref="compound">GameMap</ref>&lt; <ref refid="class_game_object" kindref="compound">GameObject</ref> &gt; *</type>
        <definition>static const GameMap&lt;GameObject&gt;* GameObject::getMap</definition>
        <argsstring>()</argsstring>
        <name>getMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current map of GameObjects </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="133" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="133" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_game_object_1a0348e3ee2e83d56eafca7a3547f432c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameObject::GameObject</definition>
        <argsstring>()</argsstring>
        <name>GameObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="class_game_object" kindref="compound">GameObject</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="139" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="25" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab13374d070cfe6a1459539d54c671eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameObject::GameObject</definition>
        <argsstring>(const GameObject &amp;other)</argsstring>
        <name>GameObject</name>
        <param>
          <type>const <ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor for <ref refid="class_game_object" kindref="compound">GameObject</ref>. The new instance has its own unique ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_game_object" kindref="compound">GameObject</ref> to be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="146" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="51" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab415bbda3ab836e5de5e73c0a9d50ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameObject::GameObject</definition>
        <argsstring>(GameObject &amp;&amp;other)</argsstring>
        <name>GameObject</name>
        <param>
          <type><ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move constructor for <ref refid="class_game_object" kindref="compound">GameObject</ref>. The new instance the same ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_game_object" kindref="compound">GameObject</ref> to be moved </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="153" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="93" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1af784d96f9ca701cd705050ce1baf6bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameObject::GameObject</definition>
        <argsstring>(const AssetFile &amp;imageFile, float sizeModifier, const Position&lt; float &gt; &amp;loc, bool visible, bool monitorVelocity)</argsstring>
        <name>GameObject</name>
        <param>
          <type>const <ref refid="struct_asset_file" kindref="compound">AssetFile</ref> &amp;</type>
          <declname>imageFile</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sizeModifier</declname>
        </param>
        <param>
          <type>const <ref refid="struct_position" kindref="compound">Position</ref>&lt; float &gt; &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>monitorVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an object with the given UTF-8 symbol (preferably just one character) as its icon</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imageFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to be used as the Texture for this <ref refid="class_game_object" kindref="compound">GameObject</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="163" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="120" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a039a66e3278f6a75ad0021ffda1b1a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameObject::GameObject</definition>
        <argsstring>(FastRand&lt; int &gt; rand)</argsstring>
        <name>GameObject</name>
        <param>
          <type><ref refid="class_fast_rand" kindref="compound">FastRand</ref>&lt; int &gt;</type>
          <declname>rand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a randomized <ref refid="class_game_object" kindref="compound">GameObject</ref>. The client has to option to simply leave the argument randSeed as 0, in which case the constructor will generate its own random number.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rand</parametername>
</parameternamelist>
<parameterdescription>
<para>A seed to initialize the random number generator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="171" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="145" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab82dfdb656f9051c0587e6593b2dda97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>GameObject::~GameObject</definition>
        <argsstring>()</argsstring>
        <name>~GameObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor for <ref refid="class_game_object" kindref="compound">GameObject</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="178" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1afa8505b16b7f5fe0b825d59fcee17291" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;</type>
        <definition>GameObject &amp; GameObject::operator=</definition>
        <argsstring>(const GameObject &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator overload (copy) for <ref refid="class_game_object" kindref="compound">GameObject</ref>. The object copied to will have its own unique ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The right hand side argument (which will be copied) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="187" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="176" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a428579a3f2d8eb2c9e37bd4452d18d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;</type>
        <definition>GameObject &amp; GameObject::operator=</definition>
        <argsstring>(GameObject &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator overload (move) for <ref refid="class_game_object" kindref="compound">GameObject</ref>. The object copied to will have the same ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The right hand side argument (which will be moved) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="195" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="203" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab8fccd5edcbebad0553aa4336a71452a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <reimplements refid="class_game_interface_1aa47ddf1a598f94dc6273e5d06834f435">operator()</reimplements>
        <reimplementedby refid="class_n_p_c_1a73befe685fef40ab7f1ac954d932697d">operator()</reimplementedby>
        <reimplementedby refid="class_player_character_1a067c5b11f7deafd448726ec4ac294b03">operator()</reimplementedby>
        <reimplementedby refid="class_character_1a3c4dfc59865fe39251070cd0b92d34ac">operator()</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloads operator() for <ref refid="class_game_object" kindref="compound">GameObject</ref>. Possibly will be used to call <ref refid="class_game_object_1a9867e75f8cfc4df52d03467aca07a4ac" kindref="member">notify()</ref>. TBD. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="202" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1afe9e6ee87d3062c80a9c560a12bfc279" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::operator()</definition>
        <argsstring>(GameObject *other)</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_player_character_1a1cf7079c60a26c188cf4ed7043a2c9b3">operator()</reimplementedby>
        <reimplementedby refid="class_character_1a6dde2dd17bfd31ea6e008d83bdcd3188">operator()</reimplementedby>
        <param>
          <type><ref refid="class_game_object" kindref="compound">GameObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloads the overload of operator(). For the most part the details of this function will be handled by inheriting classes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to another <ref refid="class_game_object" kindref="compound">GameObject</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="211" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab8e7bb6eaae69c9e282efb22c3996499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GameObject::operator==</definition>
        <argsstring>(GameObject &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloads the overload of operator(). For the most part the details of this function will be handled by inheriting classes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to another <ref refid="class_game_object" kindref="compound">GameObject</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether this <ref refid="class_game_object" kindref="compound">GameObject</ref> ID is equal to ID of other </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="220" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ac4692b8584d58cabc918e53e54767008" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned GameObject::getID</definition>
        <argsstring>()</argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>this ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="225" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a9867e75f8cfc4df52d03467aca07a4ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::notify</definition>
        <argsstring>()</argsstring>
        <name>notify</name>
        <reimplementedby refid="class_n_p_c_1ab590b71db4dd9dc21f6e2c183e9bd45c">notify</reimplementedby>
        <reimplementedby refid="class_character_1a457dab4f04550716888425da681b9f1f">notify</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Every sub-type of <ref refid="class_game_object" kindref="compound">GameObject</ref> should implement this to perform some function of their choosing. Will typically be called by other classes with a reference to this <ref refid="class_game_object" kindref="compound">GameObject</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="234" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ad7f752f1e3c84bd74de6110c17df3938" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::passMessage</definition>
        <argsstring>(Message *message, GameObject &amp;recipient)</argsstring>
        <name>passMessage</name>
        <reimplementedby refid="class_character_1ad0574321c7429301d4d9dd1dd33301c4">passMessage</reimplementedby>
        <param>
          <type><ref refid="struct_message" kindref="compound">Message</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="class_game_object" kindref="compound">GameObject</ref> &amp;</type>
          <declname>recipient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A <ref refid="class_game_object" kindref="compound">GameObject</ref> or any other class can implement this function to pass messages to another.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_message" kindref="compound">Message</ref> sent by this </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recipient</parametername>
</parameternamelist>
<parameterdescription>
<para>The object receiving the <ref refid="struct_message" kindref="compound">Message</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="243" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1adc249c683994a9c74b518a82fc22dbab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::textDescription</definition>
        <argsstring>(ostream *writeTo) const </argsstring>
        <name>textDescription</name>
        <reimplementedby refid="class_n_p_c_1ad85699c2a35f1f5f9d5a81a3d5df2153">textDescription</reimplementedby>
        <reimplementedby refid="class_character_1a2ab1090f959f0c66b098e0463d4c1bdd">textDescription</reimplementedby>
        <reimplementedby refid="class_player_character_1aac83579c2f552973e71008c1b1e01b1d">textDescription</reimplementedby>
        <param>
          <type>ostream *</type>
          <declname>writeTo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes a formatted text description of this <ref refid="class_game_object" kindref="compound">GameObject</ref> into the desired output stream </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="248" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="286" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ae483f641380cd7d30c8bc469ffa2b219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::moveTo</definition>
        <argsstring>(Position&lt; float &gt; *to)</argsstring>
        <name>moveTo</name>
        <param>
          <type><ref refid="struct_position" kindref="compound">Position</ref>&lt; float &gt; *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves this <ref refid="class_game_object" kindref="compound">GameObject</ref> to the <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> moveTo. All other movement functions should call this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> where this <ref refid="class_game_object" kindref="compound">GameObject</ref> is to move </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="256" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="295" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ac9da7fd4807118db721e2d1cbee69580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::moveTo</definition>
        <argsstring>(Position&lt; float &gt; to)</argsstring>
        <name>moveTo</name>
        <param>
          <type><ref refid="struct_position" kindref="compound">Position</ref>&lt; float &gt;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves this <ref refid="class_game_object" kindref="compound">GameObject</ref> to the <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> moveTo.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> where this <ref refid="class_game_object" kindref="compound">GameObject</ref> is to move </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="263" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="314" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a34a64493de5a087b7cb79e1fceb5db8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::moveTo</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>moveTo</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="265" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1af0f7a85d5565aa73554140b7cb876af0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::moveX</definition>
        <argsstring>(float x)</argsstring>
        <name>moveX</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="267" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="267" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab7e675ee37da1f4dfe9ce59de2df3a25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::moveY</definition>
        <argsstring>(float y)</argsstring>
        <name>moveY</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="268" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a2c4862885319288c746d8e1c454556b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::moveUp</definition>
        <argsstring>()</argsstring>
        <name>moveUp</name>
        <reimplements refid="class_game_interface_1ac451407fef525c7114bbd3a2e3d17799">moveUp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="270" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ab2d6fdbc50ff110d3a6d101e3539dca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::moveDown</definition>
        <argsstring>()</argsstring>
        <name>moveDown</name>
        <reimplements refid="class_game_interface_1a6899c1e5b3f48ed7892791e540a4c55c">moveDown</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="271" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1abb75fa4bde389384815abb7cacc35045" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::moveRight</definition>
        <argsstring>()</argsstring>
        <name>moveRight</name>
        <reimplements refid="class_game_interface_1a4eb03058ca25e4b741f4203e5a2f44b8">moveRight</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="272" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a71152debfe014bef0efe7464dd45aacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::moveLeft</definition>
        <argsstring>()</argsstring>
        <name>moveLeft</name>
        <reimplements refid="class_game_interface_1a66cbd9c9e07a5abca69879431346e1ea">moveLeft</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="273" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ac279191d7c42ca8ad3e1dd2baf5a9519" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::moveRandomDirection</definition>
        <argsstring>()</argsstring>
        <name>moveRandomDirection</name>
        <reimplementedby refid="class_projectile_1afb8f0b1e6777785b613472d28b1967f6">moveRandomDirection</reimplementedby>
        <reimplementedby refid="class_player_character_1a0c82549ee968726256b518e89b78c605">moveRandomDirection</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="275" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="352" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1aa8b87ef4a487c54c1d5b327c001b5c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::jump</definition>
        <argsstring>()</argsstring>
        <name>jump</name>
        <reimplements refid="class_game_interface_1a7dc8aef4e9339745250c77e8b41ee1b2">jump</reimplements>
        <reimplementedby refid="class_player_character_1ab67b7f795e75b73027620483bea2871b">jump</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="277" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="363" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1aebf4e54c90de73d56186beaebead1ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::move</definition>
        <argsstring>(float distanceModifier=defaultMoveDistance&lt; float &gt;)</argsstring>
        <name>move</name>
        <param>
          <type>float</type>
          <declname>distanceModifier</declname>
          <defval><ref refid="_default_config_8h_1ae612ff4d109725baa6322f37db537175" kindref="member">defaultMoveDistance</ref>&lt; float &gt;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves this <ref refid="class_game_object" kindref="compound">GameObject</ref> by changing its <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> x and y coordinates according to the <ref refid="struct_vectr" kindref="compound">Vectr</ref> of its last move </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="283" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="370" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a41d5ef30ab6863ac5277fbc37297b11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::moveNewDirection</definition>
        <argsstring>(const Vectr&lt; float &gt; &amp;newDirection)</argsstring>
        <name>moveNewDirection</name>
        <param>
          <type>const <ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; float &gt; &amp;</type>
          <declname>newDirection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves this <ref refid="class_game_object" kindref="compound">GameObject</ref> by changing its <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> x and y coordinates according to the given <ref refid="struct_vectr" kindref="compound">Vectr</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>The new vector specifying the direction of travel </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="291" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="385" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a372fee85f1892fd1fe258061dfb13269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::wander</definition>
        <argsstring>()</argsstring>
        <name>wander</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="class_game_object_1aebf4e54c90de73d56186beaebead1ccc" kindref="member">move()</ref>, but instead of stopping when reaching the bounds of the gamespace, the <ref refid="class_game_object" kindref="compound">GameObject</ref> reverses course </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="297" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="393" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a565a3950ea0af84bf7515bdb77abf51a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::defaultBehaviors</definition>
        <argsstring>()</argsstring>
        <name>defaultBehaviors</name>
        <reimplementedby refid="class_enemy_1acec008d64103ef820006bcbcf9345a2a">defaultBehaviors</reimplementedby>
        <reimplementedby refid="class_projectile_1acd6a2cea6b495db189ccc8a05d189ef9">defaultBehaviors</reimplementedby>
        <reimplementedby refid="class_player_character_1ac96dd84cef7668557321edc5b251c97c">defaultBehaviors</reimplementedby>
        <reimplementedby refid="class_character_1ac96260f4fd9b68a33919a65bc9da9bca">defaultBehaviors</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each <ref refid="class_game_object" kindref="compound">GameObject</ref> can implement this to enable its default behaviors to run on a loop on a separate thread </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="303" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="411" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a43862b5d602a0fec32b686ab8586e886" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::aiBehaviors</definition>
        <argsstring>()</argsstring>
        <name>aiBehaviors</name>
        <reimplementedby refid="class_player_character_1af7a8c30b3f40a698c28b095a299657ab">aiBehaviors</reimplementedby>
        <reimplementedby refid="class_character_1a7bd55d3615c1eb092f800d8634fa9695">aiBehaviors</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="305" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="415" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a87cfdf508b01dd9653716a5b4f4d7571" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::attack</definition>
        <argsstring>(GameObject *enemy)</argsstring>
        <name>attack</name>
        <param>
          <type><ref refid="class_game_object" kindref="compound">GameObject</ref> *</type>
          <declname>enemy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="307" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="422" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a6bfde6f1f94ce0bf66f598dc53a75551" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::findNearbyAlly</definition>
        <argsstring>(int searchDistanceX, int searchDistanceY)</argsstring>
        <name>findNearbyAlly</name>
        <param>
          <type>int</type>
          <declname>searchDistanceX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>searchDistanceY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="309" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="426" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a20ca237d244a3eeb34500e0134d60eb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::allyWith</definition>
        <argsstring>(const GameObject *)</argsstring>
        <name>allyWith</name>
        <param>
          <type>const <ref refid="class_game_object" kindref="compound">GameObject</ref> *</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="311" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="435" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1afa75c94bc4f7f52a48d000ef0803ec59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_character_data_8h_1a55ecd4f2ec2ebfe8d5b0163e4ac2a967" kindref="member">Colors</ref></type>
        <definition>Colors GameObject::getColor</definition>
        <argsstring>() const </argsstring>
        <name>getColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s Colors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="316" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="316" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a8037270ed22a6c599a40610b188bf5d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_position" kindref="compound">Position</ref>&lt; float &gt; *</type>
        <definition>const Position&lt;float&gt;* GameObject::getPosition</definition>
        <argsstring>() const </argsstring>
        <name>getPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s <ref refid="struct_position" kindref="compound">Position&lt;float&gt;</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="321" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1ac9c2137750ca7960047ad13fe9bb1b38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_pos2" kindref="compound">Pos2</ref>&lt; float &gt; *</type>
        <definition>const Pos2&lt;float&gt;* GameObject::getPositionHistory</definition>
        <argsstring>() const </argsstring>
        <name>getPositionHistory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s <ref refid="struct_position" kindref="compound">Position</ref> history (<ref refid="struct_pos2" kindref="compound">Pos2</ref>) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="326" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="326" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a12e8f3985a6a4a63dc5be822d50418a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_vectr" kindref="compound">Vectr</ref>&lt; float &gt; *</type>
        <definition>Vectr&lt;float&gt;* GameObject::getVector</definition>
        <argsstring>()</argsstring>
        <name>getVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s vector in 3-D space </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="331" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="331" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a63e1c98f0e834bc9572b99957ebf5d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::setImageFile</definition>
        <argsstring>(string imageFileName)</argsstring>
        <name>setImageFile</name>
        <param>
          <type>string</type>
          <declname>imageFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets this <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s sprite to the specified file</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imageFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename and path of the sprite image </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="338" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="439" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a828768b425b6f845409a79f71f17d624" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_asset_file" kindref="compound">AssetFile</ref> *</type>
        <definition>const AssetFile * GameObject::getImageFile</definition>
        <argsstring>() const </argsstring>
        <name>getImageFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s textureImageFile, i.e. the file path of its texture (usually in png format) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="347" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="443" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1af0308820bacc8fa87cf985b78c5814fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_default_config_8h_1a9ca20d8445e7d830c262f5ec4bb5d1bf" kindref="member">Texture</ref> *</type>
        <definition>Texture * GameObject::getTexture</definition>
        <argsstring>() const </argsstring>
        <name>getTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s texture, or nullptr if this <ref refid="class_game_object_1a63a8b301423180c9ff003e0a1145104f" kindref="member">isVisible()</ref> is false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="352" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="447" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a37fa422cde617a2f0c584193bf83e4a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_size" kindref="compound">Size</ref>&lt; int &gt; *</type>
        <definition>const Size&lt;int&gt;* GameObject::getSize</definition>
        <argsstring>() const </argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="354" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a106ef712578d9d9e82bf4df9e29245c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_asset_file_i_o_8h_1a72d924d1cb8e1544b6d5198e98d52ca9" kindref="member">AssetType</ref></type>
        <definition>AssetType GameObject::getType</definition>
        <argsstring>() const </argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This <ref refid="class_game_object" kindref="compound">GameObject</ref>&apos;s asset type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="359" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="359" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a172a0c544564afa8125957ad85772627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::setVisibility</definition>
        <argsstring>(bool visible)</argsstring>
        <name>setVisibility</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="361" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="361" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a63a8b301423180c9ff003e0a1145104f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GameObject::isVisible</definition>
        <argsstring>() const </argsstring>
        <name>isVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="362" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1abfdb9aa04ec756de76c906001f060e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameObject::timedTurnInvisible</definition>
        <argsstring>(std::chrono::nanoseconds nano)</argsstring>
        <name>timedTurnInvisible</name>
        <param>
          <type>std::chrono::nanoseconds</type>
          <declname>nano</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turns this <ref refid="class_game_object" kindref="compound">GameObject</ref> invisible for nano nanoseconds</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nano</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of time to remain invisible </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="369" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="451" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1a6f501dd4b129026d1156745de0046c63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string GameObject::toString</definition>
        <argsstring>() const </argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="class_game_object_1adc249c683994a9c74b518a82fc22dbab" kindref="member">textDescription()</ref>, but returns a new string instead of writing to one passed to it </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="379" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="469" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_game_object_1aefab5eddd7dfc186c7e5ba34bbefce41" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameObject::fire</definition>
        <argsstring>()</argsstring>
        <name>fire</name>
        <reimplements refid="class_game_interface_1af3f525cdb14ebc3c6b139780c1d5f318">fire</reimplements>
        <reimplementedby refid="class_player_character_1a646ce764c65c544fe4b76912b3fd15e5">fire</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Provides no functionality. Implemented only to fullfill the requirements of <ref refid="class_game_interface" kindref="compound">GameInterface</ref> interface. See <ref refid="class_player_character_1a646ce764c65c544fe4b76912b3fd15e5" kindref="member">PlayerCharacter::fire()</ref> for a functional implementation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="385" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp" bodystart="475" bodyend="477"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class from which all other classes in the world will inherit. This class will handle the assignment of a unique ID to each <ref refid="class_game_object" kindref="compound">GameObject</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_character" kindref="compound">Character</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="131">
        <label>NPC</label>
        <link refid="class_n_p_c"/>
        <childnode refid="130" relation="public-inheritance">
        </childnode>
      </node>
      <node id="134">
        <label>Projectile</label>
        <link refid="class_projectile"/>
        <childnode refid="128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>PlayerCharacter</label>
        <link refid="class_player_character"/>
        <childnode refid="130" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>GameInterface</label>
        <link refid="class_game_interface"/>
      </node>
      <node id="130">
        <label>Character</label>
        <link refid="class_character"/>
        <childnode refid="128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>Enemy</label>
        <link refid="class_enemy"/>
        <childnode refid="131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="128">
        <label>GameObject</label>
        <link refid="class_game_object"/>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="148">
        <label>AssetFile</label>
        <link refid="struct_asset_file"/>
      </node>
      <node id="149">
        <label>FastRand&lt; int &gt;</label>
        <link refid="class_fast_rand"/>
        <childnode refid="150" relation="usage">
          <edgelabel>defaultRandom</edgelabel>
          <edgelabel>randPositionSetter</edgelabel>
        </childnode>
      </node>
      <node id="151">
        <label>N</label>
      </node>
      <node id="137">
        <label>Vectr&lt; float &gt;</label>
        <link refid="struct_vectr"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
        <childnode refid="139" relation="usage">
          <edgelabel>velocity</edgelabel>
        </childnode>
        <childnode refid="140" relation="usage">
          <edgelabel>sharedVelMutex</edgelabel>
        </childnode>
        <childnode refid="138" relation="usage">
          <edgelabel>mostRecent</edgelabel>
          <edgelabel>last</edgelabel>
          <edgelabel>current</edgelabel>
        </childnode>
      </node>
      <node id="140">
        <label>BasicMutex</label>
        <link refid="class_basic_mutex"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>Size&lt; int &gt;</label>
        <link refid="struct_size"/>
        <childnode refid="145" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>Position&lt; float &gt;</label>
        <link refid="struct_position"/>
      </node>
      <node id="147">
        <label>OutputData&lt; float, int &gt;</label>
        <link refid="struct_output_data"/>
        <childnode refid="148" relation="usage">
          <edgelabel>textureImageFile</edgelabel>
        </childnode>
        <childnode refid="144" relation="usage">
          <edgelabel>size</edgelabel>
          <edgelabel>size_lastRecordedValue</edgelabel>
        </childnode>
        <childnode refid="138" relation="usage">
          <edgelabel>position_lastRecordedValue</edgelabel>
          <edgelabel>position</edgelabel>
        </childnode>
      </node>
      <node id="145">
        <label>Position&lt; int &gt;</label>
        <link refid="struct_position"/>
      </node>
      <node id="142">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="136">
        <label>GameInterface</label>
        <link refid="class_game_interface"/>
      </node>
      <node id="143">
        <label>Pos2&lt; float &gt;</label>
        <link refid="struct_pos2"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="150">
        <label>FastRand&lt; N &gt;</label>
        <link refid="class_fast_rand"/>
        <childnode refid="151" relation="usage">
          <edgelabel>minimum</edgelabel>
          <edgelabel>maximum</edgelabel>
        </childnode>
        <childnode refid="150" relation="usage">
          <edgelabel>defaultRandom</edgelabel>
          <edgelabel>randPositionSetter</edgelabel>
        </childnode>
      </node>
      <node id="141">
        <label>mutex</label>
      </node>
      <node id="135">
        <label>GameObject</label>
        <link refid="class_game_object"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
        <childnode refid="137" relation="usage">
          <edgelabel>vectr</edgelabel>
        </childnode>
        <childnode refid="143" relation="usage">
          <edgelabel>loc</edgelabel>
        </childnode>
        <childnode refid="135" relation="usage">
          <edgelabel>ally</edgelabel>
        </childnode>
        <childnode refid="144" relation="usage">
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="146" relation="usage">
          <edgelabel>map</edgelabel>
        </childnode>
        <childnode refid="147" relation="usage">
          <edgelabel>outputData</edgelabel>
        </childnode>
        <childnode refid="149" relation="usage">
          <edgelabel>goRand</edgelabel>
        </childnode>
      </node>
      <node id="146">
        <label>GameMap&lt; GameObject &gt;</label>
        <link refid="class_game_map"/>
      </node>
      <node id="139">
        <label>Velocity&lt; float &gt;</label>
        <link refid="struct_velocity"/>
        <childnode refid="140" relation="usage">
          <edgelabel>sharedVelMutex</edgelabel>
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" line="47" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h" bodystart="47" bodyend="388"/>
    <listofallmembers>
      <member refid="class_game_object_1a43862b5d602a0fec32b686ab8586e886" prot="public" virt="virtual"><scope>GameObject</scope><name>aiBehaviors</name></member>
      <member refid="class_game_object_1ad83d62a3618e1b841f0f7e3b72098b81" prot="private" virt="non-virtual"><scope>GameObject</scope><name>allGameObjects</name></member>
      <member refid="class_game_object_1a33c6fbb5bee4bf28ed70ae170b2fdb1a" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>ally</name></member>
      <member refid="class_game_object_1a20ca237d244a3eeb34500e0134d60eb1" prot="public" virt="virtual"><scope>GameObject</scope><name>allyWith</name></member>
      <member refid="class_game_object_1a87cfdf508b01dd9653716a5b4f4d7571" prot="public" virt="virtual"><scope>GameObject</scope><name>attack</name></member>
      <member refid="class_game_object_1a1996f540da697fa10aa874aa0e6e4572" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>checkForMarkedDeletions</name></member>
      <member refid="class_game_object_1a565a3950ea0af84bf7515bdb77abf51a" prot="public" virt="virtual"><scope>GameObject</scope><name>defaultBehaviors</name></member>
      <member refid="class_game_object_1a5253b01a176277f734d70e6c6e9d2909" prot="private" virt="non-virtual"><scope>GameObject</scope><name>endThreading</name></member>
      <member refid="class_game_object_1a4c75b1045f9e490c8aee0c4bcf9177d3" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>eraseByID</name></member>
      <member refid="class_game_object_1a6bfde6f1f94ce0bf66f598dc53a75551" prot="public" virt="virtual"><scope>GameObject</scope><name>findNearbyAlly</name></member>
      <member refid="class_game_object_1aefab5eddd7dfc186c7e5ba34bbefce41" prot="public" virt="virtual"><scope>GameObject</scope><name>fire</name></member>
      <member refid="class_game_object_1a0348e3ee2e83d56eafca7a3547f432c4" prot="public" virt="non-virtual"><scope>GameObject</scope><name>GameObject</name></member>
      <member refid="class_game_object_1ab13374d070cfe6a1459539d54c671eba" prot="public" virt="non-virtual"><scope>GameObject</scope><name>GameObject</name></member>
      <member refid="class_game_object_1ab415bbda3ab836e5de5e73c0a9d50ba3" prot="public" virt="non-virtual"><scope>GameObject</scope><name>GameObject</name></member>
      <member refid="class_game_object_1af784d96f9ca701cd705050ce1baf6bd2" prot="public" virt="non-virtual"><scope>GameObject</scope><name>GameObject</name></member>
      <member refid="class_game_object_1a039a66e3278f6a75ad0021ffda1b1a71" prot="public" virt="non-virtual"><scope>GameObject</scope><name>GameObject</name></member>
      <member refid="class_game_object_1aefef8d7a397219a28f7808dc064e03c6" prot="private" virt="non-virtual"><scope>GameObject</scope><name>GameState</name></member>
      <member refid="class_game_object_1a720f74ac34297ad4cee79723ecd2379e" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getAllGameObjects</name></member>
      <member refid="class_game_object_1afa75c94bc4f7f52a48d000ef0803ec59" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getColor</name></member>
      <member refid="class_game_object_1ac4692b8584d58cabc918e53e54767008" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getID</name></member>
      <member refid="class_game_object_1a828768b425b6f845409a79f71f17d624" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getImageFile</name></member>
      <member refid="class_game_object_1ab67caafcd6df99f7b9d022f1595c0f9a" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getMap</name></member>
      <member refid="class_game_object_1a8037270ed22a6c599a40610b188bf5d8" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getPosition</name></member>
      <member refid="class_game_object_1ac9c2137750ca7960047ad13fe9bb1b38" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getPositionHistory</name></member>
      <member refid="class_game_object_1a37fa422cde617a2f0c584193bf83e4a5" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getSize</name></member>
      <member refid="class_game_object_1af0308820bacc8fa87cf985b78c5814fc" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getTexture</name></member>
      <member refid="class_game_object_1a106ef712578d9d9e82bf4df9e29245c5" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getType</name></member>
      <member refid="class_game_object_1a12e8f3985a6a4a63dc5be822d50418a1" prot="public" virt="non-virtual"><scope>GameObject</scope><name>getVector</name></member>
      <member refid="class_game_object_1adc2b5a062ff3d5ee496f47a0206ddcc7" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>goRand</name></member>
      <member refid="class_game_object_1a4db8b68d725cbea63ea94ced03add071" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>ID</name></member>
      <member refid="class_game_object_1a60bdf3052124ff077a550cf8fb6eac66" prot="private" virt="non-virtual"><scope>GameObject</scope><name>IDs</name></member>
      <member refid="class_game_object_1a63a8b301423180c9ff003e0a1145104f" prot="public" virt="non-virtual"><scope>GameObject</scope><name>isVisible</name></member>
      <member refid="class_game_object_1aa8b87ef4a487c54c1d5b327c001b5c84" prot="public" virt="virtual"><scope>GameObject</scope><name>jump</name></member>
      <member refid="class_game_object_1a6858e668e7d2c5ded850b952aaacd905" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>loc</name></member>
      <member refid="class_game_object_1a5043adc801cf04c0747a0cdf93997d45" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>map</name></member>
      <member refid="class_game_object_1a34ce4d1c73db9be0d20b79d46b414be1" prot="private" virt="non-virtual"><scope>GameObject</scope><name>map_is_init</name></member>
      <member refid="class_game_object_1a332495aab47697590809b418192e6aa4" prot="private" virt="non-virtual"><scope>GameObject</scope><name>markedForDeletion</name></member>
      <member refid="class_game_object_1ad99b7e0e0138da7cc825a13a1a0c5326" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>markForDeletion</name></member>
      <member refid="class_game_object_1aebf4e54c90de73d56186beaebead1ccc" prot="public" virt="non-virtual"><scope>GameObject</scope><name>move</name></member>
      <member refid="class_game_object_1ab2d6fdbc50ff110d3a6d101e3539dca9" prot="public" virt="virtual"><scope>GameObject</scope><name>moveDown</name></member>
      <member refid="class_game_object_1a71152debfe014bef0efe7464dd45aacb" prot="public" virt="virtual"><scope>GameObject</scope><name>moveLeft</name></member>
      <member refid="class_game_object_1a41d5ef30ab6863ac5277fbc37297b11b" prot="public" virt="virtual"><scope>GameObject</scope><name>moveNewDirection</name></member>
      <member refid="class_game_object_1ac279191d7c42ca8ad3e1dd2baf5a9519" prot="public" virt="virtual"><scope>GameObject</scope><name>moveRandomDirection</name></member>
      <member refid="class_game_object_1abb75fa4bde389384815abb7cacc35045" prot="public" virt="virtual"><scope>GameObject</scope><name>moveRight</name></member>
      <member refid="class_game_object_1ae483f641380cd7d30c8bc469ffa2b219" prot="public" virt="non-virtual"><scope>GameObject</scope><name>moveTo</name></member>
      <member refid="class_game_object_1ac9da7fd4807118db721e2d1cbee69580" prot="public" virt="non-virtual"><scope>GameObject</scope><name>moveTo</name></member>
      <member refid="class_game_object_1a34a64493de5a087b7cb79e1fceb5db8e" prot="public" virt="non-virtual"><scope>GameObject</scope><name>moveTo</name></member>
      <member refid="class_game_object_1a2c4862885319288c746d8e1c454556b6" prot="public" virt="virtual"><scope>GameObject</scope><name>moveUp</name></member>
      <member refid="class_game_object_1af0f7a85d5565aa73554140b7cb876af0" prot="public" virt="non-virtual"><scope>GameObject</scope><name>moveX</name></member>
      <member refid="class_game_object_1ab7e675ee37da1f4dfe9ce59de2df3a25" prot="public" virt="non-virtual"><scope>GameObject</scope><name>moveY</name></member>
      <member refid="class_game_object_1a9867e75f8cfc4df52d03467aca07a4ac" prot="public" virt="virtual"><scope>GameObject</scope><name>notify</name></member>
      <member refid="class_game_object_1ab8fccd5edcbebad0553aa4336a71452a" prot="public" virt="virtual"><scope>GameObject</scope><name>operator()</name></member>
      <member refid="class_game_object_1afe9e6ee87d3062c80a9c560a12bfc279" prot="public" virt="virtual"><scope>GameObject</scope><name>operator()</name></member>
      <member refid="class_game_object_1af878ba13a78e02d1acdb73ab3ec37110" prot="public" virt="non-virtual"><scope>GameObject</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_game_object_1afa8505b16b7f5fe0b825d59fcee17291" prot="public" virt="virtual"><scope>GameObject</scope><name>operator=</name></member>
      <member refid="class_game_object_1a428579a3f2d8eb2c9e37bd4452d18d3b" prot="public" virt="virtual"><scope>GameObject</scope><name>operator=</name></member>
      <member refid="class_game_object_1ab8e7bb6eaae69c9e282efb22c3996499" prot="public" virt="non-virtual"><scope>GameObject</scope><name>operator==</name></member>
      <member refid="class_game_object_1a05d328553084cd1f480a26985a4671b5" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>outputData</name></member>
      <member refid="class_game_object_1ad7f752f1e3c84bd74de6110c17df3938" prot="public" virt="virtual"><scope>GameObject</scope><name>passMessage</name></member>
      <member refid="class_game_object_1a63e1c98f0e834bc9572b99957ebf5d4c" prot="public" virt="non-virtual"><scope>GameObject</scope><name>setImageFile</name></member>
      <member refid="class_game_object_1a172a0c544564afa8125957ad85772627" prot="public" virt="non-virtual"><scope>GameObject</scope><name>setVisibility</name></member>
      <member refid="class_game_object_1ac4637e122291be2421c851e2a87fb968" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>size</name></member>
      <member refid="class_game_object_1a82f776f822cb472586de53fb81ef9f02" prot="private" virt="non-virtual"><scope>GameObject</scope><name>startThreading</name></member>
      <member refid="class_game_object_1adc249c683994a9c74b518a82fc22dbab" prot="public" virt="virtual"><scope>GameObject</scope><name>textDescription</name></member>
      <member refid="class_game_object_1abfdb9aa04ec756de76c906001f060e16" prot="public" virt="non-virtual"><scope>GameObject</scope><name>timedTurnInvisible</name></member>
      <member refid="class_game_object_1a6f501dd4b129026d1156745de0046c63" prot="public" virt="non-virtual"><scope>GameObject</scope><name>toString</name></member>
      <member refid="class_game_object_1adad7d284b670db722a2fda8e6a7997e3" prot="protected" virt="virtual"><scope>GameObject</scope><name>update</name></member>
      <member refid="class_game_object_1aebcdb5143027789a5f3b0f4ada2dac6b" prot="protected" virt="non-virtual"><scope>GameObject</scope><name>vectr</name></member>
      <member refid="class_game_object_1a372fee85f1892fd1fe258061dfb13269" prot="public" virt="non-virtual"><scope>GameObject</scope><name>wander</name></member>
      <member refid="class_game_object_1a19ecfd085a11c42d868e25c796419df8" prot="private" virt="non-virtual"><scope>GameObject</scope><name>WorldController</name></member>
      <member refid="class_game_object_1ab82dfdb656f9051c0587e6593b2dda97" prot="public" virt="virtual"><scope>GameObject</scope><name>~GameObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
