<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_input_8hpp" kind="file">
    <compoundname>Input.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes local="no">vector</includes>
    <includes local="no">functional</includes>
    <includes local="no">initializer_list</includes>
    <includes local="no">list</includes>
    <includes local="no">SDL2/SDL.h</includes>
    <includes local="no">SDL2/SDL_events.h</includes>
    <includes local="no">SDL2/SDL_keyboard.h</includes>
    <includes local="no">SDL2/SDL_video.h</includes>
    <includes refid="_game_state_8hpp" local="yes">../World/GameState.hpp</includes>
    <includes refid="_game_interface_8h" local="yes">../World/GameInterface.h</includes>
    <includes refid="_configuration_8h" local="yes">../Control/Configuration.h</includes>
    <includedby refid="_input_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.cpp</includedby>
    <includedby refid="_game_object_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h</includedby>
    <includedby refid="_character_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.h</includedby>
    <includedby refid="_n_p_c_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.h</includedby>
    <includedby refid="main_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</includedby>
    <includedby refid="_player_character_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.h</includedby>
    <includedby refid="_player_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.h</includedby>
    <includedby refid="_main_controller_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.h</includedby>
    <incdepgraph>
      <node id="220">
        <label>list</label>
      </node>
      <node id="247">
        <label>iomanip</label>
      </node>
      <node id="218">
        <label>functional</label>
      </node>
      <node id="243">
        <label>queue</label>
      </node>
      <node id="253">
        <label>limits</label>
      </node>
      <node id="250">
        <label>BasicConcurrency.h</label>
        <link refid="_basic_concurrency_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="248">
        <label>assert.h</label>
      </node>
      <node id="224">
        <label>SDL2/SDL_video.h</label>
      </node>
      <node id="256">
        <label>../World/GameInterface.h</label>
        <link refid="_game_interface_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="255">
        <label>ForwardDecl.h</label>
        <link refid="_forward_decl_8h"/>
      </node>
      <node id="231">
        <label>SDL2/SDL_render.h</label>
      </node>
      <node id="249">
        <label>Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>cmath</label>
      </node>
      <node id="233">
        <label>string</label>
      </node>
      <node id="237">
        <label>fstream</label>
      </node>
      <node id="226">
        <label>ostream</label>
      </node>
      <node id="225">
        <label>../World/GameState.hpp</label>
        <link refid="_game_state_8hpp"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>GameRandom.hpp</label>
        <link refid="_game_random_8hpp"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="254">
        <label>random</label>
      </node>
      <node id="230">
        <label>condition_variable</label>
      </node>
      <node id="217">
        <label>vector</label>
      </node>
      <node id="222">
        <label>SDL2/SDL_events.h</label>
      </node>
      <node id="238">
        <label>../Control/Configuration.h</label>
        <link refid="_configuration_8h"/>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>array</label>
      </node>
      <node id="227">
        <label>sstream</label>
      </node>
      <node id="214">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp</label>
        <link refid="Input.hpp"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>Velocity.hpp</label>
        <link refid="_velocity_8hpp"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>../Util/Util.hpp</label>
        <link refid="_util_8hpp"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>iostream</label>
      </node>
      <node id="244">
        <label>deque</label>
      </node>
      <node id="241">
        <label>DefaultConfig.h</label>
        <link refid="_default_config_8h"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>BoundsCheck.hpp</label>
        <link refid="_bounds_check_8hpp"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>mutex</label>
      </node>
      <node id="239">
        <label>chrono</label>
      </node>
      <node id="235">
        <label>SDL2/SDL_rect.h</label>
      </node>
      <node id="242">
        <label>../Util/Position.hpp</label>
        <link refid="_position_8hpp"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>thread</label>
      </node>
      <node id="258">
        <label>CharacterData.h</label>
        <link refid="_character_data_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="236">
        <label>../Util/Debug.h</label>
        <link refid="_debug_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="240">
        <label>../Output/DisplayData.h</label>
        <link refid="_display_data_8h"/>
      </node>
      <node id="223">
        <label>SDL2/SDL_keyboard.h</label>
      </node>
      <node id="251">
        <label>memory</label>
      </node>
      <node id="219">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="274">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="276">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.cpp</label>
        <link refid="_character_8cpp"/>
      </node>
      <node id="268">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.cpp</label>
        <link refid="_main_controller_8cpp"/>
      </node>
      <node id="262">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="261">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.h</label>
        <link refid="_weapon_8h"/>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.h</label>
        <link refid="_enemy_8h"/>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.cpp</label>
        <link refid="_player_character_8cpp"/>
      </node>
      <node id="271">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.cpp</label>
        <link refid="_n_p_c_8cpp"/>
      </node>
      <node id="272">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.h</label>
        <link refid="_player_character_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="269">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.cpp</label>
        <link refid="_world_controller_8cpp"/>
      </node>
      <node id="267">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.h</label>
        <link refid="_main_controller_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
      <node id="270">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.cpp</label>
        <link refid="_enemy_8cpp"/>
      </node>
      <node id="264">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.h</label>
        <link refid="_n_p_c_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.cpp</label>
        <link refid="_weapon_8cpp"/>
      </node>
      <node id="259">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp</label>
        <link refid="Input.hpp"/>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.h</label>
        <link refid="_graphical_output_8h"/>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp</label>
        <link refid="_game_object_8cpp"/>
      </node>
      <node id="273">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.h</label>
        <link refid="_player_8h"/>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="278">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.cpp</label>
        <link refid="_graphical_output_8cpp"/>
      </node>
      <node id="260">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.cpp</label>
        <link refid="_input_8cpp"/>
      </node>
      <node id="263">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.h</label>
        <link refid="_character_8h"/>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
      </node>
      <node id="266">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.h</label>
        <link refid="_world_controller_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_event_register_base" prot="public">EventRegisterBase</innerclass>
    <innerclass refid="class_event_register" prot="public">EventRegister</innerclass>
    <innerclass refid="class_key_input_register" prot="public">KeyInputRegister</innerclass>
    <innerclass refid="class_switchable_key_input_register" prot="public">SwitchableKeyInputRegister</innerclass>
    <innerclass refid="class_input_controller" prot="public">InputController</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" prot="public" static="no">
        <name>KeypressEvaluationMethod</name>
        <enumvalue id="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91a1833e28b1fa85353670f723a1719f49e" prot="public">
          <name>exactlyOne</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91aa181a603769c1f98ad927e7367c7aa51" prot="public">
          <name>all</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91a100b8cad7cf2a56f6df78f171f97a1ec" prot="public">
          <name>any</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether a <ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref> should evaluate all requested key presses inclusively, or exclusively. In other words, if the client wishes to call a given function when, say, either &quot;G&quot;, or SDL_SCANCODE_KP_PLUS, or &quot;T&quot; are pressed, but not neccessarily all of them, they should use <ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91a100b8cad7cf2a56f6df78f171f97a1ec" kindref="member">KeypressEvaluationMethod::any</ref>. If they want a certain function called when <emphasis>all</emphasis> of those keys are used at once, they should use EvaluationMethod::all. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" line="166" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" bodystart="166" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_input_8hpp_1a968dbade547d18c0fc972caf39d984e8" prot="public" static="no">
        <type>SDL_Event</type>
        <definition>typedef SDL_Event Event</definition>
        <argsstring></argsstring>
        <name>Event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" line="32" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_input_8hpp_1ae5e40304c43dac2b9c0f1a7e2505e0e7" prot="public" static="no">
        <type>SDL_EventType</type>
        <definition>typedef SDL_EventType EventType</definition>
        <argsstring></argsstring>
        <name>EventType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" line="33" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_input_8hpp_1ad39c2e59d8cf6782d7ab90b73c0d0ada" prot="public" static="no">
        <type>SDL_Keycode</type>
        <definition>typedef SDL_Keycode KeyCode</definition>
        <argsstring></argsstring>
        <name>KeyCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" line="34" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" prot="public" static="no">
        <type>SDL_Scancode</type>
        <definition>typedef SDL_Scancode ScanCode</definition>
        <argsstring></argsstring>
        <name>ScanCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" line="35" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Input.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>World</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Adam<sp/>James<sp/>Leuer<sp/>on<sp/>4/24/14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Adam<sp/>James<sp/>Leuer.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__GameWorld__Input__</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__GameWorld__Input__</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL_events.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL_keyboard.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL_video.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../World/GameState.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../World/GameInterface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Control/Configuration.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std<sp/>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="_input_8hpp_1a968dbade547d18c0fc972caf39d984e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SDL_Event<sp/><ref refid="_input_8hpp_1a968dbade547d18c0fc972caf39d984e8" kindref="member">Event</ref><sp/>;</highlight></codeline>
<codeline lineno="33" refid="_input_8hpp_1ae5e40304c43dac2b9c0f1a7e2505e0e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SDL_EventType<sp/><ref refid="_input_8hpp_1ae5e40304c43dac2b9c0f1a7e2505e0e7" kindref="member">EventType</ref><sp/>;</highlight></codeline>
<codeline lineno="34" refid="_input_8hpp_1ad39c2e59d8cf6782d7ab90b73c0d0ada" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SDL_Keycode<sp/><ref refid="_input_8hpp_1ad39c2e59d8cf6782d7ab90b73c0d0ada" kindref="member">KeyCode</ref><sp/>;</highlight></codeline>
<codeline lineno="35" refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SDL_Scancode<sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_event_register_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="class_event_register_base_1a4747220b6d3bdaadda3adee1ad621d4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/><ref refid="class_event_register_base_1a4747220b6d3bdaadda3adee1ad621d4e" kindref="member">memberToCallOn</ref><sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="class_event_register_base_1ad0d7c12c7c5c7176a48388cec7e74923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*member_callBackFunction)()<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>void<sp/>(*callBackFunction)()<sp/>;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//old<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="class_event_register_base_1a8fcbaadc872f483e42426960e159d4b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>function&lt;void<sp/>(void)&gt;<sp/><ref refid="class_event_register_base_1a8fcbaadc872f483e42426960e159d4b4" kindref="member">callBackFunction</ref><sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="class_event_register_base_1ad28e4551bc4710d3a79ff5d5f3f50543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>=<sp/>nullptr<sp/>;<sp/></highlight><highlight class="comment">//null<sp/>except<sp/>in<sp/>rare<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="class_event_register_base_1a083d5a8d8c2dd3a28d1f55d2965db0ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_controller" kindref="compound">InputController</ref><sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="class_event_register_base_1ab73e973655dabe4de4d5f261736a9201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_base_1ab73e973655dabe4de4d5f261736a9201" kindref="member">EventRegisterBase</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="class_event_register_base_1a63f991f6dd36375b4f845711481d0e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_base_1a63f991f6dd36375b4f845711481d0e8e" kindref="member">EventRegisterBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref><sp/>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memberToCallOn(other.memberToCallOn),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_callBackFunction(other.member_callBackFunction),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callBackFunction(other.callBackFunction)<sp/>{}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="class_event_register_base_1ae5983e78604cc916282577c7ce0edc18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_base_1ae5983e78604cc916282577c7ce0edc18" kindref="member">EventRegisterBase</ref>(<ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref><sp/>&amp;&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memberToCallOn(other.memberToCallOn),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_callBackFunction(std::move(other.member_callBackFunction)),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callBackFunction(std::move(other.callBackFunction))<sp/>{}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="class_event_register_base_1ad7b93cb60058b038ba9a5e61a3d1e0b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_base_1ad7b93cb60058b038ba9a5e61a3d1e0b5" kindref="member">EventRegisterBase</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)())<sp/>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memberToCallOn(callOn),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_callBackFunction(cb),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callBackFunction(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="97" refid="class_event_register_base_1a945b318dc066bd29c758e9bb78645c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_base_1a945b318dc066bd29c758e9bb78645c25" kindref="member">EventRegisterBase</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)(),<sp/>T<sp/>arg0)<sp/>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memberToCallOn(callOn),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_callBackFunction(cb),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg(arg0),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callBackFunction(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="class_event_register_base_1a85aac264fad1290ad9b4119802401890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_base_1a85aac264fad1290ad9b4119802401890" kindref="member">EventRegisterBase</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>cb)<sp/>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memberToCallOn(nullptr),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member_callBackFunction(nullptr),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callBackFunction(cb)<sp/>{}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>callBack()<sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_event_register" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_event_register" kindref="compound">EventRegister</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124" refid="class_event_register_1a0b6153036279b1189d7349d4f97632a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ae5e40304c43dac2b9c0f1a7e2505e0e7" kindref="member">EventType</ref><sp/><ref refid="class_event_register_1a0b6153036279b1189d7349d4f97632a9" kindref="member">eventType</ref><sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="class_event_register_1a083d5a8d8c2dd3a28d1f55d2965db0ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_controller" kindref="compound">InputController</ref><sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="class_event_register_1a41739c6653b17ec40d294591be47e709" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_1a41739c6653b17ec40d294591be47e709" kindref="member">EventRegister</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="class_event_register_1ae5f23b5853832189a422f8bf0f1539ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_1ae5f23b5853832189a422f8bf0f1539ed" kindref="member">EventRegister</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_event_register" kindref="compound">EventRegister</ref><sp/>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(other),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventType(other.eventType)<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="class_event_register_1a4ae5b21f5051b7a8165d3429e33f46b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_1a4ae5b21f5051b7a8165d3429e33f46b4" kindref="member">EventRegister</ref>(<ref refid="class_event_register" kindref="compound">EventRegister</ref><sp/>&amp;&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(std::move(other)),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventType(other.eventType)<sp/>{}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="class_event_register_1a49194d607881335a3a8eb69ecdb636b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_1a49194d607881335a3a8eb69ecdb636b0" kindref="member">EventRegister</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)(),<sp/><ref refid="_input_8hpp_1ae5e40304c43dac2b9c0f1a7e2505e0e7" kindref="member">EventType</ref><sp/>eventType)<sp/>:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(callOn,<sp/>cb),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventType(eventType)<sp/>{}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="146" refid="class_event_register_1ae306d8fffaa2290aeee74ec444053ba5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_1ae306d8fffaa2290aeee74ec444053ba5" kindref="member">EventRegister</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)(),<sp/>T<sp/>*<sp/>arg0,<sp/><ref refid="_input_8hpp_1ae5e40304c43dac2b9c0f1a7e2505e0e7" kindref="member">EventType</ref><sp/>eventType)<sp/>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(callOn,<sp/>cb,<sp/>arg0),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventType(eventType)<sp/>{}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150" refid="class_event_register_1a920b1e5a22a82fee463632f2ebd940bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_1a920b1e5a22a82fee463632f2ebd940bd" kindref="member">EventRegister</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>cb,<sp/><ref refid="_input_8hpp_1ae5e40304c43dac2b9c0f1a7e2505e0e7" kindref="member">EventType</ref><sp/>eventType)<sp/>:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(cb),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventType(eventType)<sp/>{}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="class_event_register_1a2acf491bc76d59b6ae684e6cb5c78519" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_register_1a2acf491bc76d59b6ae684e6cb5c78519" kindref="member">~EventRegister</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_input_8hpp_1a968dbade547d18c0fc972caf39d984e8" kindref="member">Event</ref><sp/>*<sp/>currentEvent)<sp/>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91a1833e28b1fa85353670f723a1719f49e" kindref="member">exactlyOne</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91aa181a603769c1f98ad927e7367c7aa51" kindref="member">all</ref>,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91a100b8cad7cf2a56f6df78f171f97a1ec" kindref="member">any</ref></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_key_input_register" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="class_key_input_register_1abc2af3b54d196eda9e64fdcd6da118d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ScanCode&gt;<sp/><ref refid="class_key_input_register_1abc2af3b54d196eda9e64fdcd6da118d0" kindref="member">scanCodes</ref><sp/>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="class_key_input_register_1a6ff79253202f3106320ed21e9f3eb803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/><ref refid="class_key_input_register_1a6ff79253202f3106320ed21e9f3eb803" kindref="member">requestedKeyboardChars</ref><sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187" refid="class_key_input_register_1a15cc8379e648634a63e1bedd645d03c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;KeyCode&gt;<sp/><ref refid="class_key_input_register_1a15cc8379e648634a63e1bedd645d03c3" kindref="member">requestedKeyCodes</ref><sp/>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189" refid="class_key_input_register_1a99a156d91abafbd8a1f191d15158d1ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/><ref refid="class_key_input_register_1a99a156d91abafbd8a1f191d15158d1ba" kindref="member">requestedKeyEvalMethod</ref><sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194" refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyChar<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyCode<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>both<sp/>=<sp/>(keyChar<sp/>&amp;<sp/>keyCode)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>keyIDMethod<sp/>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkForPressedKeys(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>keyboardState,<sp/>vector&lt;ScanCode&gt;::iterator<sp/>scanCode)<sp/>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleKeyboardInput(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>keyboardState)<sp/>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208" refid="class_key_input_register_1a083d5a8d8c2dd3a28d1f55d2965db0ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_controller" kindref="compound">InputController</ref><sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212" refid="class_key_input_register_1a6a51b43c1ceadda862deed824456434e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a6a51b43c1ceadda862deed824456434e" kindref="member">KeyInputRegister</ref>()<sp/>{}<sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214" refid="class_key_input_register_1ac0c481b0e43fdad2965d547477412a89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1ac0c481b0e43fdad2965d547477412a89" kindref="member">KeyInputRegister</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref><sp/>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyboardChars(vector&lt;string&gt;(other.requestedKeyboardChars)),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyCodes(vector&lt;<ref refid="_input_8hpp_1ad39c2e59d8cf6782d7ab90b73c0d0ada" kindref="member">KeyCode</ref>&gt;(other.requestedKeyCodes)),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(other.requestedKeyEvalMethod),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(other.keyIDMethod)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>(i<sp/>&lt;<sp/>requestedKeyboardChars.size())<sp/>||<sp/>(i<sp/>&lt;<sp/>requestedKeyCodes.size())<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>requestedKeyboardChars.size())<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyboardChars.at(i).c_str())<sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>requestedKeyCodes.size())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyCodes.at(i))<sp/>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="class_key_input_register_1a965d3c77c5f5edd8a6e376cd8bf0a55f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a965d3c77c5f5edd8a6e376cd8bf0a55f" kindref="member">KeyInputRegister</ref>(<ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref><sp/>&amp;&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(std::move(other)),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(std::move(other.scanCodes)),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyboardChars(std::move(other.requestedKeyboardChars)),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyCodes(std::move(other.requestedKeyCodes)),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(other.requestedKeyEvalMethod),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(std::move(other.keyIDMethod))<sp/>{}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="class_key_input_register_1a19aa82ae77df55f40f3fcbbf37d6e78a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a19aa82ae77df55f40f3fcbbf37d6e78a" kindref="member">KeyInputRegister</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)(),<sp/>initializer_list&lt;string&gt;<sp/>keyChar,<sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/>m)<sp/>:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(callOn,<sp/>cb),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyboardChars(keyChar),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(m),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(<ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref>::keyChar)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>requestedKeyboardChars.size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyboardChars.at(i).c_str())<sp/>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="257" refid="class_key_input_register_1aa4e8032393db889d4835183891b4a4f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1aa4e8032393db889d4835183891b4a4f5" kindref="member">KeyInputRegister</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)(),<sp/>T<sp/>*<sp/>arg0,<sp/>initializer_list&lt;string&gt;<sp/>keyChar,<sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/>m)<sp/>:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(callOn,<sp/>cb,<sp/>arg0),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyboardChars(keyChar),</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(m),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(<ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref>::keyChar)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>requestedKeyboardChars.size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyboardChars.at(i).c_str())<sp/>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270" refid="class_key_input_register_1a2fd8e4aeb3e624f4c6f86ba34481c4ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a2fd8e4aeb3e624f4c6f86ba34481c4ee" kindref="member">KeyInputRegister</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>cb,<sp/>initializer_list&lt;string&gt;<sp/>keyChar,<sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/>m)<sp/>:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(cb),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyboardChars(keyChar),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(m),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(<ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref>::keyChar)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>requestedKeyboardChars.size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyboardChars.at(i).c_str())<sp/>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283" refid="class_key_input_register_1a261ad3b9948e06fb843459393ee2489f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a261ad3b9948e06fb843459393ee2489f" kindref="member">KeyInputRegister</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)(),<sp/>initializer_list&lt;KeyCode&gt;<sp/>keyCode,<sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/>m)<sp/>:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(callOn,<sp/>cb),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyCodes(keyCode),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(m),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(<ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref>::keyCode)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>requestedKeyCodes.size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyCodes.at(i))<sp/>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296" refid="class_key_input_register_1a27e34e2fc96aa8b92583c1dca8dcb0e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a27e34e2fc96aa8b92583c1dca8dcb0e7" kindref="member">KeyInputRegister</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>cb,<sp/>initializer_list&lt;KeyCode&gt;<sp/>keyCode)<sp/>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(cb),</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyCodes(keyCode),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(<ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref>::keyCode)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>requestedKeyCodes.size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyCodes.at(i))<sp/>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="class_key_input_register_1abe0349140084c11d90cdf3f56278407f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1abe0349140084c11d90cdf3f56278407f" kindref="member">KeyInputRegister</ref>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>callOn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_game_interface" kindref="compound">GameInterface</ref>::*cb)(),<sp/>initializer_list&lt;string&gt;<sp/>keyChar,<sp/>initializer_list&lt;KeyCode&gt;<sp/>keyCode,<sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/>m)<sp/>:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(callOn,<sp/>cb),</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyboardChars(keyChar),</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyCodes(keyCode),</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(m),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(<ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref>::both)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>(i<sp/>&lt;<sp/>requestedKeyboardChars.size())<sp/>||<sp/>(i<sp/>&lt;<sp/>requestedKeyCodes.size())<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>requestedKeyboardChars.size())<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyboardChars.at(i).c_str())<sp/>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>requestedKeyCodes.size())<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyCodes.at(i))<sp/>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328" refid="class_key_input_register_1a255b4fcfd7ff93d8c81c4963dc77d424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a255b4fcfd7ff93d8c81c4963dc77d424" kindref="member">KeyInputRegister</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>cb,<sp/>initializer_list&lt;string&gt;<sp/>keyChar,<sp/>initializer_list&lt;KeyCode&gt;<sp/>keyCode,<sp/><ref refid="_input_8hpp_1ac32d0351518cb71146a1cd777bc4fc91" kindref="member">KeypressEvaluationMethod</ref><sp/>m)<sp/>:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_register_base" kindref="compound">EventRegisterBase</ref>(cb),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes(vector&lt;<ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref>&gt;()),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyboardChars(keyChar),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyCodes(keyCode),</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestedKeyEvalMethod(m),</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyIDMethod(<ref refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" kindref="member">KeyIdenMethod</ref>::both)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>(i<sp/>&lt;<sp/>requestedKeyboardChars.size())<sp/>||<sp/>(i<sp/>&lt;<sp/>requestedKeyCodes.size())<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>requestedKeyboardChars.size())<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyboardChars.at(i).c_str())<sp/>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>requestedKeyCodes.size())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/>scanCode<sp/>=<sp/>getScanCodeFor(requestedKeyCodes.at(i))<sp/>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanCodes.push_back(scanCode)<sp/>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348" refid="class_key_input_register_1a5c01a99075e25878f2cb673d6341861b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_key_input_register_1a5c01a99075e25878f2cb673d6341861b" kindref="member">~KeyInputRegister</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350" refid="class_key_input_register_1a439b37fd3322d8957aa95d9775550db5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/><ref refid="class_key_input_register_1a439b37fd3322d8957aa95d9775550db5" kindref="member">getScanCodeFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SDL_GetScancodeFromName(c)<sp/>;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>wrapper<sp/>(just<sp/>in<sp/>case</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>forget<sp/>how<sp/>to<sp/>get<sp/>scancodes!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_key_input_register_1a4f8b4b7572911432931bf6bd835f52ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_input_8hpp_1ab11de2748648ed8559e324a4b8dfb2da" kindref="member">ScanCode</ref><sp/><ref refid="class_key_input_register_1a4f8b4b7572911432931bf6bd835f52ef" kindref="member">getScanCodeFor</ref>(<ref refid="_input_8hpp_1ad39c2e59d8cf6782d7ab90b73c0d0ada" kindref="member">KeyCode</ref><sp/>code)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SDL_GetScancodeFromKey(code)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_switchable_key_input_register" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_switchable_key_input_register" kindref="compound">SwitchableKeyInputRegister</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::list&lt;SwitchableKeyInputRegister<sp/>*&gt;<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="class_input_controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_controller" kindref="compound">InputController</ref><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380" refid="class_input_controller_1afe327cb5fda23f106b0614d9119b1714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vector&lt;EventRegister<sp/>*&gt;<sp/>*<sp/><ref refid="class_input_controller_1afe327cb5fda23f106b0614d9119b1714" kindref="member">eventListenerRegistry</ref><sp/>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385" refid="class_input_controller_1a2e26dc4af1946fa78c817f2bd3f4a319" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vector&lt;KeyInputRegister<sp/>*&gt;<sp/>*<sp/><ref refid="class_input_controller_1a2e26dc4af1946fa78c817f2bd3f4a319" kindref="member">keyInputRegistry</ref><sp/>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387" refid="class_input_controller_1aa88d822c29ba14ed6fc2b35f171161ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_input_8hpp_1a968dbade547d18c0fc972caf39d984e8" kindref="member">Event</ref><sp/>*<sp/><ref refid="class_input_controller_1aa88d822c29ba14ed6fc2b35f171161ce" kindref="member">event</ref><sp/>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392" refid="class_input_controller_1a17d54f67ffd783a8fca81a94a6de02e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_input_controller_1a17d54f67ffd783a8fca81a94a6de02e7" kindref="member">keys</ref><sp/>;</highlight></codeline>
<codeline lineno="393" refid="class_input_controller_1a95bfc98ab2e37c9772b678e9b561c97d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_input_controller_1a95bfc98ab2e37c9772b678e9b561c97d" kindref="member">keyArraySize</ref><sp/>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>listenForKeypress()<sp/>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>listenForEvents()<sp/>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_input_controller" kindref="compound">InputController</ref>()<sp/>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>registerForEvent(<ref refid="class_event_register" kindref="compound">EventRegister</ref><sp/>*<sp/>reg)<sp/>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>registerForKeypress(<ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref><sp/>*<sp/>reg)<sp/>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>registerFor(T<sp/>*<sp/>event_or_keypress)<sp/>;<sp/></highlight><highlight class="comment">//convenience<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deregister(<ref refid="class_game_interface" kindref="compound">GameInterface</ref><sp/>*<sp/>registeredObject)<sp/>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init()<sp/>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update()<sp/>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exit()<sp/>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__GameWorld__Input__)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp"/>
  </compounddef>
</doxygen>
