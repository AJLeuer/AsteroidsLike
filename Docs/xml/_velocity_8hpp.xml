<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_velocity_8hpp" kind="file">
    <compoundname>Velocity.hpp</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">thread</includes>
    <includes local="no">mutex</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">assert.h</includes>
    <includes refid="_timer_8hpp" local="yes">Timer.hpp</includes>
    <includes refid="_basic_concurrency_8h" local="yes">BasicConcurrency.h</includes>
    <includes refid="_configuration_8h" local="yes">../Control/Configuration.h</includes>
    <includedby refid="_position_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp</includedby>
    <includedby refid="main_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</includedby>
    <includedby refid="_main_controller_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.h</includedby>
    <includedby refid="_velocity_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.cpp</includedby>
    <incdepgraph>
      <node id="1946">
        <label>iomanip</label>
      </node>
      <node id="1961">
        <label>BasicConcurrency.h</label>
        <link refid="_basic_concurrency_8h"/>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
        <childnode refid="1942" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
      </node>
      <node id="1949">
        <label>assert.h</label>
      </node>
      <node id="1955">
        <label>SDL2/SDL_video.h</label>
      </node>
      <node id="1950">
        <label>Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
      </node>
      <node id="1957">
        <label>cmath</label>
      </node>
      <node id="1947">
        <label>string</label>
      </node>
      <node id="1953">
        <label>fstream</label>
      </node>
      <node id="1952">
        <label>ostream</label>
      </node>
      <node id="1944">
        <label>vector</label>
      </node>
      <node id="1954">
        <label>../Control/Configuration.h</label>
        <link refid="_configuration_8h"/>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1953" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
      </node>
      <node id="1948">
        <label>sstream</label>
      </node>
      <node id="1940">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp</label>
        <link refid="Velocity.hpp"/>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1942" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1946" relation="include">
        </childnode>
        <childnode refid="1947" relation="include">
        </childnode>
        <childnode refid="1948" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1954" relation="include">
        </childnode>
      </node>
      <node id="1956">
        <label>../Util/Util.hpp</label>
        <link refid="_util_8hpp"/>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1942" relation="include">
        </childnode>
        <childnode refid="1947" relation="include">
        </childnode>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1958" relation="include">
        </childnode>
      </node>
      <node id="1945">
        <label>iostream</label>
      </node>
      <node id="1960">
        <label>DefaultConfig.h</label>
        <link refid="_default_config_8h"/>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
      </node>
      <node id="1943">
        <label>mutex</label>
      </node>
      <node id="1941">
        <label>chrono</label>
      </node>
      <node id="1958">
        <label>SDL2/SDL_rect.h</label>
      </node>
      <node id="1942">
        <label>thread</label>
      </node>
      <node id="1951">
        <label>Debug.h</label>
        <link refid="_debug_8h"/>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
        <childnode refid="1953" relation="include">
        </childnode>
        <childnode refid="1954" relation="include">
        </childnode>
      </node>
      <node id="1959">
        <label>../Output/DisplayData.h</label>
        <link refid="_display_data_8h"/>
      </node>
      <node id="1962">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1982">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="2006">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/ConsoleOutput.cpp</label>
        <link refid="_console_output_8cpp"/>
      </node>
      <node id="2000">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util2.h</label>
        <link refid="_util2_8h"/>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
      </node>
      <node id="1984">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.cpp</label>
        <link refid="_character_8cpp"/>
      </node>
      <node id="1990">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameInterface.h</label>
        <link refid="_game_interface_8h"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
      </node>
      <node id="2003">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Size.hpp</label>
        <link refid="_size_8hpp"/>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
      </node>
      <node id="1976">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.cpp</label>
        <link refid="_main_controller_8cpp"/>
      </node>
      <node id="1995">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/AssetFileIO.h</label>
        <link refid="_asset_file_i_o_8h"/>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1999" relation="include">
        </childnode>
      </node>
      <node id="1970">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1969">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
      </node>
      <node id="1987">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.h</label>
        <link refid="_weapon_8h"/>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
      </node>
      <node id="1973">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.h</label>
        <link refid="_enemy_8h"/>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1978" relation="include">
        </childnode>
      </node>
      <node id="1983">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.cpp</label>
        <link refid="_player_character_8cpp"/>
      </node>
      <node id="1979">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.cpp</label>
        <link refid="_n_p_c_8cpp"/>
      </node>
      <node id="1980">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.h</label>
        <link refid="_player_character_8h"/>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
      </node>
      <node id="2005">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/ConsoleOutput.hpp</label>
        <link refid="_console_output_8hpp"/>
        <childnode refid="2006" relation="include">
        </childnode>
      </node>
      <node id="1977">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.cpp</label>
        <link refid="_world_controller_8cpp"/>
      </node>
      <node id="1999">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/AssetFileIO.cpp</label>
        <link refid="_asset_file_i_o_8cpp"/>
      </node>
      <node id="1966">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.hpp</label>
        <link refid="_game_state_8hpp"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2001" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="2002" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
      </node>
      <node id="2001">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameMap.hpp</label>
        <link refid="_game_map_8hpp"/>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
      </node>
      <node id="2002">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.cpp</label>
        <link refid="_velocity_8cpp"/>
      </node>
      <node id="1975">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.h</label>
        <link refid="_main_controller_8h"/>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
      </node>
      <node id="1978">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.cpp</label>
        <link refid="_enemy_8cpp"/>
      </node>
      <node id="1972">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.h</label>
        <link refid="_n_p_c_8h"/>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1979" relation="include">
        </childnode>
      </node>
      <node id="1991">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameEvent.h</label>
        <link refid="_game_event_8h"/>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
        <childnode refid="1994" relation="include">
        </childnode>
      </node>
      <node id="1988">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.cpp</label>
        <link refid="_weapon_8cpp"/>
      </node>
      <node id="1998">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.cpp</label>
        <link refid="_game_state_8cpp"/>
      </node>
      <node id="1967">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp</label>
        <link refid="_input_8hpp"/>
        <childnode refid="1968" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
      </node>
      <node id="1963">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp</label>
        <link refid="Velocity.hpp"/>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="2002" relation="include">
        </childnode>
      </node>
      <node id="1985">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.h</label>
        <link refid="_graphical_output_8h"/>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1986" relation="include">
        </childnode>
      </node>
      <node id="1989">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp</label>
        <link refid="_game_object_8cpp"/>
      </node>
      <node id="1965">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp</label>
        <link refid="_configuration_8cpp"/>
      </node>
      <node id="1964">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp</label>
        <link refid="_position_8hpp"/>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="2001" relation="include">
        </childnode>
        <childnode refid="2004" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
      </node>
      <node id="1993">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Ability.cpp</label>
        <link refid="_ability_8cpp"/>
      </node>
      <node id="1981">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.h</label>
        <link refid="_player_8h"/>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1982" relation="include">
        </childnode>
      </node>
      <node id="1997">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/TextOutput.hpp</label>
        <link refid="_text_output_8hpp"/>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
      </node>
      <node id="1996">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/OutputData.hpp</label>
        <link refid="_output_data_8hpp"/>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
      </node>
      <node id="2004">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Navigator.hpp</label>
        <link refid="_navigator_8hpp"/>
        <childnode refid="2001" relation="include">
        </childnode>
      </node>
      <node id="1986">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.cpp</label>
        <link refid="_graphical_output_8cpp"/>
      </node>
      <node id="1968">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.cpp</label>
        <link refid="_input_8cpp"/>
      </node>
      <node id="1994">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameEvent.cpp</label>
        <link refid="_game_event_8cpp"/>
      </node>
      <node id="1971">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.h</label>
        <link refid="_character_8h"/>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1984" relation="include">
        </childnode>
      </node>
      <node id="1992">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Ability.h</label>
        <link refid="_ability_8h"/>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
      </node>
      <node id="1974">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.h</label>
        <link refid="_world_controller_8h"/>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_velocity" prot="public">Velocity</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" prot="public" static="no">
        <name>Distance</name>
        <initializer>N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="34" column="9" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_velocity_8hpp_1a2b5c4ac880131d79589347fd613716fa" prot="public" static="no" mutable="no">
        <type>bool *</type>
        <definition>bool* velocityMonitorContinueSignal</definition>
        <argsstring></argsstring>
        <name>velocityMonitorContinueSignal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="29" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_velocity_8hpp_1a251eccaeae0664dd606fd59224a65b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, Velocity&lt; N &gt; *vel)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="struct_velocity" kindref="compound">Velocity</ref>&lt; N &gt; *</type>
          <declname>vel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="227" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="_velocity_8hpp_1a406013216fe7f37b5354065932715221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, Velocity&lt; N &gt; &amp;vel)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="struct_velocity" kindref="compound">Velocity</ref>&lt; N &gt; &amp;</type>
          <declname>vel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="233" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="233" bodyend="236"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Velocity.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SpriteFight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Adam<sp/>James<sp/>Leuer<sp/>on<sp/>6/29/14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Adam<sp/>James<sp/>Leuer.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SpriteFight_Speed_hpp</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SpriteFight_Speed_hpp</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_timer_8hpp" kindref="compound">Timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_basic_concurrency_8h" kindref="compound">BasicConcurrency.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Control/Configuration.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std<sp/>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_velocity_8hpp_1a2b5c4ac880131d79589347fd613716fa" kindref="member">velocityMonitorContinueSignal</ref><sp/>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="32" refid="struct_velocity" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_velocity" kindref="compound">Velocity</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Distance<sp/>N</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="struct_velocity_1a014fe36081e4170fc42b605048c6086c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_velocity_1a014fe36081e4170fc42b605048c6086c" kindref="member">velocityMonitorInit</ref><sp/>;</highlight></codeline>
<codeline lineno="39" refid="struct_velocity_1a4ebc19cb1b4fc60b609556073a1d8b36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_velocity_1a4ebc19cb1b4fc60b609556073a1d8b36" kindref="member">IDs</ref><sp/>;</highlight></codeline>
<codeline lineno="40" refid="struct_velocity_1a3815a4870a3cb81cf239d58e84eb9284" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vector&lt;Velocity<sp/>*&gt;<sp/><ref refid="struct_velocity_1a3815a4870a3cb81cf239d58e84eb9284" kindref="member">velocityStorage</ref><sp/>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="struct_velocity_1a3f33b62ecfeeeb79c13cd732fbb3a05c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_velocity_1a3f33b62ecfeeeb79c13cd732fbb3a05c" kindref="member">id</ref><sp/>;</highlight></codeline>
<codeline lineno="44" refid="struct_velocity_1a3f3d268a5d9452ad912c19cfcc7c0394" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref><sp/>*<sp/><ref refid="struct_velocity_1a3f3d268a5d9452ad912c19cfcc7c0394" kindref="member">distance</ref><sp/>;</highlight></codeline>
<codeline lineno="45" refid="struct_velocity_1a99f61fd4486ecad5fdbf0c8d3da8c4a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timer" kindref="compound">Timer</ref><sp/>*<sp/><ref refid="struct_velocity_1a99f61fd4486ecad5fdbf0c8d3da8c4a0" kindref="member">timer</ref><sp/>;</highlight></codeline>
<codeline lineno="46" refid="struct_velocity_1a099e0c3e044ce52e11b1e7ab225f896c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/><ref refid="struct_velocity_1a099e0c3e044ce52e11b1e7ab225f896c" kindref="member">localContinueSignal</ref><sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="struct_velocity_1a4a65b272ce588eab6a9a9fa1fdb94a01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref><sp/>lastDistance<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="struct_velocity_1a70e2af5664f11aeb266920916c271712" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>chrono::nanoseconds<sp/>baseTimeUnit<sp/>=<sp/>std::chrono::milliseconds(30)<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="struct_velocity_1acb312e3b7523314efd771a52fe8f2982" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastVelocity<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calculateVelocity()<sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//friend<sp/>class<sp/>Vectr<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="struct_velocity_1a68112c2f090288d4921a53a21390eac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_basic_mutex" kindref="compound">BasicMutex</ref><sp/>*<sp/><ref refid="struct_velocity_1a68112c2f090288d4921a53a21390eac8" kindref="member">sharedVelMutex</ref><sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="struct_velocity_1af8c34fb6b57a667c06e7baa1801f5df9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;Velocity<sp/>*&gt;<sp/>*<sp/><ref refid="struct_velocity_1af8c34fb6b57a667c06e7baa1801f5df9" kindref="member">getVelocityStorage</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<sp/>velocityStorage<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>monitorVelocity()<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="struct_velocity_1a5a7fc681247a544a000718a35c202958" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity_1a5a7fc681247a544a000718a35c202958" kindref="member">Velocity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref><sp/>*<sp/>distance,<sp/>mutex<sp/>*<sp/>mut,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/>localContinueSignal)<sp/>:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id(IDs),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance(distance),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer(new<sp/><ref refid="class_timer" kindref="compound">Timer</ref>()),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localContinueSignal(localContinueSignal)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDs++<sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer-&gt;startTimer()<sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityStorage.push_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(velocityStorage.at(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;id<sp/>==<sp/>id)<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(velocityMonitorInit<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitorVelocity()<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="struct_velocity_1ab501061b7933ea4bf8d722b5e092972a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity_1ab501061b7933ea4bf8d722b5e092972a" kindref="member">Velocity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref><sp/>*<sp/>distance,<sp/>mutex<sp/>*<sp/>mut,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/>localContinueSignal,<sp/>chrono::nanoseconds<sp/>baseTimeUnitOverride)<sp/>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id(IDs),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance(distance),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer(new<sp/><ref refid="class_timer" kindref="compound">Timer</ref>()),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localContinueSignal(localContinueSignal),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseTimeUnit(baseTimeUnitOverride)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDs++<sp/>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer-&gt;startTimer()<sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityStorage.push_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(velocityStorage.at(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)-&gt;id<sp/>==<sp/>id)<sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(velocityMonitorInit<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitorVelocity()<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity" kindref="compound">Velocity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity</ref><sp/>&amp;<sp/>other)<sp/>=<sp/>delete<sp/>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity" kindref="compound">Velocity</ref>(<ref refid="struct_velocity" kindref="compound">Velocity</ref><sp/>&amp;&amp;<sp/>other)<sp/>=<sp/>delete<sp/>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="struct_velocity_1a328da698ec2f9cbf0de0ab519b6d7f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity_1a328da698ec2f9cbf0de0ab519b6d7f50" kindref="member">~Velocity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityStorage.at(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>timer<sp/>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer<sp/>=<sp/>nullptr<sp/>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity" kindref="compound">Velocity</ref><sp/>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity</ref><sp/>&amp;<sp/>rhs)<sp/>=<sp/>delete<sp/>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_velocity" kindref="compound">Velocity</ref><sp/>&amp;<sp/>operator=(<ref refid="struct_velocity" kindref="compound">Velocity</ref><sp/>&amp;&amp;<sp/>rhs)<sp/><sp/>=<sp/>delete<sp/>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_velocity_1a39c1fe5e6fc453aa435a648d6ce5ef05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_velocity_1a39c1fe5e6fc453aa435a648d6ce5ef05" kindref="member">getValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastVelocity<sp/>*<sp/>100<sp/>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;::velocityMonitorInit</ref><sp/>=<sp/>false<sp/>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;::IDs</ref><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">vector&lt;Velocity&lt;N&gt;<sp/>*&gt;<sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;::velocityStorage</ref><sp/>=<sp/>vector&lt;Velocity&lt;N&gt;<sp/>*&gt;()<sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="class_basic_mutex" kindref="compound">BasicMutex</ref><sp/>*<sp/><ref refid="struct_velocity" kindref="compound">Velocity&lt;N&gt;::sharedVelMutex</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_basic_mutex" kindref="compound">BasicMutex</ref>()<sp/>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="156" refid="struct_velocity_1ab96b02fb83753526f730e2c5b0337a62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_velocity_1ab96b02fb83753526f730e2c5b0337a62" kindref="member">Velocity&lt;N&gt;::monitorVelocity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>velocityMonitor<sp/>=<sp/>[&amp;]<sp/>()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*<ref refid="_velocity_8hpp_1a2b5c4ac880131d79589347fd613716fa" kindref="member">velocityMonitorContinueSignal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculateVelocity()<sp/>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>thr(velocityMonitor)<sp/>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>velocityMonitorInit<sp/>=<sp/>true<sp/>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>thr.detach()<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="170" refid="struct_velocity_1a7676bfee3f05da2e4ced84c838f0c1c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_velocity_1a7676bfee3f05da2e4ced84c838f0c1c6" kindref="member">Velocity&lt;N&gt;::calculateVelocity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>debug<sp/>var<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*<sp/>vs<sp/>=<sp/>&amp;velocityStorage<sp/>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>debug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>(i<sp/>&lt;<sp/>velocityStorage.size())<sp/>&amp;&amp;<sp/>(*<ref refid="_velocity_8hpp_1a2b5c4ac880131d79589347fd613716fa" kindref="member">velocityMonitorContinueSignal</ref>)<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>var<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vs<sp/>=<sp/><ref refid="struct_velocity_1af8c34fb6b57a667c06e7baa1801f5df9" kindref="member">Velocity::getVelocityStorage</ref>()<sp/>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sharedVelMutex-&gt;isLocked()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_thread::sleep_for(<ref refid="_configuration_8cpp_1a25c9c62b009e902fbbedb299ebcda7c5" kindref="member">defaultSleepTime</ref>)<sp/>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedVelMutex-&gt;lock()<sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((velocityStorage.at(i)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(velocityStorage.at(i)-&gt;id<sp/>!=<sp/>-1)<sp/>&amp;&amp;<sp/>(velocityStorage.at(i)-&gt;localContinueSignal))<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((velocityStorage.at(i)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>((velocityStorage.at(i)-&gt;lastDistance<sp/>!=<sp/>*velocityStorage.at(i)-&gt;distance)<sp/>||<sp/>(velocityStorage.at(i)-&gt;lastVelocity<sp/>!=<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>dist0<sp/>=<sp/>*velocityStorage.at(i)-&gt;distance<sp/>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time0<sp/>=<sp/>velocityStorage.at(i)-&gt;timer-&gt;checkTimeElapsed()<sp/>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_thread::sleep_for(velocityStorage.at(i)-&gt;baseTimeUnit)<sp/>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>dist1<sp/>=<sp/>*velocityStorage.at(i)-&gt;distance<sp/>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time1<sp/>=<sp/>velocityStorage.at(i)-&gt;timer-&gt;checkTimeElapsed()<sp/>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>totalDistance<sp/>=<sp/>dist1<sp/>-<sp/>dist0<sp/>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>totalTime<sp/>=<sp/>chrono::duration_cast&lt;chrono::milliseconds&gt;(time1<sp/>-<sp/>time0)<sp/>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timePassed<sp/>=<sp/>totalTime.count()<sp/>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>velocity<sp/>=<sp/>(totalDistance<sp/>/<sp/>timePassed)<sp/>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityStorage.at(i)-&gt;lastVelocity<sp/>=<sp/>velocity<sp/>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityStorage.at(i)-&gt;lastDistance<sp/>=<sp/>*velocityStorage.at(i)-&gt;distance<sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_thread::sleep_for(<ref refid="_configuration_8cpp_1a25c9c62b009e902fbbedb299ebcda7c5" kindref="member">defaultSleepTime</ref>)<sp/>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_thread::sleep_for(<ref refid="_configuration_8cpp_1a25c9c62b009e902fbbedb299ebcda7c5" kindref="member">defaultSleepTime</ref>)<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedVelMutex-&gt;unlock()<sp/>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="227" refid="_velocity_8hpp_1a251eccaeae0664dd606fd59224a65b03" refkind="member"><highlight class="normal">ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>Velocity&lt;N&gt;<sp/>*<sp/>vel)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Velocity:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>vel-&gt;getValue()<sp/>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="233" refid="_velocity_8hpp_1a406013216fe7f37b5354065932715221" refkind="member"><highlight class="normal">ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/>Velocity&lt;N&gt;<sp/>&amp;<sp/>vel)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Velocity:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>vel.getValue()<sp/>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp"/>
  </compounddef>
</doxygen>
