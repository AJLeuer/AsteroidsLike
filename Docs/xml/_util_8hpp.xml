<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_util_8hpp" kind="file">
    <compoundname>Util.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">cmath</includes>
    <includes local="no">SDL2/SDL_rect.h</includes>
    <includedby refid="_configuration_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.h</includedby>
    <includedby refid="_default_config_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/DefaultConfig.h</includedby>
    <includedby refid="_position_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp</includedby>
    <includedby refid="_game_state_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.hpp</includedby>
    <includedby refid="main_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</includedby>
    <includedby refid="_asset_file_i_o_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/AssetFileIO.h</includedby>
    <includedby refid="_game_object_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h</includedby>
    <includedby refid="_util2_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util2.h</includedby>
    <includedby refid="_output_data_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/OutputData.hpp</includedby>
    <includedby refid="_game_map_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameMap.hpp</includedby>
    <includedby refid="_navigator_8hpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Navigator.hpp</includedby>
    <includedby refid="_world_controller_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.h</includedby>
    <includedby refid="_graphical_output_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.h</includedby>
    <includedby refid="_player_8h" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.h</includedby>
    <includedby refid="_display_data_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/DisplayData.cpp</includedby>
    <includedby refid="_util_8cpp" local="yes">/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.cpp</includedby>
    <incdepgraph>
      <node id="1778">
        <label>cmath</label>
      </node>
      <node id="1776">
        <label>string</label>
      </node>
      <node id="1777">
        <label>vector</label>
      </node>
      <node id="1773">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp</label>
        <link refid="Util.hpp"/>
        <childnode refid="1774" relation="include">
        </childnode>
        <childnode refid="1775" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1777" relation="include">
        </childnode>
        <childnode refid="1778" relation="include">
        </childnode>
        <childnode refid="1779" relation="include">
        </childnode>
      </node>
      <node id="1774">
        <label>iostream</label>
      </node>
      <node id="1779">
        <label>SDL2/SDL_rect.h</label>
      </node>
      <node id="1775">
        <label>thread</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1801">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.cpp</label>
        <link refid="_player_8cpp"/>
      </node>
      <node id="1825">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/ConsoleOutput.cpp</label>
        <link refid="_console_output_8cpp"/>
      </node>
      <node id="1819">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util2.h</label>
        <link refid="_util2_8h"/>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
      </node>
      <node id="1803">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.cpp</label>
        <link refid="_character_8cpp"/>
      </node>
      <node id="1809">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameInterface.h</label>
        <link refid="_game_interface_8h"/>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
      </node>
      <node id="1822">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Size.hpp</label>
        <link refid="_size_8hpp"/>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1816" relation="include">
        </childnode>
      </node>
      <node id="1795">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.cpp</label>
        <link refid="_main_controller_8cpp"/>
      </node>
      <node id="1814">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/AssetFileIO.h</label>
        <link refid="_asset_file_i_o_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1818" relation="include">
        </childnode>
      </node>
      <node id="1838">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/DisplayData.cpp</label>
        <link refid="_display_data_8cpp"/>
      </node>
      <node id="1826">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="1827" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1828" relation="include">
        </childnode>
      </node>
      <node id="1789">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1788">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
      </node>
      <node id="1806">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.h</label>
        <link refid="_weapon_8h"/>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
      </node>
      <node id="1792">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.h</label>
        <link refid="_enemy_8h"/>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
      </node>
      <node id="1802">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.cpp</label>
        <link refid="_player_character_8cpp"/>
      </node>
      <node id="1798">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.cpp</label>
        <link refid="_n_p_c_8cpp"/>
      </node>
      <node id="1799">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/PlayerCharacter.h</label>
        <link refid="_player_character_8h"/>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1802" relation="include">
        </childnode>
      </node>
      <node id="1824">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/ConsoleOutput.hpp</label>
        <link refid="_console_output_8hpp"/>
        <childnode refid="1825" relation="include">
        </childnode>
      </node>
      <node id="1796">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.cpp</label>
        <link refid="_world_controller_8cpp"/>
      </node>
      <node id="1818">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/AssetFileIO.cpp</label>
        <link refid="_asset_file_i_o_8cpp"/>
      </node>
      <node id="1785">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.hpp</label>
        <link refid="_game_state_8hpp"/>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1821" relation="include">
        </childnode>
        <childnode refid="1817" relation="include">
        </childnode>
      </node>
      <node id="1820">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameMap.hpp</label>
        <link refid="_game_map_8hpp"/>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
      </node>
      <node id="1821">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.cpp</label>
        <link refid="_velocity_8cpp"/>
      </node>
      <node id="1794">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/MainController.h</label>
        <link refid="_main_controller_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1795" relation="include">
        </childnode>
      </node>
      <node id="1797">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Enemy.cpp</label>
        <link refid="_enemy_8cpp"/>
      </node>
      <node id="1835">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.cpp</label>
        <link refid="_util_8cpp"/>
      </node>
      <node id="1833">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/GameRandom.hpp</label>
        <link refid="_game_random_8hpp"/>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
      </node>
      <node id="1828">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp</label>
        <link refid="_timer_8cpp"/>
      </node>
      <node id="1791">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/NPC.h</label>
        <link refid="_n_p_c_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1798" relation="include">
        </childnode>
      </node>
      <node id="1810">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameEvent.h</label>
        <link refid="_game_event_8h"/>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
      </node>
      <node id="1829">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Debug.cpp</label>
        <link refid="_debug_8cpp"/>
      </node>
      <node id="1807">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Weapon.cpp</label>
        <link refid="_weapon_8cpp"/>
      </node>
      <node id="1817">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameState.cpp</label>
        <link refid="_game_state_8cpp"/>
      </node>
      <node id="1781">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.h</label>
        <link refid="_configuration_8h"/>
        <childnode refid="1782" relation="include">
        </childnode>
        <childnode refid="1783" relation="include">
        </childnode>
        <childnode refid="1830" relation="include">
        </childnode>
        <childnode refid="1827" relation="include">
        </childnode>
        <childnode refid="1833" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1822" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
      </node>
      <node id="1786">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp</label>
        <link refid="_input_8hpp"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1791" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
      </node>
      <node id="1827">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp</label>
        <link refid="_velocity_8hpp"/>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1821" relation="include">
        </childnode>
      </node>
      <node id="1804">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.h</label>
        <link refid="_graphical_output_8h"/>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
      </node>
      <node id="1780">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp</label>
        <link refid="Util.hpp"/>
        <childnode refid="1781" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1823" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
      </node>
      <node id="1808">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameObject.cpp</label>
        <link refid="_game_object_8cpp"/>
      </node>
      <node id="1834">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/GameRandom.cpp</label>
        <link refid="_game_random_8cpp"/>
      </node>
      <node id="1782">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp</label>
        <link refid="_configuration_8cpp"/>
      </node>
      <node id="1837">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/DefaultConfig.h</label>
        <link refid="_default_config_8h"/>
        <childnode refid="1781" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
      </node>
      <node id="1830">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/BoundsCheck.hpp</label>
        <link refid="_bounds_check_8hpp"/>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
      </node>
      <node id="1784">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Position.hpp</label>
        <link refid="_position_8hpp"/>
        <childnode refid="1782" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1822" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1823" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1824" relation="include">
        </childnode>
      </node>
      <node id="1812">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Ability.cpp</label>
        <link refid="_ability_8cpp"/>
      </node>
      <node id="1836">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GameColor.h</label>
        <link refid="_game_color_8h"/>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
      </node>
      <node id="1800">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Player.h</label>
        <link refid="_player_8h"/>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1801" relation="include">
        </childnode>
      </node>
      <node id="1816">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/TextOutput.hpp</label>
        <link refid="_text_output_8hpp"/>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
      </node>
      <node id="1831">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/CharacterData.h</label>
        <link refid="_character_data_8h"/>
        <childnode refid="1832" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
      </node>
      <node id="1815">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/OutputData.hpp</label>
        <link refid="_output_data_8hpp"/>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1817" relation="include">
        </childnode>
      </node>
      <node id="1823">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Navigator.hpp</label>
        <link refid="_navigator_8hpp"/>
        <childnode refid="1820" relation="include">
        </childnode>
      </node>
      <node id="1805">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Output/GraphicalOutput.cpp</label>
        <link refid="_graphical_output_8cpp"/>
      </node>
      <node id="1787">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.cpp</label>
        <link refid="_input_8cpp"/>
      </node>
      <node id="1832">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="1809" relation="include">
        </childnode>
      </node>
      <node id="1813">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/GameEvent.cpp</label>
        <link refid="_game_event_8cpp"/>
      </node>
      <node id="1790">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Character.h</label>
        <link refid="_character_8h"/>
        <childnode refid="1791" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1803" relation="include">
        </childnode>
      </node>
      <node id="1783">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Debug.h</label>
        <link refid="_debug_8h"/>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1826" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1829" relation="include">
        </childnode>
      </node>
      <node id="1811">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/Ability.h</label>
        <link refid="_ability_8h"/>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
      </node>
      <node id="1793">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/World/WorldController.h</label>
        <link refid="_world_controller_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1796" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_drawing" prot="public">Drawing</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_util_8hpp_1abd8ca9c349864d8fa0b0f30e8172be48" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* basicAlphabet</definition>
        <argsstring></argsstring>
        <name>basicAlphabet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="283" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_util_8hpp_1adbc4808a31d9d866cb71606069114eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>N</type>
        <definition>N average</definition>
        <argsstring>(N first, N second)</argsstring>
        <name>average</name>
        <param>
          <type>N</type>
          <declname>first</declname>
        </param>
        <param>
          <type>N</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value to average </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value to average</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The average of the two values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="32" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a1c4fa14bc90ac4410d0200b9303d5d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>N</type>
        <definition>N average</definition>
        <argsstring>(const vector&lt; N &gt; &amp;numbers)</argsstring>
        <name>average</name>
        <param>
          <type>const vector&lt; N &gt; &amp;</type>
          <declname>numbers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="39" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="39" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a02d80524463f5c93d38d39344b46cd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T setUnsigned</definition>
        <argsstring>(T n)</argsstring>
        <name>setUnsigned</name>
        <param>
          <type>T</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="52" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1afbaed4b0d68594b345e48b9f4344bd57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T pythag</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>pythag</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="61" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a8512b81ec26f5821b8d439632bd4d8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T findSmallest_helper</definition>
        <argsstring>(unsigned long currSmallest, vector&lt; T &gt; cont)</argsstring>
        <name>findSmallest_helper</name>
        <param>
          <type>unsigned long</type>
          <declname>currSmallest</declname>
        </param>
        <param>
          <type>vector&lt; T &gt;</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="66" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="66" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a76ec7dcf8105a782f975edc9b86e0a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T findSmallest</definition>
        <argsstring>(vector&lt; T &gt; cont)</argsstring>
        <name>findSmallest</name>
        <param>
          <type>vector&lt; T &gt;</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="84" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1aa1ed00d48d918ed371ca406f442382e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T findLargest_helper</definition>
        <argsstring>(unsigned long currLargest, vector&lt; T &gt; cont)</argsstring>
        <name>findLargest_helper</name>
        <param>
          <type>unsigned long</type>
          <declname>currLargest</declname>
        </param>
        <param>
          <type>vector&lt; T &gt;</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="89" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="89" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a6bef41ddbe95816fb0336b2847e0fa51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T findLargest</definition>
        <argsstring>(vector&lt; T &gt; cont)</argsstring>
        <name>findLargest</name>
        <param>
          <type>vector&lt; T &gt;</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="106" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a86a18f310871a1356c3d1c270d850e6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>N</type>
        <definition>N ceilling</definition>
        <argsstring>(N n1, N n2)</argsstring>
        <name>ceilling</name>
        <param>
          <type>N</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>N</type>
          <declname>n2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="148" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="148" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1adfb200439a96cc92fee115c89902e263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>N</type>
        <definition>N floor</definition>
        <argsstring>(N n1, N n2)</argsstring>
        <name>floor</name>
        <param>
          <type>N</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>N</type>
          <declname>n2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="158" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="158" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
            <defval>float</defval>
          </param>
          <param>
            <type>typename I</type>
            <defval>int</defval>
          </param>
        </templateparamlist>
        <type>I</type>
        <definition>I roundF</definition>
        <argsstring>(F value)</argsstring>
        <name>roundF</name>
        <param>
          <type>F</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rounds a float or double to an int or long </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="172" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="172" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1adb7c1051cb83f75fd714dd689879fc7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
            <defval>int</defval>
          </param>
          <param>
            <type>class FloatPosition</type>
          </param>
        </templateparamlist>
        <type>FloatPosition</type>
        <definition>FloatPosition roundF</definition>
        <argsstring>(FloatPosition &amp;pos)</argsstring>
        <name>roundF</name>
        <param>
          <type>FloatPosition &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="190" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="190" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a4d98de8591edd668edd01c3f70cff420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
            <defval>int</defval>
          </param>
          <param>
            <type>class FloatPosition</type>
          </param>
        </templateparamlist>
        <type>FloatPosition</type>
        <definition>FloatPosition roundF</definition>
        <argsstring>(FloatPosition *pos)</argsstring>
        <name>roundF</name>
        <param>
          <type>FloatPosition *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="205" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="205" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a69ee571c0262b8bd13653e1e347a2729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
            <defval>int</defval>
          </param>
          <param>
            <type>class FloatPosition</type>
          </param>
        </templateparamlist>
        <type>FloatPosition *</type>
        <definition>FloatPosition* roundF</definition>
        <argsstring>(FloatPosition *pos)</argsstring>
        <name>roundF</name>
        <param>
          <type>FloatPosition *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="218" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a1c0f4d3de25ff70e2e2424c47c71f666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
        </templateparamlist>
        <type>SDL_Rect &amp;</type>
        <definition>SDL_Rect&amp; operator*</definition>
        <argsstring>(N n, SDL_Rect &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>N</type>
          <declname>n</declname>
        </param>
        <param>
          <type>SDL_Rect &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="231" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="231" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1af2ffbe7b726877832c94239b5594058c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class vec3</type>
          </param>
          <param>
            <type>class vec2</type>
          </param>
        </templateparamlist>
        <type>SDL_Rect</type>
        <definition>SDL_Rect convertToSDL_Rect</definition>
        <argsstring>(const vec3 position, const vec2 size)</argsstring>
        <name>convertToSDL_Rect</name>
        <param>
          <type>const vec3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const vec2</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="238" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="238" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1aef72576353996260a2b10791cf0ad505" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned termWidth</definition>
        <argsstring>()</argsstring>
        <name>termWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="251" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a0396e69970502820446223a648670663" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned termHeight</definition>
        <argsstring>()</argsstring>
        <name>termHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="256" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a15c9b74884a2474fcc4e2b64e62646e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>string</type>
        <definition>string operator+</definition>
        <argsstring>(const string &amp;str, const T &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloads operator + for std::string to allow appending any type T</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to append </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="268" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="268" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1af524ab944530cf69013e5064d3ba5cb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string operator+</definition>
        <argsstring>(const string &amp;str, const char *rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="275" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="_util_8hpp_1a4c756e2902d65501d8bca292e0d08b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string generateName</definition>
        <argsstring>(unsigned int length)</argsstring>
        <name>generateName</name>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp" line="285" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.cpp" bodystart="33" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Util.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>World</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Adam<sp/>James<sp/>Leuer<sp/>on<sp/>3/20/14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Adam<sp/>James<sp/>Leuer.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SpriteFight_Util_h</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SpriteFight_Util_h</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL_rect.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std<sp/>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="32" refid="_util_8hpp_1adbc4808a31d9d866cb71606069114eae" refkind="member"><highlight class="normal">N<sp/><ref refid="_util_8hpp_1adbc4808a31d9d866cb71606069114eae" kindref="member">average</ref>(N<sp/>first,<sp/>N<sp/>second)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>sum<sp/>=<sp/>(first<sp/>+<sp/>second)<sp/>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sum)<sp/>/<sp/>static_cast&lt;double&gt;(2))<sp/>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">N</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result)<sp/>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="39" refid="_util_8hpp_1a1c4fa14bc90ac4410d0200b9303d5d57" refkind="member"><highlight class="normal">N<sp/><ref refid="_util_8hpp_1adbc4808a31d9d866cb71606069114eae" kindref="member">average</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;N&gt;<sp/>&amp;<sp/>numbers)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>sum<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>numbers.size())<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>numbers.at(i)<sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++<sp/>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>result<sp/>=<sp/>sum/i<sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="52" refid="_util_8hpp_1a02d80524463f5c93d38d39344b46cd36" refkind="member"><highlight class="normal">T<sp/><ref refid="_util_8hpp_1a02d80524463f5c93d38d39344b46cd36" kindref="member">setUnsigned</ref>(T<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(n<sp/>*<sp/>-1)<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="61" refid="_util_8hpp_1afbaed4b0d68594b345e48b9f4344bd57" refkind="member"><highlight class="normal">T<sp/><ref refid="_util_8hpp_1afbaed4b0d68594b345e48b9f4344bd57" kindref="member">pythag</ref>(T<sp/>a,<sp/>T<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt((pow(a,2))<sp/>+<sp/>(pow(b,2)))<sp/>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="66" refid="_util_8hpp_1a8512b81ec26f5821b8d439632bd4d8da" refkind="member"><highlight class="normal">T<sp/><ref refid="_util_8hpp_1a8512b81ec26f5821b8d439632bd4d8da" kindref="member">findSmallest_helper</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currSmallest,<sp/>vector&lt;T&gt;<sp/>cont)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vector&lt;T*&gt;<sp/>smallerElem<sp/>=<sp/>vector&lt;T*&gt;()<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>cont.size()<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>!=<sp/>cont.size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cont.at(currSmallest)<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cont.at(i)<sp/>&lt;<sp/>cont.at(currSmallest))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSmallest<sp/>=<sp/>i<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size--<sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cont.at(currSmallest)<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="84" refid="_util_8hpp_1a76ec7dcf8105a782f975edc9b86e0a88" refkind="member"><highlight class="normal">T<sp/><ref refid="_util_8hpp_1a76ec7dcf8105a782f975edc9b86e0a88" kindref="member">findSmallest</ref>(vector&lt;T&gt;<sp/>cont)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_util_8hpp_1a8512b81ec26f5821b8d439632bd4d8da" kindref="member">findSmallest_helper</ref>(0,<sp/>cont)<sp/>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="89" refid="_util_8hpp_1aa1ed00d48d918ed371ca406f442382e3" refkind="member"><highlight class="normal">T<sp/><ref refid="_util_8hpp_1aa1ed00d48d918ed371ca406f442382e3" kindref="member">findLargest_helper</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currLargest,<sp/>vector&lt;T&gt;<sp/>cont)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>cont.size()<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>!=<sp/>cont.size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cont.at(currLargest)<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cont.at(i)<sp/>&gt;<sp/>cont.at(currLargest))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currLargest<sp/>=<sp/>i<sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size--<sp/>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cont.at(currLargest)<sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="106" refid="_util_8hpp_1a6bef41ddbe95816fb0336b2847e0fa51" refkind="member"><highlight class="normal">T<sp/><ref refid="_util_8hpp_1a6bef41ddbe95816fb0336b2847e0fa51" kindref="member">findLargest</ref>(vector&lt;T&gt;<sp/>cont)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_util_8hpp_1aa1ed00d48d918ed371ca406f442382e3" kindref="member">findLargest_helper</ref>(0,<sp/>cont)<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_drawing" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_drawing" kindref="compound">Drawing</ref><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Draws<sp/>a<sp/>grid<sp/>representing<sp/>every<sp/>object<sp/>in<sp/>the<sp/>container.<sp/>Draws<sp/>an<sp/>icon<sp/>at<sp/>every</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>index<sp/>an<sp/>object<sp/>is<sp/>found.<sp/>It<sp/>calls<sp/>the<sp/>object&apos;s<sp/>getIcon(),<sp/>returning<sp/>a<sp/>std::string,</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>prints<sp/>that<sp/>at<sp/>each<sp/>index.<sp/>It<sp/>is<sp/>recommended<sp/>that<sp/>icon<sp/>consist<sp/>of<sp/>only<sp/>a<sp/>single<sp/>char<sp/>(though</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>stored<sp/>inside<sp/>a<sp/>string)<sp/>in<sp/>order<sp/>to<sp/>maintain<sp/>proportions.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Note:<sp/>If<sp/>the<sp/>class<sp/>stored<sp/>in<sp/>the<sp/>container<sp/>does<sp/>not<sp/>implement<sp/>getIcon()<sp/>returning<sp/>a<sp/>std::string,</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>code<sp/>will<sp/>not<sp/>compile.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>whiteSpace<sp/>The<sp/>character<sp/>to<sp/>be<sp/>printed<sp/>in<sp/>spaces<sp/>where<sp/>there<sp/>are<sp/>no<sp/>objects</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>writeTo<sp/>The<sp/>outputstream<sp/>(std::ostream)<sp/>that<sp/>will<sp/>receive<sp/>output</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw2DRepresentation(ostream<sp/>&amp;<sp/>writeTo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container<sp/>*<sp/>container,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>whitespace)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="131" refid="class_drawing_1a7812f3a85bf7e8ce9e098566d9ae9b40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_drawing_1a7812f3a85bf7e8ce9e098566d9ae9b40" kindref="member">Drawing::draw2DRepresentation</ref><sp/>(ostream<sp/>&amp;<sp/>writeTo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container<sp/>*<sp/>container,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>whitespace)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>container-&gt;at(0)-&gt;size()<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>container-&gt;size()<sp/>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(container-&gt;at(j)-&gt;at(i)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>container-&gt;at(j)-&gt;at(i)-&gt;getIcon()<sp/>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeTo<sp/>&lt;&lt;<sp/>c<sp/>;<sp/></highlight><highlight class="comment">/*-&gt;getIcon()*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//remove<sp/>*(<sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeTo<sp/>&lt;&lt;<sp/>whitespace<sp/>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeTo<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="148" refid="_util_8hpp_1a86a18f310871a1356c3d1c270d850e6c" refkind="member"><highlight class="normal">N<sp/><ref refid="_util_8hpp_1a86a18f310871a1356c3d1c270d850e6c" kindref="member">ceilling</ref>(N<sp/>n1,<sp/>N<sp/>n2)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1<sp/>&gt;=<sp/>n2)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n1<sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n2<sp/>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="158" refid="_util_8hpp_1adfb200439a96cc92fee115c89902e263" refkind="member"><highlight class="normal">N<sp/><ref refid="_util_8hpp_1adfb200439a96cc92fee115c89902e263" kindref="member">floor</ref>(N<sp/>n1,<sp/>N<sp/>n2)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n1<sp/>&lt;=<sp/>n2)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n1<sp/>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n2<sp/>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F<sp/>=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="comment">//<sp/>F<sp/>=<sp/>some<sp/>float<sp/>or<sp/>double,<sp/>I<sp/>=<sp/>some<sp/>unsigned,<sp/>int,<sp/>long,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" refkind="member"><highlight class="normal">I<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(F<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(F)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(F)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(F)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)))<sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>temp<sp/>=<sp/>(value<sp/>&gt;=<sp/>0.0f)<sp/>?<sp/>(<ref refid="_util_8hpp_1adfb200439a96cc92fee115c89902e263" kindref="member">floor</ref>(value<sp/>+<sp/>0.5f))<sp/>:<sp/>(ceil(value<sp/>-<sp/>0.5f))<sp/>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>round<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">I</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(temp)<sp/>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>catch<sp/>a<sp/>weird<sp/>problem<sp/>where<sp/>this<sp/>was<sp/>returning<sp/>a<sp/>negative<sp/>value<sp/>from<sp/>a<sp/>posititive<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(round<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>round<sp/>=<sp/>(round<sp/>*<sp/>-1)<sp/>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>round<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FloatPosition&gt;</highlight></codeline>
<codeline lineno="190" refid="_util_8hpp_1adb7c1051cb83f75fd714dd689879fc7b" refkind="member"><highlight class="normal">FloatPosition<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(FloatPosition<sp/>&amp;<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos.x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos.x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos.x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)))<sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos<sp/>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempX<sp/>=<sp/>roundFI(pos.getX())<sp/>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempY<sp/>=<sp/>roundFI(pos.getY())<sp/>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempZ<sp/>=<sp/>roundFI(pos.getZ())<sp/>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FloatPosition(tempX,<sp/>tempY,<sp/>tempZ)<sp/>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FloatPosition&gt;</highlight></codeline>
<codeline lineno="205" refid="_util_8hpp_1a4d98de8591edd668edd01c3f70cff420" refkind="member"><highlight class="normal">FloatPosition<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(FloatPosition<sp/>*<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos-&gt;x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos-&gt;x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos-&gt;x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)))<sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos<sp/>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempX<sp/>=<sp/>roundFI(pos-&gt;getX())<sp/>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempY<sp/>=<sp/>roundFI(pos-&gt;getY())<sp/>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempZ<sp/>=<sp/>roundFI(pos-&gt;getZ())<sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FloatPosition(tempX,<sp/>tempY,<sp/>tempZ)<sp/>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FloatPosition&gt;</highlight></codeline>
<codeline lineno="218" refid="_util_8hpp_1a69ee571c0262b8bd13653e1e347a2729" refkind="member"><highlight class="normal">FloatPosition<sp/>*<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(FloatPosition<sp/>*<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos-&gt;x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos-&gt;x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>||<sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(pos-&gt;x)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)))<sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempX<sp/>=<sp/>roundFI(pos-&gt;getX())<sp/>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempY<sp/>=<sp/>roundFI(pos-&gt;getY())<sp/>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>tempZ<sp/>=<sp/>roundFI(pos-&gt;getZ())<sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FloatPosition(tempX,<sp/>tempY,<sp/>tempZ)<sp/>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="231" refid="_util_8hpp_1a1c0f4d3de25ff70e2e2424c47c71f666" refkind="member"><highlight class="normal">SDL_Rect<sp/>&amp;<sp/><ref refid="_util_8hpp_1a1c0f4d3de25ff70e2e2424c47c71f666" kindref="member">operator*</ref>(N<sp/>n,<sp/>SDL_Rect<sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.w<sp/>=<sp/>n<sp/>*<sp/>rhs.w<sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.h<sp/>=<sp/>n<sp/>*<sp/>rhs.h<sp/>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>vec3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>vec2&gt;</highlight></codeline>
<codeline lineno="238" refid="_util_8hpp_1af2ffbe7b726877832c94239b5594058c" refkind="member"><highlight class="normal">SDL_Rect<sp/><ref refid="_util_8hpp_1af2ffbe7b726877832c94239b5594058c" kindref="member">convertToSDL_Rect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vec3<sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vec2<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Rect<sp/>shape<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>shape.x<sp/>=<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(position.getX())<sp/>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>shape.y<sp/>=<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(position.getY())<sp/>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>shape.w<sp/>=<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(size.getWidth())<sp/>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>shape.h<sp/>=<sp/><ref refid="_util_8hpp_1aa644e2b705ba2aaa26b6e42c7bf9c3ca" kindref="member">roundF</ref>(size.getHeight())<sp/>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape<sp/>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="_util_8hpp_1aef72576353996260a2b10791cf0ad505" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_util_8hpp_1aef72576353996260a2b10791cf0ad505" kindref="member">termWidth</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>atoi(getenv(</highlight><highlight class="stringliteral">&quot;COLUMNS&quot;</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="_util_8hpp_1a0396e69970502820446223a648670663" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_util_8hpp_1a0396e69970502820446223a648670663" kindref="member">termHeight</ref>()<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>atoi(getenv(</highlight><highlight class="stringliteral">&quot;LINES&quot;</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="268" refid="_util_8hpp_1a15c9b74884a2474fcc4e2b64e62646e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_util_8hpp_1a15c9b74884a2474fcc4e2b64e62646e1" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>app<sp/>=<sp/>to_string(rhs)<sp/>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>str<sp/>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>app<sp/>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="_util_8hpp_1af524ab944530cf69013e5064d3ba5cb4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_util_8hpp_1a15c9b74884a2474fcc4e2b64e62646e1" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>app(rhs)<sp/>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>str<sp/>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>app<sp/>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>powerup.<sp/>other<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_util_8hpp_1abd8ca9c349864d8fa0b0f30e8172be48" kindref="member">basicAlphabet</ref><sp/>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_util_8hpp_1a4c756e2902d65501d8bca292e0d08b5d" kindref="member">generateName</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)<sp/>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Util.hpp"/>
  </compounddef>
</doxygen>
