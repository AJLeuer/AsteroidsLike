<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_switchable_key_input_register" kind="class" prot="public">
    <compoundname>SwitchableKeyInputRegister</compoundname>
    <basecompoundref refid="class_key_input_register" prot="public" virt="non-virtual">KeyInputRegister</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::list&lt; SwitchableKeyInputRegister * &gt;</basecompoundref>
    <includes refid="_input_8hpp" local="no">Input.hpp</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_switchable_key_input_register" kindref="compound">SwitchableKeyInputRegister</ref> is a variant of <ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref> that can hold multiple callback functions (and members to call those functions on), as well as several different keyboard keys at the same time. This is in contrast to the single function pointer held in any <ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref>. The real advantage of <ref refid="class_switchable_key_input_register" kindref="compound">SwitchableKeyInputRegister</ref> is its ability to choose different callbacks based on a descending order of priority that is set when the <ref refid="class_switchable_key_input_register" kindref="compound">SwitchableKeyInputRegister</ref> is created. A <ref refid="class_switchable_key_input_register" kindref="compound">SwitchableKeyInputRegister</ref> is part of a linked-list of pointers to KeyInputRegisters or other SwitchableKeyInputRegisters, and each one is able to &quot;shut off&quot; subsequent members in its list from providing their callback functions. The list should be initialized with the highest priority KeyInputRegisters at the front, with the fallback, lower priority ones following. Any <ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref> or <ref refid="class_switchable_key_input_register" kindref="compound">SwitchableKeyInputRegister</ref>&apos;s callback function will only be called if callback function belonging to the <ref refid="class_key_input_register" kindref="compound">KeyInputRegister</ref> prior to it in the list was not. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="330">
        <label>SwitchableKeyInputRegister</label>
        <link refid="class_switchable_key_input_register"/>
        <childnode refid="331" relation="public-inheritance">
        </childnode>
        <childnode refid="333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="332">
        <label>EventRegisterBase</label>
        <link refid="class_event_register_base"/>
      </node>
      <node id="331">
        <label>KeyInputRegister</label>
        <link refid="class_key_input_register"/>
        <childnode refid="332" relation="public-inheritance">
        </childnode>
      </node>
      <node id="333">
        <label>std::list&lt;SwitchableKeyInputRegister *&gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="334">
        <label>SwitchableKeyInputRegister</label>
        <link refid="class_switchable_key_input_register"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
        <childnode refid="338" relation="public-inheritance">
        </childnode>
      </node>
      <node id="336">
        <label>EventRegisterBase</label>
        <link refid="class_event_register_base"/>
        <childnode refid="337" relation="usage">
          <edgelabel>memberToCallOn</edgelabel>
        </childnode>
      </node>
      <node id="335">
        <label>KeyInputRegister</label>
        <link refid="class_key_input_register"/>
        <childnode refid="336" relation="public-inheritance">
        </childnode>
      </node>
      <node id="337">
        <label>GameInterface</label>
        <link refid="class_game_interface"/>
      </node>
      <node id="338">
        <label>std::list&lt;SwitchableKeyInputRegister *&gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" line="368" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Input.hpp" bodystart="368" bodyend="370"/>
    <listofallmembers>
      <member refid="class_event_register_base_1ad28e4551bc4710d3a79ff5d5f3f50543" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>arg</name></member>
      <member refid="class_event_register_base_1a09c3207daecbf7df0da8e9a9c0d9fa46" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>callBack</name></member>
      <member refid="class_event_register_base_1a8fcbaadc872f483e42426960e159d4b4" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>callBackFunction</name></member>
      <member refid="class_key_input_register_1a0e5993cb2e93f288a4acf7d34da6edad" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>checkForPressedKeys</name></member>
      <member refid="class_event_register_base_1ab73e973655dabe4de4d5f261736a9201" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>EventRegisterBase</name></member>
      <member refid="class_event_register_base_1a63f991f6dd36375b4f845711481d0e8e" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>EventRegisterBase</name></member>
      <member refid="class_event_register_base_1ae5983e78604cc916282577c7ce0edc18" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>EventRegisterBase</name></member>
      <member refid="class_event_register_base_1ad7b93cb60058b038ba9a5e61a3d1e0b5" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>EventRegisterBase</name></member>
      <member refid="class_event_register_base_1a945b318dc066bd29c758e9bb78645c25" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>EventRegisterBase</name></member>
      <member refid="class_event_register_base_1a85aac264fad1290ad9b4119802401890" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>EventRegisterBase</name></member>
      <member refid="class_key_input_register_1a439b37fd3322d8957aa95d9775550db5" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>getScanCodeFor</name></member>
      <member refid="class_key_input_register_1a4f8b4b7572911432931bf6bd835f52ef" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>getScanCodeFor</name></member>
      <member refid="class_key_input_register_1a076a886cd83efe7d7aaa11f670d75e61" prot="protected" virt="virtual"><scope>SwitchableKeyInputRegister</scope><name>handleKeyboardInput</name></member>
      <member refid="class_key_input_register_1a21a7be17fdf11de9736f801ed23b3d5d" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyIdenMethod</name></member>
      <member refid="class_key_input_register_1adf60b0b21fcd0b52bf3c505528519b47" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>keyIDMethod</name></member>
      <member refid="class_key_input_register_1a6a51b43c1ceadda862deed824456434e" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1ac0c481b0e43fdad2965d547477412a89" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1a965d3c77c5f5edd8a6e376cd8bf0a55f" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1a19aa82ae77df55f40f3fcbbf37d6e78a" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1aa4e8032393db889d4835183891b4a4f5" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1a2fd8e4aeb3e624f4c6f86ba34481c4ee" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1a261ad3b9948e06fb843459393ee2489f" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1a27e34e2fc96aa8b92583c1dca8dcb0e7" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1abe0349140084c11d90cdf3f56278407f" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_key_input_register_1a255b4fcfd7ff93d8c81c4963dc77d424" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>KeyInputRegister</name></member>
      <member refid="class_event_register_base_1ad0d7c12c7c5c7176a48388cec7e74923" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>member_callBackFunction</name></member>
      <member refid="class_event_register_base_1a4747220b6d3bdaadda3adee1ad621d4e" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>memberToCallOn</name></member>
      <member refid="class_key_input_register_1a6ff79253202f3106320ed21e9f3eb803" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>requestedKeyboardChars</name></member>
      <member refid="class_key_input_register_1a15cc8379e648634a63e1bedd645d03c3" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>requestedKeyCodes</name></member>
      <member refid="class_key_input_register_1a99a156d91abafbd8a1f191d15158d1ba" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>requestedKeyEvalMethod</name></member>
      <member refid="class_key_input_register_1abc2af3b54d196eda9e64fdcd6da118d0" prot="protected" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>scanCodes</name></member>
      <member refid="class_key_input_register_1a5c01a99075e25878f2cb673d6341861b" prot="public" virt="non-virtual"><scope>SwitchableKeyInputRegister</scope><name>~KeyInputRegister</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
