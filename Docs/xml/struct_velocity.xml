<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="struct_velocity" kind="struct" prot="public">
    <compoundname>Velocity</compoundname>
    <includes refid="_velocity_8hpp" local="no">Velocity.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="struct_velocity_1a014fe36081e4170fc42b605048c6086c" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Velocity&lt; N &gt;::velocityMonitorInit</definition>
        <argsstring></argsstring>
        <name>velocityMonitorInit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="38" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1a4ebc19cb1b4fc60b609556073a1d8b36" prot="protected" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Velocity&lt; N &gt;::IDs</definition>
        <argsstring></argsstring>
        <name>IDs</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="39" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1a3815a4870a3cb81cf239d58e84eb9284" prot="protected" static="yes" mutable="no">
        <type>vector&lt; <ref refid="struct_velocity" kindref="compound">Velocity</ref> * &gt;</type>
        <definition>vector&lt; Velocity&lt; N &gt; * &gt; Velocity&lt; N &gt;::velocityStorage</definition>
        <argsstring></argsstring>
        <name>velocityStorage</name>
        <initializer>= vector&lt;<ref refid="struct_velocity" kindref="compound">Velocity</ref>&lt;N&gt; *&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="40" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="struct_velocity_1a3f33b62ecfeeeb79c13cd732fbb3a05c" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Velocity&lt; N &gt;::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="43" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1a3f3d268a5d9452ad912c19cfcc7c0394" prot="protected" static="no" mutable="no">
        <type>const <ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref> *</type>
        <definition>const Distance* Velocity&lt; N &gt;::distance</definition>
        <argsstring></argsstring>
        <name>distance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="44" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1a99f61fd4486ecad5fdbf0c8d3da8c4a0" prot="protected" static="no" mutable="no">
        <type><ref refid="class_timer" kindref="compound">Timer</ref> *</type>
        <definition>Timer* Velocity&lt; N &gt;::timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="45" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1a099e0c3e044ce52e11b1e7ab225f896c" prot="protected" static="no" mutable="no">
        <type>bool *</type>
        <definition>bool* Velocity&lt; N &gt;::localContinueSignal</definition>
        <argsstring></argsstring>
        <name>localContinueSignal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="46" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1a4a65b272ce588eab6a9a9fa1fdb94a01" prot="protected" static="no" mutable="no">
        <type><ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref></type>
        <definition>Distance Velocity&lt; N &gt;::lastDistance</definition>
        <argsstring></argsstring>
        <name>lastDistance</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="48" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1a70e2af5664f11aeb266920916c271712" prot="protected" static="no" mutable="no">
        <type>chrono::nanoseconds</type>
        <definition>chrono::nanoseconds Velocity&lt; N &gt;::baseTimeUnit</definition>
        <argsstring></argsstring>
        <name>baseTimeUnit</name>
        <initializer>= std::chrono::milliseconds(30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The unit of time that will function as the denominator for this <ref refid="struct_velocity" kindref="compound">Velocity</ref> object. By default it is 64 milliseconds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="54" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_velocity_1acb312e3b7523314efd771a52fe8f2982" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Velocity&lt; N &gt;::lastVelocity</definition>
        <argsstring></argsstring>
        <name>lastVelocity</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="56" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_velocity_1a68112c2f090288d4921a53a21390eac8" prot="public" static="yes" mutable="no">
        <type><ref refid="class_basic_mutex" kindref="compound">BasicMutex</ref> *</type>
        <definition>BasicMutex * Velocity&lt; N &gt;::sharedVelMutex</definition>
        <argsstring></argsstring>
        <name>sharedVelMutex</name>
        <initializer>= new <ref refid="class_basic_mutex" kindref="compound">BasicMutex</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="65" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="struct_velocity_1a7676bfee3f05da2e4ced84c838f0c1c6" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Velocity&lt; N &gt;::calculateVelocity</definition>
        <argsstring>()</argsstring>
        <name>calculateVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="58" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="170" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_velocity_1af8c34fb6b57a667c06e7baa1801f5df9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const vector&lt; <ref refid="struct_velocity" kindref="compound">Velocity</ref> * &gt; *</type>
        <definition>static const vector&lt;Velocity *&gt;* Velocity&lt; N &gt;::getVelocityStorage</definition>
        <argsstring>()</argsstring>
        <name>getVelocityStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="67" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1ab96b02fb83753526f730e2c5b0337a62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Velocity&lt; N &gt;::monitorVelocity</definition>
        <argsstring>()</argsstring>
        <name>monitorVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="69" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="156" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_velocity_1a5a7fc681247a544a000718a35c202958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Velocity&lt; N &gt;::Velocity</definition>
        <argsstring>(const Distance *distance, mutex *mut, bool *localContinueSignal)</argsstring>
        <name>Velocity</name>
        <param>
          <type>const <ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref> *</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>mutex *</type>
          <declname>mut</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>localContinueSignal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="struct_velocity" kindref="compound">Velocity</ref> object. Distance is a pointer that should increase in value as the caller moves. When <ref refid="struct_velocity" kindref="compound">Velocity</ref> detects that distance has changed from its initial value, it will begin monitoring speed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the distance covered by the client class, which <ref refid="struct_velocity" kindref="compound">Velocity</ref> expects to change over time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mut</parametername>
</parameternamelist>
<parameterdescription>
<para>A mutex shared with <ref refid="struct_velocity" kindref="compound">Velocity</ref> that should be locked when this velocity or distance is about to be deleted </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="80" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="80" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1ab501061b7933ea4bf8d722b5e092972a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Velocity&lt; N &gt;::Velocity</definition>
        <argsstring>(const Distance *distance, mutex *mut, bool *localContinueSignal, chrono::nanoseconds baseTimeUnitOverride)</argsstring>
        <name>Velocity</name>
        <param>
          <type>const <ref refid="_velocity_8hpp_1a29fbe3dd3ce308a36d5b29488daddcaa" kindref="member">Distance</ref> *</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>mutex *</type>
          <declname>mut</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>localContinueSignal</declname>
        </param>
        <param>
          <type>chrono::nanoseconds</type>
          <declname>baseTimeUnitOverride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="97" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="97" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1a8763237baab85450aeadd2f1df96c6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Velocity&lt; N &gt;::Velocity</definition>
        <argsstring>(const Velocity &amp;other)=delete</argsstring>
        <name>Velocity</name>
        <param>
          <type>const <ref refid="struct_velocity" kindref="compound">Velocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1a5311e10fd1ff6dff1656507d5a7d3d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Velocity&lt; N &gt;::Velocity</definition>
        <argsstring>(Velocity &amp;&amp;other)=delete</argsstring>
        <name>Velocity</name>
        <param>
          <type><ref refid="struct_velocity" kindref="compound">Velocity</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1a328da698ec2f9cbf0de0ab519b6d7f50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Velocity&lt; N &gt;::~Velocity</definition>
        <argsstring>()</argsstring>
        <name>~Velocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="118" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="118" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1a46e6358260ffa948eb21b1e235960e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_velocity" kindref="compound">Velocity</ref> &amp;</type>
        <definition>Velocity&amp; Velocity&lt; N &gt;::operator=</definition>
        <argsstring>(const Velocity &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="struct_velocity" kindref="compound">Velocity</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1a0b9ef6d1f184b6012a2dcc3b7a65539e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_velocity" kindref="compound">Velocity</ref> &amp;</type>
        <definition>Velocity&amp; Velocity&lt; N &gt;::operator=</definition>
        <argsstring>(Velocity &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="struct_velocity" kindref="compound">Velocity</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_velocity_1a39c1fe5e6fc453aa435a648d6ce5ef05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Velocity&lt; N &gt;::getValue</definition>
        <argsstring>()</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="137" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="360">
        <label>Velocity&lt; N &gt;</label>
        <link refid="struct_velocity"/>
        <childnode refid="361" relation="usage">
          <edgelabel>sharedVelMutex</edgelabel>
        </childnode>
        <childnode refid="363" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
      </node>
      <node id="361">
        <label>BasicMutex</label>
        <link refid="class_basic_mutex"/>
        <childnode refid="362" relation="public-inheritance">
        </childnode>
      </node>
      <node id="363">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="362">
        <label>mutex</label>
      </node>
    </collaborationgraph>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" line="32" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Velocity.hpp" bodystart="32" bodyend="141"/>
    <listofallmembers>
      <member refid="struct_velocity_1a70e2af5664f11aeb266920916c271712" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>baseTimeUnit</name></member>
      <member refid="struct_velocity_1a7676bfee3f05da2e4ced84c838f0c1c6" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>calculateVelocity</name></member>
      <member refid="struct_velocity_1a3f3d268a5d9452ad912c19cfcc7c0394" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>distance</name></member>
      <member refid="struct_velocity_1a39c1fe5e6fc453aa435a648d6ce5ef05" prot="public" virt="non-virtual"><scope>Velocity</scope><name>getValue</name></member>
      <member refid="struct_velocity_1af8c34fb6b57a667c06e7baa1801f5df9" prot="public" virt="non-virtual"><scope>Velocity</scope><name>getVelocityStorage</name></member>
      <member refid="struct_velocity_1a3f33b62ecfeeeb79c13cd732fbb3a05c" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>id</name></member>
      <member refid="struct_velocity_1a4ebc19cb1b4fc60b609556073a1d8b36" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>IDs</name></member>
      <member refid="struct_velocity_1a4a65b272ce588eab6a9a9fa1fdb94a01" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>lastDistance</name></member>
      <member refid="struct_velocity_1acb312e3b7523314efd771a52fe8f2982" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>lastVelocity</name></member>
      <member refid="struct_velocity_1a099e0c3e044ce52e11b1e7ab225f896c" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>localContinueSignal</name></member>
      <member refid="struct_velocity_1ab96b02fb83753526f730e2c5b0337a62" prot="public" virt="non-virtual"><scope>Velocity</scope><name>monitorVelocity</name></member>
      <member refid="struct_velocity_1a46e6358260ffa948eb21b1e235960e56" prot="public" virt="non-virtual"><scope>Velocity</scope><name>operator=</name></member>
      <member refid="struct_velocity_1a0b9ef6d1f184b6012a2dcc3b7a65539e" prot="public" virt="non-virtual"><scope>Velocity</scope><name>operator=</name></member>
      <member refid="struct_velocity_1a68112c2f090288d4921a53a21390eac8" prot="public" virt="non-virtual"><scope>Velocity</scope><name>sharedVelMutex</name></member>
      <member refid="struct_velocity_1a99f61fd4486ecad5fdbf0c8d3da8c4a0" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>timer</name></member>
      <member refid="struct_velocity_1a5a7fc681247a544a000718a35c202958" prot="public" virt="non-virtual"><scope>Velocity</scope><name>Velocity</name></member>
      <member refid="struct_velocity_1ab501061b7933ea4bf8d722b5e092972a" prot="public" virt="non-virtual"><scope>Velocity</scope><name>Velocity</name></member>
      <member refid="struct_velocity_1a8763237baab85450aeadd2f1df96c6ec" prot="public" virt="non-virtual"><scope>Velocity</scope><name>Velocity</name></member>
      <member refid="struct_velocity_1a5311e10fd1ff6dff1656507d5a7d3d19" prot="public" virt="non-virtual"><scope>Velocity</scope><name>Velocity</name></member>
      <member refid="struct_velocity_1a014fe36081e4170fc42b605048c6086c" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>velocityMonitorInit</name></member>
      <member refid="struct_velocity_1a3815a4870a3cb81cf239d58e84eb9284" prot="protected" virt="non-virtual"><scope>Velocity</scope><name>velocityStorage</name></member>
      <member refid="struct_velocity_1a328da698ec2f9cbf0de0ab519b6d7f50" prot="public" virt="non-virtual"><scope>Velocity</scope><name>~Velocity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
