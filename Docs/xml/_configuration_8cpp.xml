<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_configuration_8cpp" kind="file">
    <compoundname>Configuration.cpp</compoundname>
    <includes refid="_configuration_8h" local="yes">Configuration.h</includes>
    <includes refid="_position_8hpp" local="yes">../Util/Position.hpp</includes>
    <incdepgraph>
      <node id="23">
        <label>iomanip</label>
      </node>
      <node id="17">
        <label>queue</label>
      </node>
      <node id="29">
        <label>limits</label>
      </node>
      <node id="26">
        <label>BasicConcurrency.h</label>
        <link refid="_basic_concurrency_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>assert.h</label>
      </node>
      <node id="2">
        <label>SDL2/SDL_video.h</label>
      </node>
      <node id="25">
        <label>Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>ostream</label>
      </node>
      <node id="28">
        <label>GameRandom.hpp</label>
        <link refid="_game_random_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>random</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="1">
        <label>Configuration.h</label>
        <link refid="_configuration_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>Velocity.hpp</label>
        <link refid="_velocity_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../Util/Util.hpp</label>
        <link refid="_util_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="0">
        <label>/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp</label>
        <link refid="Configuration.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>deque</label>
      </node>
      <node id="13">
        <label>DefaultConfig.h</label>
        <link refid="_default_config_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>BoundsCheck.hpp</label>
        <link refid="_bounds_check_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>mutex</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>SDL2/SDL_rect.h</label>
      </node>
      <node id="14">
        <label>../Util/Position.hpp</label>
        <link refid="_position_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>thread</label>
      </node>
      <node id="19">
        <label>Debug.h</label>
        <link refid="_debug_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../Output/DisplayData.h</label>
        <link refid="_display_data_8h"/>
      </node>
      <node id="27">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_configuration_8cpp_1a07ab1fd42c9799397c8e19cb7caeb952" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool debugToSTDOutput</definition>
        <argsstring></argsstring>
        <name>debugToSTDOutput</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="18" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1a0883674bec5904f8cf5387b994a48441" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned RESOLUTION_X_BASE_VALUE</definition>
        <argsstring></argsstring>
        <name>RESOLUTION_X_BASE_VALUE</name>
        <initializer>= <ref refid="_default_config_8h_1a92e325d537cd4c48c70ca8e520bc688d" kindref="member">DEFAULT_W_MAX_X</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refer to RESOLUTION_X_BASE_VALUE and RESOLUTION_Y_BASE_VALUE only for telling the OS or renderer how large our window should be. Everything else should refer to <ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX()</ref> and <ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY()</ref>. RESOLUTION_X_BASE_VALUE and RESOLUTION_Y_BASE_VALUE give only the number of LOGICAL pixels, which can be represented by a varying number of physical pixels, depending on DPI settings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="25" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1a680fb8409e08ca7e389c2d4d09a0ffc2" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned RESOLUTION_Y_BASE_VALUE</definition>
        <argsstring></argsstring>
        <name>RESOLUTION_Y_BASE_VALUE</name>
        <initializer>= <ref refid="_default_config_8h_1a0536d1b3790b513b64c65e18166629d7" kindref="member">DEFAULT_W_MAX_Y</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refer to RESOLUTION_X_BASE_VALUE and RESOLUTION_Y_BASE_VALUE only for telling the OS or renderer how large our window should be. Everything else should refer to <ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX()</ref> and <ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY()</ref>. RESOLUTION_X_BASE_VALUE and RESOLUTION_Y_BASE_VALUE give only the number of LOGICAL pixels, which can be represented by a varying number of physical pixels, depending on DPI settings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="26" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1ab2c243d20ce249e96be7ac00e26a64c3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int WINDOW_ARGS</definition>
        <argsstring></argsstring>
        <name>WINDOW_ARGS</name>
        <initializer>= (SDL_WINDOW_OPENGL|SDL_WINDOW_SHOWN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="41" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1afeb18de002598fc0c50dfe027e659132" prot="public" static="no" mutable="no">
        <type>chrono::nanoseconds</type>
        <definition>chrono::nanoseconds refreshTime</definition>
        <argsstring></argsstring>
        <name>refreshTime</name>
        <initializer>= <ref refid="_default_config_8h_1ac36b77bff4c5ed6b583f1ff1e58e44a8" kindref="member">one_millisecond</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="43" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1a25c9c62b009e902fbbedb299ebcda7c5" prot="public" static="no" mutable="no">
        <type>chrono::milliseconds</type>
        <definition>chrono::milliseconds defaultSleepTime</definition>
        <argsstring></argsstring>
        <name>defaultSleepTime</name>
        <initializer>= chrono::milliseconds(240)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="45" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1a7b9b09b83bfa0585799d78e5318378b2" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char JUMP_KEY</definition>
        <argsstring></argsstring>
        <name>JUMP_KEY</name>
        <initializer>=         &apos; &apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="47" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1aa36a92027a8527dffbd7e46684380044" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* MOVE_UP_KEY</definition>
        <argsstring></argsstring>
        <name>MOVE_UP_KEY</name>
        <initializer>= (char *)&quot;W&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="48" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1a82c876f78f0b8d2905f61b2ed96f458a" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* MOVE_DOWN_KEY</definition>
        <argsstring></argsstring>
        <name>MOVE_DOWN_KEY</name>
        <initializer>= (char *)&quot;S&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="49" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1ac7cc7482a320b78bd2c6f169d2fc6a66" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* MOVE_LEFT_KEY</definition>
        <argsstring></argsstring>
        <name>MOVE_LEFT_KEY</name>
        <initializer>= (char *)&quot;A&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="50" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_configuration_8cpp_1ad6210b2a6bac421be6611d6620b7c081" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* MOVE_RIGHT_KEY</definition>
        <argsstring></argsstring>
        <name>MOVE_RIGHT_KEY</name>
        <initializer>= (char *)&quot;D&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="51" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_configuration_8cpp_1ac52cbe2be8df57c4bcb888fae55550a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned globalMaxX</definition>
        <argsstring>()</argsstring>
        <name>globalMaxX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="21" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="_configuration_8cpp_1aecae0abd5507af9315ddeb2ce60d7997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned globalMaxY</definition>
        <argsstring>()</argsstring>
        <name>globalMaxY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="22" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned windowSizeX</definition>
        <argsstring>()</argsstring>
        <name>windowSizeX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Any function that needs information about the size of the window should refer to <ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX()</ref> or <ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY()</ref>. Unlike RESOLUTION_X_BASE_VALUE and RESOLUTION_Y_BASE_VALUE, these values will vary depending on our DPI settings. <ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX()</ref> and <ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY()</ref> always give the ACTUAL number of pixels, regardless of DPI settings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="29" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned windowSizeY</definition>
        <argsstring>()</argsstring>
        <name>windowSizeY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Any function that needs information about the size of the window should refer to <ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX()</ref> or <ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY()</ref>. Unlike RESOLUTION_X_BASE_VALUE and RESOLUTION_Y_BASE_VALUE, these values will vary depending on our DPI settings. <ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX()</ref> and <ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY()</ref> always give the ACTUAL number of pixels, regardless of DPI settings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="33" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_configuration_8cpp_1a425547ae4cbf8ec47a32aafcb60f4f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_resolution" kindref="compound">Resolution</ref>&lt; unsigned &gt; *</type>
        <definition>Resolution&lt;unsigned&gt;* currentResolution</definition>
        <argsstring>()</argsstring>
        <name>currentResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current resolution. Delete when done using. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="37" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_configuration_8cpp_1aa5073db454d3c1b3190f52bba2a934ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_resolution" kindref="compound">Resolution</ref>&lt; unsigned &gt; *</type>
        <definition>Resolution&lt;unsigned&gt;* currentResolutionBaseValue</definition>
        <argsstring>()</argsstring>
        <name>currentResolutionBaseValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current resolution, with no adjustments made for DPI. Use with caution. Delete when done using. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" line="39" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp" bodystart="39" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Configuration.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>World</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Adam<sp/>James<sp/>Leuer<sp/>on<sp/>5/25/14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Adam<sp/>James<sp/>Leuer.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_configuration_8h" kindref="compound">Configuration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Util/Position.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std<sp/>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Many<sp/>of<sp/>these<sp/>values<sp/>will<sp/>be<sp/>overridden<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//define<sp/>extern<sp/>values<sp/>from<sp/>DefaultConfig.h<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_default_config_8h_1a07ab1fd42c9799397c8e19cb7caeb952" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1a07ab1fd42c9799397c8e19cb7caeb952" kindref="member">debugToSTDOutput</ref><sp/>=<sp/>true<sp/>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>May<sp/>be<sp/>larger<sp/>than<sp/>window<sp/>size<sp/>to<sp/>give<sp/>us<sp/>buffer<sp/>space<sp/>outside<sp/>the<sp/>window<sp/>margins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="_default_config_8h_1ac52cbe2be8df57c4bcb888fae55550a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1ac52cbe2be8df57c4bcb888fae55550a6" kindref="member">globalMaxX</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1a0883674bec5904f8cf5387b994a48441" kindref="member">RESOLUTION_X_BASE_VALUE</ref><sp/>*<sp/><ref refid="struct_display_data_1a2a81928e08c2ad29c99c64b6f20146ab" kindref="member">DisplayData::getDisplayScalingFactor</ref>()<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="22" refid="_default_config_8h_1aecae0abd5507af9315ddeb2ce60d7997" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1aecae0abd5507af9315ddeb2ce60d7997" kindref="member">globalMaxY</ref>()<sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1a680fb8409e08ca7e389c2d4d09a0ffc2" kindref="member">RESOLUTION_Y_BASE_VALUE</ref><sp/>*<sp/><ref refid="struct_display_data_1a2a81928e08c2ad29c99c64b6f20146ab" kindref="member">DisplayData::getDisplayScalingFactor</ref>()<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//will<sp/>probably<sp/>be<sp/>changed<sp/>from<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="_default_config_8h_1a0883674bec5904f8cf5387b994a48441" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1a0883674bec5904f8cf5387b994a48441" kindref="member">RESOLUTION_X_BASE_VALUE</ref><sp/>=<sp/><ref refid="_default_config_8h_1a92e325d537cd4c48c70ca8e520bc688d" kindref="member">DEFAULT_W_MAX_X</ref><sp/><sp/>;</highlight></codeline>
<codeline lineno="26" refid="_default_config_8h_1a680fb8409e08ca7e389c2d4d09a0ffc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1a680fb8409e08ca7e389c2d4d09a0ffc2" kindref="member">RESOLUTION_Y_BASE_VALUE</ref><sp/>=<sp/><ref refid="_default_config_8h_1a0536d1b3790b513b64c65e18166629d7" kindref="member">DEFAULT_W_MAX_Y</ref><sp/><sp/>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Default<sp/>values,<sp/>will<sp/>most<sp/>likely<sp/>be<sp/>changed<sp/>by<sp/>Configuration::init()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="_default_config_8h_1af975e951ca8f8d12ff565e2e91e955d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_configuration_8cpp_1a0883674bec5904f8cf5387b994a48441" kindref="member">RESOLUTION_X_BASE_VALUE</ref><sp/>*<sp/><ref refid="struct_display_data_1a2a81928e08c2ad29c99c64b6f20146ab" kindref="member">DisplayData::getDisplayScalingFactor</ref>())<sp/>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="_default_config_8h_1aa80a8ec2640c5f9f5ffcbb87d0677081" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_configuration_8cpp_1a680fb8409e08ca7e389c2d4d09a0ffc2" kindref="member">RESOLUTION_Y_BASE_VALUE</ref><sp/>*<sp/><ref refid="struct_display_data_1a2a81928e08c2ad29c99c64b6f20146ab" kindref="member">DisplayData::getDisplayScalingFactor</ref>())<sp/>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_default_config_8h_1a425547ae4cbf8ec47a32aafcb60f4f32" refkind="member"><highlight class="normal"><ref refid="struct_resolution" kindref="compound">Resolution&lt;unsigned&gt;</ref><sp/>*<sp/><ref refid="_configuration_8cpp_1a425547ae4cbf8ec47a32aafcb60f4f32" kindref="member">currentResolution</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_resolution" kindref="compound">Resolution&lt;unsigned&gt;</ref>(<ref refid="_configuration_8cpp_1af975e951ca8f8d12ff565e2e91e955d2" kindref="member">windowSizeX</ref>(),<sp/><ref refid="_configuration_8cpp_1aa80a8ec2640c5f9f5ffcbb87d0677081" kindref="member">windowSizeY</ref>())<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="_default_config_8h_1aa5073db454d3c1b3190f52bba2a934ea" refkind="member"><highlight class="normal"><ref refid="struct_resolution" kindref="compound">Resolution&lt;unsigned&gt;</ref><sp/>*<sp/><ref refid="_configuration_8cpp_1aa5073db454d3c1b3190f52bba2a934ea" kindref="member">currentResolutionBaseValue</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_resolution" kindref="compound">Resolution&lt;unsigned&gt;</ref>(<ref refid="_configuration_8cpp_1a0883674bec5904f8cf5387b994a48441" kindref="member">RESOLUTION_X_BASE_VALUE</ref>,<sp/><ref refid="_configuration_8cpp_1a680fb8409e08ca7e389c2d4d09a0ffc2" kindref="member">RESOLUTION_Y_BASE_VALUE</ref>)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_default_config_8h_1ab2c243d20ce249e96be7ac00e26a64c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_configuration_8cpp_1ab2c243d20ce249e96be7ac00e26a64c3" kindref="member">WINDOW_ARGS</ref><sp/>=<sp/>(SDL_WINDOW_OPENGL|SDL_WINDOW_SHOWN)<sp/>;<sp/></highlight><highlight class="comment">/*<sp/>will<sp/>always<sp/>need<sp/>proper<sp/>initialization<sp/>to<sp/>check<sp/>for<sp/>DPI<sp/>changes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="_default_config_8h_1afeb18de002598fc0c50dfe027e659132" refkind="member"><highlight class="normal">chrono::nanoseconds<sp/><ref refid="_configuration_8cpp_1afeb18de002598fc0c50dfe027e659132" kindref="member">refreshTime</ref><sp/>=<sp/><ref refid="_default_config_8h_1ac36b77bff4c5ed6b583f1ff1e58e44a8" kindref="member">one_millisecond</ref><sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_default_config_8h_1a25c9c62b009e902fbbedb299ebcda7c5" refkind="member"><highlight class="normal">chrono::milliseconds<sp/><ref refid="_configuration_8cpp_1a25c9c62b009e902fbbedb299ebcda7c5" kindref="member">defaultSleepTime</ref><sp/>=<sp/>chrono::milliseconds(240)<sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="_default_config_8h_1a7b9b09b83bfa0585799d78e5318378b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="_configuration_8cpp_1a7b9b09b83bfa0585799d78e5318378b2" kindref="member">JUMP_KEY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="48" refid="_default_config_8h_1aa36a92027a8527dffbd7e46684380044" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_configuration_8cpp_1aa36a92027a8527dffbd7e46684380044" kindref="member">MOVE_UP_KEY</ref><sp/><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="49" refid="_default_config_8h_1a82c876f78f0b8d2905f61b2ed96f458a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_configuration_8cpp_1a82c876f78f0b8d2905f61b2ed96f458a" kindref="member">MOVE_DOWN_KEY</ref><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="50" refid="_default_config_8h_1ac7cc7482a320b78bd2c6f169d2fc6a66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_configuration_8cpp_1ac7cc7482a320b78bd2c6f169d2fc6a66" kindref="member">MOVE_LEFT_KEY</ref><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="51" refid="_default_config_8h_1ad6210b2a6bac421be6611d6620b7c081" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_configuration_8cpp_1ad6210b2a6bac421be6611d6620b7c081" kindref="member">MOVE_RIGHT_KEY</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_configuration_1ab18e1dd4f2052c1b7c73ac12ec8c3965" kindref="member">Configuration::isInit</ref><sp/>=<sp/>false<sp/>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">ifstream<sp/>Configuration::configFile(</highlight><highlight class="stringliteral">&quot;/Settings/Setting.cfg&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_configuration_1a83a5078966294216bb61a4dae6d42e0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_configuration_1a83a5078966294216bb61a4dae6d42e0e" kindref="member">Configuration::init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>any<sp/>user<sp/>requested<sp/>changes<sp/>from<sp/>values<sp/>in<sp/>default<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>doUserOverrides()<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>adjustForHiDPI()<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>isInit<sp/>=<sp/>true<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Configuration::doUserOverrides()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//e.g.<sp/>user<sp/>may<sp/>want<sp/>to<sp/>change<sp/>LOGICAL_WINDOW_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Configuration::adjustForHiDPI()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_display_data_1a44babea5f172f58a4b140fb1c02e68ba" kindref="member">DisplayData::hiDPI</ref>())<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_configuration_8cpp_1ab2c243d20ce249e96be7ac00e26a64c3" kindref="member">WINDOW_ARGS</ref><sp/>=<sp/>(SDL_WINDOW_ALLOW_HIGHDPI|SDL_WINDOW_OPENGL|SDL_WINDOW_SHOWN)<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>change<sp/>to<sp/>window<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_configuration_8cpp_1ab2c243d20ce249e96be7ac00e26a64c3" kindref="member">WINDOW_ARGS</ref><sp/>=<sp/>(SDL_WINDOW_OPENGL|SDL_WINDOW_SHOWN)<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_configuration_1a7e976cf9d781268e3a6cd1afc977f9ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_configuration_1a7e976cf9d781268e3a6cd1afc977f9ce" kindref="member">Configuration::globalScalingValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInit<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init()<sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>factor<sp/>that<sp/>when<sp/>multiplied<sp/>by<sp/>our<sp/>base<sp/>resolution</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>gives<sp/>the<sp/>current<sp/>resolution<sp/>-<sp/>everything<sp/>else<sp/>needs<sp/>to<sp/>be<sp/>multiplied</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>by<sp/>that<sp/>same<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resolution" kindref="compound">Resolution&lt;unsigned&gt;</ref><sp/>refResolution(<ref refid="_default_config_8h_1a1089d49fa46382a1ee0b695c4f959288" kindref="member">MAX_X_REFERENCE_VAL</ref>,<sp/><ref refid="_default_config_8h_1a92aa2dfbd93a2e524b5352cf7f12e99d" kindref="member">MAX_Y_REFERENCE_VAL</ref>)<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currentRes<sp/>=<sp/><ref refid="_configuration_8cpp_1aa5073db454d3c1b3190f52bba2a934ea" kindref="member">currentResolutionBaseValue</ref>()<sp/>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>*currentRes<sp/>/<sp/>refResolution<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>currentRes<sp/>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factor<sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Control/Configuration.cpp"/>
  </compounddef>
</doxygen>
