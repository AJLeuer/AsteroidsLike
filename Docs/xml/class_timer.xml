<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_timer" kind="class" prot="public">
    <compoundname>Timer</compoundname>
    <includes refid="_timer_8hpp" local="no">Timer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_timer_1a536ff12c79d26bc4e29f17c2e3199c2f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Timer::timerStarted</definition>
        <argsstring></argsstring>
        <name>timerStarted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="27" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_timer_1a732511496af1a49dc5947ee4930c0cbe" prot="private" static="no" mutable="no">
        <type>chrono::time_point&lt; std::chrono::steady_clock, std::chrono::nanoseconds &gt;</type>
        <definition>chrono::time_point&lt;std::chrono::steady_clock, std::chrono::nanoseconds&gt; Timer::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="29" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_timer_1a5f16e8da27d2a5a5242dead46de05d97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Timer::Timer</definition>
        <argsstring>()</argsstring>
        <name>Timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="34" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp" bodystart="7" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="class_timer_1a0edd539085fac3d019a3465bab2ef3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Timer::Timer</definition>
        <argsstring>(Timer &amp;&amp;other)</argsstring>
        <name>Timer</name>
        <param>
          <type><ref refid="class_timer" kindref="compound">Timer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="36" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_timer_1a14fa469c4c295c5fa6e66a4ad1092146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Timer::~Timer</definition>
        <argsstring>()</argsstring>
        <name>~Timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="38" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_timer_1afbca4871f4efb5aafb3078655ef9dda0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_timer" kindref="compound">Timer</ref> &amp;</type>
        <definition>Timer &amp; Timer::operator=</definition>
        <argsstring>(Timer &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_timer" kindref="compound">Timer</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="40" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp" bodystart="13" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_timer_1aa8c887576ec3b0d68c10ebf4097c367c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::startTimer</definition>
        <argsstring>()</argsstring>
        <name>startTimer</name>
        <briefdescription>
<para>Starts the timer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="45" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp" bodystart="21" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_timer_1a0ef64385b0e418f5caf8a61f254a8800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds Timer::checkTimeElapsed</definition>
        <argsstring>()</argsstring>
        <name>checkTimeElapsed</name>
        <briefdescription>
<para>Checks the time elapsed since <ref refid="class_timer_1aa8c887576ec3b0d68c10ebf4097c367c" kindref="member">startTimer()</ref> was called. Unlike <ref refid="class_timer_1a3e55a0766fdb73df26dc4705641eccb6" kindref="member">stopTimer()</ref>, this function will not stop the timer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>1 millisecond = 1000000 nanoseconds</para></simplesect>
<simplesect kind="return"><para>The time elapsed in nanoseconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="55" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp" bodystart="31" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_timer_1a3e55a0766fdb73df26dc4705641eccb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds Timer::stopTimer</definition>
        <argsstring>()</argsstring>
        <name>stopTimer</name>
        <briefdescription>
<para>Stops timer and returns the time elapsed since <ref refid="class_timer_1aa8c887576ec3b0d68c10ebf4097c367c" kindref="member">startTimer()</ref> was called. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>1 millisecond = 1000000 nanoseconds</para></simplesect>
<simplesect kind="return"><para>The time elapsed in nanoseconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="64" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.cpp" bodystart="42" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class providing simple nanosecond-precision timing facilities. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" line="23" column="1" bodyfile="/Volumes/OS X HDD/Users/Adam/Developer/SpriteFight/Util/Timer.hpp" bodystart="23" bodyend="65"/>
    <listofallmembers>
      <member refid="class_timer_1a0ef64385b0e418f5caf8a61f254a8800" prot="public" virt="non-virtual"><scope>Timer</scope><name>checkTimeElapsed</name></member>
      <member refid="class_timer_1afbca4871f4efb5aafb3078655ef9dda0" prot="public" virt="non-virtual"><scope>Timer</scope><name>operator=</name></member>
      <member refid="class_timer_1a732511496af1a49dc5947ee4930c0cbe" prot="private" virt="non-virtual"><scope>Timer</scope><name>start</name></member>
      <member refid="class_timer_1aa8c887576ec3b0d68c10ebf4097c367c" prot="public" virt="non-virtual"><scope>Timer</scope><name>startTimer</name></member>
      <member refid="class_timer_1a3e55a0766fdb73df26dc4705641eccb6" prot="public" virt="non-virtual"><scope>Timer</scope><name>stopTimer</name></member>
      <member refid="class_timer_1a5f16e8da27d2a5a5242dead46de05d97" prot="public" virt="non-virtual"><scope>Timer</scope><name>Timer</name></member>
      <member refid="class_timer_1a0edd539085fac3d019a3465bab2ef3c2" prot="public" virt="non-virtual"><scope>Timer</scope><name>Timer</name></member>
      <member refid="class_timer_1a536ff12c79d26bc4e29f17c2e3199c2f" prot="private" virt="non-virtual"><scope>Timer</scope><name>timerStarted</name></member>
      <member refid="class_timer_1a14fa469c4c295c5fa6e66a4ad1092146" prot="public" virt="non-virtual"><scope>Timer</scope><name>~Timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
